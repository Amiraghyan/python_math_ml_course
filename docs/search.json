[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Python Math & ML Course",
    "section": "",
    "text": "1 üîó ‘ø’°÷Ä÷á’∏÷Ä ’∞’≤’∏÷Ç’¥’∂’•÷Ä’ù\nToDo any, all",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Python, Math, Machine Learning Course</span>"
    ]
  },
  {
    "objectID": "index.html#print-comments-÷É’∏÷É’∏’≠’°’Ø’°’∂’∂’•÷Ä-’©’æ’•÷Ä-÷á-’©’æ’°’¢’°’∂’°’Ø’°’∂-’£’∏÷Ä’Æ’∏’≤’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä-input",
    "href": "index.html#print-comments-÷É’∏÷É’∏’≠’°’Ø’°’∂’∂’•÷Ä-’©’æ’•÷Ä-÷á-’©’æ’°’¢’°’∂’°’Ø’°’∂-’£’∏÷Ä’Æ’∏’≤’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä-input",
    "title": "Python Math & ML Course",
    "section": "3.1 1 - Print, comments, ÷É’∏÷É’∏’≠’°’Ø’°’∂’∂’•÷Ä, ’©’æ’•÷Ä ÷á ’©’æ’°’¢’°’∂’°’Ø’°’∂ ’£’∏÷Ä’Æ’∏’≤’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä, input",
    "text": "3.1 1 - Print, comments, ÷É’∏÷É’∏’≠’°’Ø’°’∂’∂’•÷Ä, ’©’æ’•÷Ä ÷á ’©’æ’°’¢’°’∂’°’Ø’°’∂ ’£’∏÷Ä’Æ’∏’≤’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä, input\nDone, add links later",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Python, Math, Machine Learning Course</span>"
    ]
  },
  {
    "objectID": "index.html#conditions-’∫’°’µ’¥’°’∂’∂’•÷Ä",
    "href": "index.html#conditions-’∫’°’µ’¥’°’∂’∂’•÷Ä",
    "title": "Python Math & ML Course",
    "section": "3.2 2 - Conditions / ’ä’°’µ’¥’°’∂’∂’•÷Ä",
    "text": "3.2 2 - Conditions / ’ä’°’µ’¥’°’∂’∂’•÷Ä\nDone, add links later",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Python, Math, Machine Learning Course</span>"
    ]
  },
  {
    "objectID": "index.html#string-list-range-functions-on-floatslists",
    "href": "index.html#string-list-range-functions-on-floatslists",
    "title": "Python Math & ML Course",
    "section": "3.3 3 - String, list, range, functions on floats/lists",
    "text": "3.3 3 - String, list, range, functions on floats/lists\nDone, add links later",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Python, Math, Machine Learning Course</span>"
    ]
  },
  {
    "objectID": "index.html#loops-÷Å’´’Ø’¨’•÷Ä",
    "href": "index.html#loops-÷Å’´’Ø’¨’•÷Ä",
    "title": "Python Math & ML Course",
    "section": "3.4 4 - Loops / ’ë’´’Ø’¨’•÷Ä",
    "text": "3.4 4 - Loops / ’ë’´’Ø’¨’•÷Ä\nToDo",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Python, Math, Machine Learning Course</span>"
    ]
  },
  {
    "objectID": "index.html#liststring-methods-ternary-operators-list-comprehensions",
    "href": "index.html#liststring-methods-ternary-operators-list-comprehensions",
    "title": "Python Math & ML Course",
    "section": "3.5 5 - List/String Methods + Ternary Operators, List Comprehensions",
    "text": "3.5 5 - List/String Methods + Ternary Operators, List Comprehensions",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Python, Math, Machine Learning Course</span>"
    ]
  },
  {
    "objectID": "index.html#tuple-set-dictionary",
    "href": "index.html#tuple-set-dictionary",
    "title": "Python Math & ML Course",
    "section": "3.6 6 - Tuple, Set, Dictionary",
    "text": "3.6 6 - Tuple, Set, Dictionary",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Python, Math, Machine Learning Course</span>"
    ]
  },
  {
    "objectID": "index.html#functions-’£’∏÷Ç÷Å’•-’•÷Ä’Ø’∏÷Ç-’∑’°’¢’°’©-’∞’°’ø’Ø’°÷Å’∂’•’∂÷Ñ",
    "href": "index.html#functions-’£’∏÷Ç÷Å’•-’•÷Ä’Ø’∏÷Ç-’∑’°’¢’°’©-’∞’°’ø’Ø’°÷Å’∂’•’∂÷Ñ",
    "title": "Python Math & ML Course",
    "section": "3.7 7 - Functions (’£’∏÷Ç÷Å’• ’•÷Ä’Ø’∏÷Ç ’∑’°’¢’°’© ’∞’°’ø’Ø’°÷Å’∂’•’∂÷Ñ)",
    "text": "3.7 7 - Functions (’£’∏÷Ç÷Å’• ’•÷Ä’Ø’∏÷Ç ’∑’°’¢’°’© ’∞’°’ø’Ø’°÷Å’∂’•’∂÷Ñ)\n‘ø’∏’§’•÷Ä\n\nFunctions -¬†https://colab.research.google.com/drive/18yWk80QIy3W5qHYyh4bJdJIdZc7Ai-D5?usp=sharing\nFunctions 2 -¬†https://colab.research.google.com/drive/1Zty6fUmxC4084vf22tALDU4SE_pjYhwG?usp=sharing\n\n’è’∂’°’µ’´’∂’ù\n\n26 (’ñ’∏÷Ç’∂’Ø÷Å’´’°’∂’•÷Ä) - ’¨÷Ä’´’æ\n27 (’ñ’∏÷Ç’∂’Ø÷Å’´’°’∂’•÷Ä 2) - ’¨÷Ä’´’æ\n28 (Lambda) - ’¨÷Ä’´’æ",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Python, Math, Machine Learning Course</span>"
    ]
  },
  {
    "objectID": "index.html#terminal-working-with-multiple-files-file-io-packages-os-random-time-tqdm",
    "href": "index.html#terminal-working-with-multiple-files-file-io-packages-os-random-time-tqdm",
    "title": "Python Math & ML Course",
    "section": "3.8 8 - Terminal, Working with multiple files, file I/O, Packages (os, random, time, tqdm)",
    "text": "3.8 8 - Terminal, Working with multiple files, file I/O, Packages (os, random, time, tqdm)\n‘ø’∏’§’®’ù\nhttps://colab.research.google.com/drive/1XyY3N1UZhfahbGmF5QzBKgHWqvqtTZgV?usp=sharing\nGit / GitHub`\n’Ä’°’µ’•÷Ä’•’∂ ’æ’´’§’•’∏’∂’•÷Ä’´ ’∑’°÷Ä÷Ñ -\nhttps://www.youtube.com/playlist?list=PLQLz3vJxwofh8KSaJ7FoA5Bw2Zdvyo4S_\nVSCode / PyCharm, Python, Anaconda\n\nPython, VSCode, Anaconda -¬†https://hayktarkhanyan.notion.site/Install-Python-VS-Code-and-Anaconda-b1cc550b63a04af298f3c784e5c8e49e?pvs=4\nPyCharm -¬†https://armen-melkonyan.notion.site/install-Pycharm-Windows-2516aeae013344d7a288a7ee01377a06\n\nTerminal-’´ ’∞÷Ä’°’¥’°’∂’∂’•÷Ä Mac/Linux-’´ ’∞’°’¥’°’º\nhttps://www.geeksforgeeks.org/basic-linux-commands/\n’è’∂’°’µ’´’∂’ù ’±’•’º’´ ’∞’•’ø ’°’∂’•’¨’∏÷Ç ’ø’∂’°’µ’´’∂\n\n29 ****’ñ’°’µ’¨’•÷Ä - ’¨÷Ä’´’æ (’Ø’°’¥ ’£’∏’∂’• 2, 3, 6, 8, 10)\n‘º’∏÷Ç’Æ’∏÷Ç’¥’∂’•÷Ä’´ ’æ’´’§’•’∏’∂’•÷Ä - https://www.youtube.com/playlist?list=PLpwQpnE0hLO5JbMe0W44DSWEKn-Dbl7o7\n\n’Ä’´’¥’∂’°’Ø’°’∂ ’ø’∂’°’µ’´’∂’ù\n\nVSCode ’Ø’°’¥ PyCharm ÷Ñ’°’∑’•’¨\nPython ÷Ñ’°’∑’•’¨\nAnaconda ÷Ñ’°’∑’•’¨\n’à÷Ç ’ß’Ω ’∂’•÷Ä÷Ñ’´ ’∫÷Ä’∏’•’Ø’ø’®’ù\n\nFile Organizer",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Python, Math, Machine Learning Course</span>"
    ]
  },
  {
    "objectID": "index.html#git-github-venvs-anaconda-pep8-clean-codearchitecture",
    "href": "index.html#git-github-venvs-anaconda-pep8-clean-codearchitecture",
    "title": "Python Math & ML Course",
    "section": "3.9 8.5 - Git / GitHub, Venvs, Anaconda + PEP8, clean code/architecture",
    "text": "3.9 8.5 - Git / GitHub, Venvs, Anaconda + PEP8, clean code/architecture\n\nAlso - Decorators (In case not covered earlier)",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Python, Math, Machine Learning Course</span>"
    ]
  },
  {
    "objectID": "index.html#exception-handling",
    "href": "index.html#exception-handling",
    "title": "Python Math & ML Course",
    "section": "3.10 9 - Exception Handling",
    "text": "3.10 9 - Exception Handling\n‘ø’∏’§’®’ù https://colab.research.google.com/drive/16zfO5KSFfYI6f2PgVLflzZhAz2cwXIqI?usp=sharing\n’è’∂’°’µ’´’∂’ù\nPassword generator/validator",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Python, Math, Machine Learning Course</span>"
    ]
  },
  {
    "objectID": "index.html#classes-inheritance",
    "href": "index.html#classes-inheritance",
    "title": "Python Math & ML Course",
    "section": "3.11 10 - Classes, Inheritance",
    "text": "3.11 10 - Classes, Inheritance\n‘ø’∏’§’®’ù\nhttps://colab.research.google.com/drive/1CsNjiiI2ya7zMNa9FuSPNsg40wtf5eBW?usp=sharing\n’è’∂’°’µ’´’∂’ù\n\n3.11.1 üçø IMDB Data (classes)\n’é’•÷Ä÷Å÷Ä’•÷Ñ ’°’µ’Ω ’§’°’ø’°’∂’ù\nimdb_top_999.json\n‘ø’°÷Ä’§’°’¨’∏÷Ç ’∞’°’¥’°÷Ä ’Ø’°÷Ä’∏’≤ ’•÷Ñ ’°’∑’≠’°’ø’°÷Å’∂’•’¨ ’°’µ’Ω ’Ø’∏’§’®’ù\nimport json\nPATH = \"imdb_top_999.json\"\n\nwith open(PATH, \"r\") as f:\n    data = json.load(f)\n\nTO_DELETE = [\"No_of_Votes\", \"Overview\", \"Meta_score\"]\n\nfor kino in data.keys():\n    for k in TO_DELETE:\n        del data[kino][k]\n\n    data[kino][\"Name\"] = kino\n’è’∫’•÷Ñ ’ø’•’Ω’•÷Ñ ’©’• ’´’∂’π ’° data-’∂ ’∏÷Ç ’Ω’ø’•’≤’Æ’•÷Ñ ’∞’•’ø÷á’µ’°’¨ ’Ø’¨’°’Ω’∂’•÷Ä’®’ù\n\n\n3.11.2 Movie\n\n‘ø’∂’Ø’°÷Ä’°’£÷Ä’´ ’´’∂’π-’∏÷Ä ’Ø’∏’∂’Ø÷Ä’•’ø ’Ø’´’∂’∏÷â\n‘ø’Ω’ø’°’∂’° ’∏÷Ä’∫’•’Ω ’°÷Ä’£’∏÷Ç’¥’•’∂’ø data-’∏÷Ç’¥ ’•’≤’°’Æ ’¢’∏’¨’∏÷Ä ’¢’°’∂’°’¨’´’∂’•÷Ä’® (Name, Released_Year, Runtime, ‚Ä¶)\n‘ø’∏÷Ç’∂’•’∂’° ’¥’•’©’∏’§ ’§’•÷Ä’°’Ω’°’∂’∂’•÷Ä’´ ÷Å’∏÷Ç÷Å’°’Ø’® ’Ω’ø’°’∂’°’¨’∏÷Ç ’∞’°’¥’°÷Ä\n‘ø’∏÷Ç’∂’•’∂’° ’¥’•’©’∏’§ ’∏÷Ä’® ’Ø’æ’•÷Ä’°’§’°÷Ä’±’∂’´ ’©’• ÷Ñ’°’∂’´ ’™’°’¥ ’° ’ø÷á’∏÷Ç’¥ ’Ø’´’∂’∏’∂\n‘ø’∏÷Ç’∂’•’∂’° ’¥’•’©’∏’§ ’∏÷Ä’® ’ø’•÷Ñ’Ω’ø’∏’æ ’Ø’∂’Ø’°÷Ä’°’£÷Ä’´ ’Ø’°÷Ä’≥ ’∂’Ø’°÷Ä’°’£’´÷Ä’® (‘ø’´’∂’∏’µ’´ ’º’•’™’´’Ω’∏÷Ä’∂ ’ß ‚Ä§‚Ä§‚Ä§, ’∞÷Ä’°’∫’°÷Ä’°’Ø’æ’•’¨ ’ß ‚Ä§‚Ä§‚Ä§ ’©’æ’°’Ø’°’∂’´’∂, ’£’¨’≠’°’æ’°÷Ä ’§’•÷Ä’°’Ω’°’∂’∂’•÷Ä’∂ ’•’∂ ‚Ä§‚Ä§‚Ä§)\n\n\n\n3.11.3 Actor\n\n‘ø’∂’Ø’°÷Ä’°’£÷Ä’´ ’´’∂’π-’∏÷Ä ’Ø’∏’∂’Ø÷Ä’•’ø ’§’•÷Ä’°’Ω’°’∂’´\n’à÷Ä’∫’•’Ω ’°÷Ä’£’∏÷Ç’¥’•’∂’ø ’Ø’Ω’ø’°’∂’° ’§’•÷Ä’°’Ω’°’∂’´ ’°’∂’∏÷Ç’∂’®\n‘ø’£’ø’∂’´ ’¢’∏’¨’∏÷Ä ÷Ü’´’¨’¥’•÷Ä’® ’∏÷Ä’∏÷Ç’¥ ’≠’°’≤’°÷Å’•’¨ ’ß ’§’•÷Ä’°’Ω’°’∂’®\n‘ø’∏÷Ç’∂’•’∂’° ’¥’•’©’∏’§ ’°’µ’§ ÷Ü’´’¨’¥’•÷Ä’´\n\n’î’°’∂’°’Ø’®\n’Ñ’´’ª’´’∂ ’º’•’µ’©’´’∂’£’®\n‘±’¥’•’∂’°’ø’°÷Ä’°’Æ’æ’°’Æ ’™’°’∂÷Ä’® ’Ω’ø’°’∂’°’¨’∏÷Ç ’∞’°’¥’°÷Ä\n\n‘ø’∏÷Ç’∂’•’∂’° ’¥’•’©’∏’§’∂’•÷Ä ’∏÷Ä ’Ø’æ’•÷Ä’°’§’°÷Ä’±’∂’•’∂\n\n’å’•’™’´’Ω’µ’∏÷Ä’´ ’°’∂’∏÷Ç’∂’® ’∏÷Ç’¥ ÷Ü’´’¨’¥’•÷Ä’∏÷Ç’¥ ’°’¥’•’∂’°’∞’°’≥’°’≠’∂ ’° ’∂’Ø’°÷Ä’æ’•’¨\n‘¥’•÷Ä’°’Ω’°’∂’´ ’°’∂’∏÷Ç’∂’® ’∏÷Ç’¥ ’∞’•’ø ’°’¥’•’∂’°’∞’°’≥’≠ ’° ’°’∑’≠’°’ø’•’¨\n‘ø’°÷Ä’≥ ’∂’Ø’°÷Ä’°’£’´÷Ä ’§’•÷Ä’°’Ω’°’∂’´ ’¥’°’Ω’´’∂ (‘±’∂’∏÷Ç’∂’∂ ’ß’ù ‚Ä§‚Ä§‚Ä§, ’≠’°’≤’°÷Å’•’¨ ’ß ‚Ä§‚Ä§ ’∞’°’ø ÷Ü’´’¨’¥’∏÷Ç’¥, ’ñ’´’¨’¥’•÷Ä’´ ’¥’´’ª’´’∂ ’º’•’µ’ø’´’∂’£’∂ ’ß ‚Ä§‚Ä§‚Ä§ ÷á ’°’µ’¨’∂)\n\n\n’Ü’¥’°’∂ ’æ’•÷Ä’¨’∏÷Ç’Æ’∏÷Ç’©’µ’∏÷Ç’∂ ’Ø’°÷Ä’•’¨’´ ’° ’°’∂’•’¨ ’∂’°÷á ’®’Ω’ø ’Ø’´’∂’∏’µ’´ ’™’°’∂÷Ä’´, ’Ω’ø’°’∂’°’¨ ÷Ñ’°’∂’´ ÷Ü’´’¨’¥ ’Ø’° ’´÷Ñ’Ω ’™’°’∂÷Ä’´, ’¥’´’ª’´’∂ ’º’•’µ’ø’´’∂’£, ’°’¥’•’∂’°’∑’°’ø ’ß’§ ’™’°’∂÷Ä’∏’æ ’Ø’´’∂’∏’∂’•÷Ä’∏÷Ç’¥ ’≠’°’≤’°÷Å’∏’≤ ’§’•÷Ä’°’Ω’°’∂, ’ø’•’∂÷Å ’Ø’´’∂’∏’∂’•÷Ä ’∂’Ø’°÷Ä’∏’æ ’º’•’™’´’Ω’µ’∏’º ÷á ’°’µ’¨’∂",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Python, Math, Machine Learning Course</span>"
    ]
  },
  {
    "objectID": "index.html#more-on-classes-polymorphism-encapsulation-abstraction-generators-iterators",
    "href": "index.html#more-on-classes-polymorphism-encapsulation-abstraction-generators-iterators",
    "title": "Python Math & ML Course",
    "section": "3.12 11 - More on classes + Polymorphism, Encapsulation, Abstraction + Generators / Iterators",
    "text": "3.12 11 - More on classes + Polymorphism, Encapsulation, Abstraction + Generators / Iterators",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Python, Math, Machine Learning Course</span>"
    ]
  },
  {
    "objectID": "index.html#logging-unittest-argparser",
    "href": "index.html#logging-unittest-argparser",
    "title": "Python Math & ML Course",
    "section": "4.1 12 - Logging, Unittest, Argparser",
    "text": "4.1 12 - Logging, Unittest, Argparser",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Python, Math, Machine Learning Course</span>"
    ]
  },
  {
    "objectID": "index.html#numpy",
    "href": "index.html#numpy",
    "title": "Python Math & ML Course",
    "section": "4.2 13 - NumPy",
    "text": "4.2 13 - NumPy",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Python, Math, Machine Learning Course</span>"
    ]
  },
  {
    "objectID": "index.html#pandas",
    "href": "index.html#pandas",
    "title": "Python Math & ML Course",
    "section": "4.3 14-15 - Pandas",
    "text": "4.3 14-15 - Pandas",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Python, Math, Machine Learning Course</span>"
    ]
  },
  {
    "objectID": "index.html#data-visualization-’£’∏÷Ç÷Å’•-2-’∑’°’¢’°’©-’∞’°’ø’Ø’°÷Å’∂’•’∂÷Ñ",
    "href": "index.html#data-visualization-’£’∏÷Ç÷Å’•-2-’∑’°’¢’°’©-’∞’°’ø’Ø’°÷Å’∂’•’∂÷Ñ",
    "title": "Python Math & ML Course",
    "section": "4.4 16 - Data Visualization (’£’∏÷Ç÷Å’• 2 ’∑’°’¢’°’© ’∞’°’ø’Ø’°÷Å’∂’•’∂÷Ñ)",
    "text": "4.4 16 - Data Visualization (’£’∏÷Ç÷Å’• 2 ’∑’°’¢’°’© ’∞’°’ø’Ø’°÷Å’∂’•’∂÷Ñ)",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Python, Math, Machine Learning Course</span>"
    ]
  },
  {
    "objectID": "index.html#some-other-packages-streamlit-dask-sweetviz-numba",
    "href": "index.html#some-other-packages-streamlit-dask-sweetviz-numba",
    "title": "Python Math & ML Course",
    "section": "4.5 17 - Some other packages (Streamlit, Dask, Sweetviz, Numba, ‚Ä¶)",
    "text": "4.5 17 - Some other packages (Streamlit, Dask, Sweetviz, Numba, ‚Ä¶)",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Python, Math, Machine Learning Course</span>"
    ]
  },
  {
    "objectID": "index.html#scraping",
    "href": "index.html#scraping",
    "title": "Python Math & ML Course",
    "section": "4.6 18 - Scraping",
    "text": "4.6 18 - Scraping",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Python, Math, Machine Learning Course</span>"
    ]
  },
  {
    "objectID": "index.html#flask-fastapi",
    "href": "index.html#flask-fastapi",
    "title": "Python Math & ML Course",
    "section": "4.7 19 - Flask / FastAPI",
    "text": "4.7 19 - Flask / FastAPI",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Python, Math, Machine Learning Course</span>"
    ]
  },
  {
    "objectID": "index.html#linear-algebra",
    "href": "index.html#linear-algebra",
    "title": "Python Math & ML Course",
    "section": "5.1 üßÆ 20-22.5 Linear Algebra",
    "text": "5.1 üßÆ 20-22.5 Linear Algebra\n\nVectors, vector operations, dot product, norm\nVector spaces and subspaces\nMatrices, matrix operations\nGeometric interpretation of matrices\nRow echelon form\nDeterminant in 2x2 and 3x3 cases, trace\nDeterminant in general case\nSystems of linear equations\nGauss-Jordan elimination\nInverse matrix\nLinear independence\nBasis, rank, dimension\nEigenvalues and eigenvectors\n(Positive/negative definite matrices\nDecompositions",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Python, Math, Machine Learning Course</span>"
    ]
  },
  {
    "objectID": "index.html#calculus",
    "href": "index.html#calculus",
    "title": "Python Math & ML Course",
    "section": "5.2 üìà 22.5 - 24 Calculus",
    "text": "5.2 üìà 22.5 - 24 Calculus\n\nLimit of sequence and function\nDerivative\nExtrema of a function\nTaylor polynomials\nIndefinite integral, definite integral\nPartial derivative\nGradient, directional gradient\nMore topics",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Python, Math, Machine Learning Course</span>"
    ]
  },
  {
    "objectID": "index.html#optimization",
    "href": "index.html#optimization",
    "title": "Python Math & ML Course",
    "section": "5.3 ‚õ∞Ô∏è 25 - 27 Optimization",
    "text": "5.3 ‚õ∞Ô∏è 25 - 27 Optimization\n\nQuadratic forms and Sylvester‚Äôs criterion\nGradient Descent\nMomentum\nAdaGrad / RMSProp / ADAM\nSecond order methods\nConstrained optimiziation\nEvolutionary algorithms\nBayesian optimization\nMulticriteria optimization",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Python, Math, Machine Learning Course</span>"
    ]
  },
  {
    "objectID": "index.html#probability-theory",
    "href": "index.html#probability-theory",
    "title": "Python Math & ML Course",
    "section": "5.4 üé≤ 28 - 29 Probability Theory",
    "text": "5.4 üé≤ 28 - 29 Probability Theory\n\nSample space, events, probability\nIndependence\nConditional probability, total probability\nBayes rule\nGeometric probability\nRandom variable\nPMF, CDF, PDF\nExpected value, variance\nCovariance and correlation\nDistributions\nLaws of large numbers\nCentral limit theorem",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Python, Math, Machine Learning Course</span>"
    ]
  },
  {
    "objectID": "index.html#statistics",
    "href": "index.html#statistics",
    "title": "Python Math & ML Course",
    "section": "5.5 üìä30 - 31 Statistics",
    "text": "5.5 üìä30 - 31 Statistics\n\nPoint estimation: Mean, median, mode\nEstimator properties\nMAP / MLE\nConfidence intervals and hypothesis testing\nP-values, type I and type II errors",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Python, Math, Machine Learning Course</span>"
    ]
  },
  {
    "objectID": "index.html#linear-regression",
    "href": "index.html#linear-regression",
    "title": "Python Math & ML Course",
    "section": "6.1 32 Linear Regression",
    "text": "6.1 32 Linear Regression\n\nAssumptions\nLoss\nGradient based optimization\nNormal Equation\nInterpretation of Coefficients",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Python, Math, Machine Learning Course</span>"
    ]
  },
  {
    "objectID": "index.html#main-concepts",
    "href": "index.html#main-concepts",
    "title": "Python Math & ML Course",
    "section": "6.2 33 - 34 Main Concepts",
    "text": "6.2 33 - 34 Main Concepts\n\nEncoding categoricals\nFeature scaling\nTrain Val Test split (data leakage issue)\n(Stratified) Cross validation\nRegression evaluation metrics",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Python, Math, Machine Learning Course</span>"
    ]
  },
  {
    "objectID": "index.html#more-regression-main-concepts-2",
    "href": "index.html#more-regression-main-concepts-2",
    "title": "Python Math & ML Course",
    "section": "6.3 35 - 36 More Regression + Main Concepts 2",
    "text": "6.3 35 - 36 More Regression + Main Concepts 2\n\nPolynomial Regression\nUnder / Overfitting\nRegularization\n\nRidge\nLasso\n\nHyperparameter Search\nFeature Engineering\nOutliers\nThreshold tuning",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Python, Math, Machine Learning Course</span>"
    ]
  },
  {
    "objectID": "index.html#logistic-regression",
    "href": "index.html#logistic-regression",
    "title": "Python Math & ML Course",
    "section": "6.4 37 Logistic Regression",
    "text": "6.4 37 Logistic Regression\n\nLogistic regression\nLog odds\nClassification evaluation metrics",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Python, Math, Machine Learning Course</span>"
    ]
  },
  {
    "objectID": "index.html#trees",
    "href": "index.html#trees",
    "title": "Python Math & ML Course",
    "section": "6.5 38 Trees",
    "text": "6.5 38 Trees\n\nDecision tree\nBagging\nBoosting\nNotable models (i.e.¬†LightGBM)",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Python, Math, Machine Learning Course</span>"
    ]
  },
  {
    "objectID": "index.html#model-interpretation-and-feature-selection",
    "href": "index.html#model-interpretation-and-feature-selection",
    "title": "Python Math & ML Course",
    "section": "6.6 39 Model interpretation and Feature selection",
    "text": "6.6 39 Model interpretation and Feature selection",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Python, Math, Machine Learning Course</span>"
    ]
  },
  {
    "objectID": "index.html#unsupervised-learning",
    "href": "index.html#unsupervised-learning",
    "title": "Python Math & ML Course",
    "section": "6.7 40 Unsupervised Learning",
    "text": "6.7 40 Unsupervised Learning\n\nKMeans\nDBSCAN\nHierarchical\nClustering evaluation metrics",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Python, Math, Machine Learning Course</span>"
    ]
  },
  {
    "objectID": "index.html#neural-networks",
    "href": "index.html#neural-networks",
    "title": "Python Math & ML Course",
    "section": "6.8 41 - 42 Neural Networks",
    "text": "6.8 41 - 42 Neural Networks",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Python, Math, Machine Learning Course</span>"
    ]
  },
  {
    "objectID": "index.html#intro-to-computer-vision",
    "href": "index.html#intro-to-computer-vision",
    "title": "Python Math & ML Course",
    "section": "6.9 43 - 44 Intro to Computer Vision",
    "text": "6.9 43 - 44 Intro to Computer Vision",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Python, Math, Machine Learning Course</span>"
    ]
  },
  {
    "objectID": "index.html#intro-to-natural-language-processing",
    "href": "index.html#intro-to-natural-language-processing",
    "title": "Python Math & ML Course",
    "section": "6.10 44 - 45 Intro to Natural Language Processing",
    "text": "6.10 44 - 45 Intro to Natural Language Processing",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Python, Math, Machine Learning Course</span>"
    ]
  },
  {
    "objectID": "index.html#intro-to-gen-ai",
    "href": "index.html#intro-to-gen-ai",
    "title": "Python Math & ML Course",
    "section": "6.11 46 - 47 Intro to Gen AI",
    "text": "6.11 46 - 47 Intro to Gen AI",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Python, Math, Machine Learning Course</span>"
    ]
  },
  {
    "objectID": "index.html#’£’∏÷Ç÷Å’•-’∂’°÷á-knn-svm-information-theory-gaussian-process",
    "href": "index.html#’£’∏÷Ç÷Å’•-’∂’°÷á-knn-svm-information-theory-gaussian-process",
    "title": "Python Math & ML Course",
    "section": "6.12 ‘≥’∏÷Ç÷Å’• ’∂’°÷á KNN, SVM, Information Theory, Gaussian Process",
    "text": "6.12 ‘≥’∏÷Ç÷Å’• ’∂’°÷á KNN, SVM, Information Theory, Gaussian Process",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Python, Math, Machine Learning Course</span>"
    ]
  },
  {
    "objectID": "index.html#final-project",
    "href": "index.html#final-project",
    "title": "Python Math & ML Course",
    "section": "6.13 Final Project",
    "text": "6.13 Final Project",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Python, Math, Machine Learning Course</span>"
    ]
  },
  {
    "objectID": "misc/google_colab.html",
    "href": "misc/google_colab.html",
    "title": "2¬† Google Colab-’´÷Å ÷Ö’£’ø’æ’•’¨",
    "section": "",
    "text": "Google Colab-’∏’æ ’∂’µ’∏÷Ç’©’® ’¢’°÷Å’•’¨’∏÷Ç ’∞’°’¥’°÷Ä\n\n‘±’∂÷Å’•÷Ñ ’∞’≤’∏÷Ç’¥’∏’æ, ÷Ö÷Ä’´’∂’°’Ø ’°’µ’Ω\n‘ø÷Å’ø÷Ä’•÷Ñ ’æ’•÷Ä÷á’´ ’°’ª ’°’∂’Ø’µ’∏÷Ç’∂’∏÷Ç’¥ connect-’´’∂\n’Ñ’∏÷Ç’ø÷Ñ ’£’∏÷Ä’Æ’•÷Ñ ’±’•÷Ä Google account\n‘ª’∂’π-’∏÷Ä ’¢’ª’´’ª ’°’∑’≠’°’ø’°÷Å÷Ä’•÷Ñ (’•’º’°’∂’Ø’µ’∏÷Ç’∂’´ ’Ø’∏’≥’°’Ø) ’Ø’°’¥ Shift + Enter\n’Ø÷Å’ø÷Ä’•÷Ñ Run anyway (’Ω’° ’¢’°’µ÷Å ’¥’•’∂’°’Ø ’•’©’• ’£’´’ø’•÷Ñ ’∏÷Ä ’∏’π ’æ’ø’°’∂’£’°’æ’∏÷Ä ’Ø’∏’§ ’° ’ß’¨’´)\n\nColab-’´ ’∏’π ’Ø’∏’§’°’µ’´’∂ ’¢’ª’´’ª’∂’•÷Ä’∏÷Ç’¥ markdown ’£’∏÷Ä’Æ’´÷Ñ’∏’æ ’•’∂ ’£÷Ä’∏÷Ç’¥, ’Ø’°÷Ä’∏’≤ ’•÷Ñ ’Ø’°÷Ä’§’°’¨ ’§÷Ä’° ’¥’°’Ω’´’∂ ’°’µ’Ω’ø’•’≤",
    "crumbs": [
      "Misc",
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Google Colab-’´÷Å ÷Ö’£’ø’æ’•’¨</span>"
    ]
  },
  {
    "objectID": "python/01_Intro.html",
    "href": "python/01_Intro.html",
    "title": "3¬† 01 Intro: Print, Comments, Variables, Numbers, Input",
    "section": "",
    "text": "4 üé¶ ’è’•’Ω’°’§’°’Ω’•÷Ä + ‘º÷Ä’°÷Å’∏÷Ç÷Å’´’π\n‘¥’´’¨’´’ª’°’∂, ’¨’∏÷Ç’Ω’°’∂’Ø’°÷Ä’´ ’∞’≤’∏÷Ç’¥’®, ’Ä’•’≤’´’∂’°’Ø’ù Artur Matosyan\n(’£’∏÷Ç÷Å’• ’¥’´ ÷Ñ’´’π ’°’æ’•’¨’´ ’∞’´’∂ ’æ’•÷Ä’Ω’´’° ’¨’´’∂’´)\n’è’•’Ω’°’∂’µ’∏÷Ç’©’•÷Ä\n1. Youtube ’°’¨’´÷Ñ’®\n2. ‘≤’∏÷Ç’∂ ’§’°’Ω’®\n3. [2023 ’©’æ’´ ’§’°’Ω’® (ToDo)] 4. ‘±’¥’¢’∏’≤’ª’°’Ø’°’∂ ’§’°’Ω’®\n5. Profound-’´÷Å ÷Ö’£’ø’æ’•’¨’∏÷Ç ’æ’´’§’•’∏\n6. ‘≥’∏÷Ä’Æ’∂’°’Ø’°’∂ ’§’°’Ω’®\n7. ’à÷Ä’∏’∑ ’ø’∂’°’µ’´’∂’∂’•÷Ä’´ ’¨’∏÷Ç’Æ’∏÷Ç’¥’∂’•÷Ä\n‘≤’∏’¨’∏÷Ä ’≠’∂’§’´÷Ä’∂’•÷Ä’´ ’¨’∏÷Ç’Æ’∏÷Ç’¥’∂’•÷Ä ToDo\n‘º÷Ä’°÷Å’∏÷Ç÷Å’´’π\n1. ‘ª’∂’π’∏÷Ç’û Python ’Ω’∏’æ’∏÷Ä’•’¨ ’Ω’¨’°’µ’§’•÷Ä\n2. Colab-’∏÷Ç’¥ ’Ø’∏’§’® ’°’∑’≠’°’ø’°÷Å’∂’•’¨ ’∞’≤’∏÷Ç’¥\n3. Python-’´ ’≠’°’º’® ’¨÷Ä’°÷Å’∏÷Ç÷Å’´’π ’∂’µ’∏÷Ç’©’•÷Ä",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>01 Intro: Print, Comments, Variables, Numbers, Input</span>"
    ]
  },
  {
    "objectID": "python/01_Intro.html#’°÷Ä’ø’°’Æ’∏÷Ç’¥-print’ø’∫’•’¨",
    "href": "python/01_Intro.html#’°÷Ä’ø’°’Æ’∏÷Ç’¥-print’ø’∫’•’¨",
    "title": "3¬† 01 Intro: Print, Comments, Variables, Numbers, Input",
    "section": "5.1 ‘±÷Ä’ø’°’Æ’∏÷Ç’¥ (Print(’ø’∫’•’¨))",
    "text": "5.1 ‘±÷Ä’ø’°’Æ’∏÷Ç’¥ (Print(’ø’∫’•’¨))\nPython-’∏÷Ç’¥ ’©’´’æ ’°÷Ä’ø’°’Æ’•’¨’∏÷Ç ’∞’°’¥’°÷Ä ’∫’°÷Ä’¶’°’∫’•’Ω ’£÷Ä’∏÷Ç’¥ ’•’∂÷Ñ print (’ø’∫’•’¨), ’°’∫’° ’¢’°÷Å ÷É’°’Ø’°’£’Æ’•÷Ä’´ ’¥’•’ª ’©’• ’´’∂’π ’©’´’æ ’∏÷Ç’¶’∏÷Ç’¥ ’°÷Ä’ø’°’Æ’•’¨\n\nprint(509)\n\n# print      (    509   )\n\n’∂’∏÷Ç’µ’∂ ’±÷á ’Ø’°÷Ä’∏’≤ ’•’∂÷Ñ ’∂’°÷á ’ø’•÷Ñ’Ω’ø ’°÷Ä’ø’°’Æ’•’¨ (’ø’∫’•’¨)\n\nprint(\"panir\")\n# print(\"panir\") # ’Ø’°’∫ ’π’∏÷Ç’∂’´ ’¥’´ ’π’°’Ø’•÷Ä’ø('') ’Ø’§’∂’•’∂÷Ñ ’©’• ’•÷Ä’Ø’∏÷Ç(\"\"), ’Ø’°÷Ä÷á’∏÷Ä’® ’∂’∏÷Ç’µ’∂ ÷Ñ’°’∂’°’Ø’∏÷Ç’©’µ’°’¥’¢\n\n‘ø’°÷Ä’∏’≤ ’•’∂÷Ñ ’∂’°÷á ’¥’´’°’∂’£’°’¥’´÷Å ’¥’´ ÷Ñ’°’∂’´ ’¢’°’∂ ’ø’∫’•’¨\n\nprint(\"Hello\", \"Malmo\")  # ’∂’Ø’°’ø’•’∂÷Ñ ’∏÷Ä ’°÷Ä’™’•÷Ñ’∂’•÷Ä’® ’´÷Ä’°÷Ä’´÷Å ’°’º’°’∂’±’∂’°÷Å’æ’∏÷Ç’¥ ’•’∂ ’°’µ’Ω ’§’•’∫÷Ñ’∏÷Ç’¥ ’¢’°÷Å’°’ø’∏’æ, ’Ω÷Ä’°’∂ ’§’•’º ’Ø’°’∂’§÷Ä’°’§’°’º’∂’°’∂÷Ñ\n\n\nprint('Hello', \"Malmo\", 12, 'points go to')\n\n‘ø’°÷Ä’∏’≤ ’•’∂÷Ñ ’ø’°÷Ä’¢’•÷Ä ’ø’∏’≤’•÷Ä’´ ’æ÷Ä’° ’£÷Ä’•’¨ ’∞÷Ä’°’¥’°’∂’∂’•÷Ä’® ÷á Python-’® ’æ’•÷Ä÷á’´÷Å ’∂’•÷Ä÷Ñ÷á ’Ø’°÷Ä’§’°’¨’∏’æ ’Ø’Ø’°’ø’°÷Ä’´ ’∞÷Ä’°’¥’°’∂’∂’•÷Ä’®\n\nprint('Hello', 'Malmo', 12, 'points go to')\nprint('Armenia')\n\n‘±’º’°’ª’°’§÷Ä’°’∂÷Ñ ’ø’∫’•’¨ ‚ÄúHello World!‚Äù ’ø’•÷Ñ’Ω’ø’® ÷á ’∏÷Ç÷Ä’°’≠’°’∂’°’¨\n\n\n\n\n\n\n\nprint(\"Hello World!\")\n\n\n5.1.1 sep\n’•’©’• ’∏÷Ç’¶’∏÷Ç’¥ ’•’∂÷Ñ ’∏÷Ä ’°÷Ä’™’•÷Ñ’∂’•÷Ä’® ’´÷Ä’°÷Ä’´÷Å ’°’º’°’∂’±’∂’°÷Å’æ’•’∂ ’∏’π’©’• ’¢’°÷Å’°’ø’∏’æ ’°’µ’¨ ’¥’•÷Ä ’∏÷Ç’¶’°’Æ ’¢’°’∂’∏’æ, ’°’∫’° ’∫’•’ø÷Ñ ’ß print ’∞÷Ä’°’¥’°’∂’´ ’¥’•’ª ’°’æ’•’¨’°÷Å’∂’•’∂÷Ñ’ù print('’´’∂’π-’∏÷Ä ’¢’°’∂', '’´’∂’π-’∏÷Ä ’∏÷Ç÷Ä’´’∑ ’¢’°’∂', sep='¬Ø\\_(„ÉÑ)_/¬Ø')\nsep-’® ’£’°’¨’´’Ω’° ’°’∂’£’¨’•÷Ä’•’∂ separator ’¢’°’º’´÷Å, separate` ’¢’°’™’°’∂’•’¨, separator’ù ’¢’°’™’°’∂’´’π ’Ø’°’¥ ’°’º’°’∂’±’∂’°÷Å’∂’´’π (’π’£’´’ø’•’¥ ’∏’∂÷Å ’©’°÷Ä’£’¥’°’∂’•’¥ :))\n\nprint('’´’∂’π-’∏÷Ä ’¢’°’∂', '’´’∂’π-’∏÷Ä ’∏÷Ç÷Ä’´’∑ ’¢’°’∂')\nprint('’´’∂’π-’∏÷Ä ’¢’°’∂', '’´’∂’π-’∏÷Ä ’∏÷Ç÷Ä’´’∑ ’¢’°’∂', sep=\" \")\nprint('’´’∂’π-’∏÷Ä ’¢’°’∂', '’´’∂’π-’∏÷Ä ’∏÷Ç÷Ä’´’∑ ’¢’°’∂', sep='¬Ø\\_(„ÉÑ)_/¬Ø')\n\n# default -&gt; \" \"\n\n’ä’°÷Ä’ø’°’§’´÷Ä ’∫’•’ø÷Ñ ’° ’ùsep’ù-’® ’∂’∑’•’∂÷Ñ ’æ’•÷Ä’ª’∏÷Ç’¥\n\nprint('’´’∂’π-’∏÷Ä ’¢’°’∂', sep=\"*\", '’´’∂’π-’∏÷Ä ’∏÷Ç÷Ä’´’∑ ’¢’°’∂')\n\n\n\n5.1.2 end\n’Ü’°÷á ’Ø’°÷Ä’∏’≤ ’•’∂÷Ñ ’∂’Ø’°’ø’•’¨ ’∏÷Ä ’•’©’• ’¥’´ ÷Ñ’°’∂’´ ’ø’∏’≤ print ’∞÷Ä’°’¥’°’∂’∂’•÷Ä ’∏÷Ç’∂’•’∂÷Ñ, ’°’¥’•’∂ ’¥’•’Ø’® ’°÷Ä’ø’°’Æ’∏÷Ç’¥’° ’∂’∏÷Ä ’ø’∏’≤’´ ’æ÷Ä’°’ù ’§’° ’ß’¨ ’Ø’°÷Ä’∏’≤ ’•’∂÷Ñ ÷É’∏’≠’•’¨\nPython-’∏÷Ç’¥ ’•’©’• ’´’∂’π-’∏÷Ä ’¢’°’∂ ’∏÷Ç’¶’∏÷Ç’¥ ’•’∂÷Ñ ’∂’∏÷Ä ’ø’∏’≤’´÷Å ’ø’∫’•’¨ ’£÷Ä’∏÷Ç’¥ ’•’∂÷Ñ (n-’® new ’¢’°’º’´÷Å’°) ’£’°’¨’´’Ω, ’´’Ω’Ø ’∂÷Ä’° ’∞’°’¥’°÷Ä’° ’∏÷Ä Python-’® ’∞’°’Ω’Ø’°’∂’° ’∏÷Ä ’Ω’∏’æ’∏÷Ä’°’Ø’°’∂ n ’ø’°’º’® ’π’•’∂÷Ñ ’∏÷Ç’¶’∏÷Ç’¥ ’ø’∫’•’∂÷Ñ\n\nprint(\"aaaa\\nbbbb\")\n\nprint(\"aaaa\")\nprint(\"bbbb\")\n\n\nprint('’•’Ω ’°’º’°’ª’´’∂ ’ø’∏’≤’´ ’æ÷Ä’° ’•’¥', end=\"\\n\")\nprint('’•’Ω ’ß’¨ ’•÷Ä’Ø÷Ä’∏÷Ä’§')\n\n\nprint('’•’Ω ’°’º’°’ª’´’∂ ’ø’∏’≤’´ ’æ÷Ä’° ’•’¥', end=\"*\")\nprint('’∞’•’Ω’° ’£’°’¥ ’Ø’∏’≤÷Ñ’§')\n\n‘ª’∂’π’∫’•’Ω ’ø’•’Ω’°’∂÷Ñ ’æ’•÷Ä÷á’∏÷Ç’¥ sep ’∫’°÷Ä’°’¥’•’ø÷Ä’® ’°’æ’•’¨’°÷Å’∂’•’¨’∏’æ ÷É’∏’≠’∏÷Ç’¥ ’ß’´’∂÷Ñ ’©’• ’´’∂’π’∫’•’Ω ’°÷Ä’™’•÷Ñ’∂’•÷Ä’® ’´÷Ä’°÷Ä’´÷Å ’°’º’°’∂’±’∂’°÷Å’æ’•’∂ ’¥’•’Ø print ’∞÷Ä’°’¥’°’∂’∏÷Ç’¥ ’´’Ω’Ø end ’∏’æ ’Ø÷É’∏’≠’•’∂÷Ñ ’©’• ’´’∂’π’∫’•’Ω ’ø’°÷Ä’¢’•÷Ä ’ø’∏’≤’•÷Ä’´ print-’•÷Ä’® ’´÷Ä’°÷Ä’´÷Å ’°’º’°’∂’±’∂’°÷Å’æ’•’∂ (’Ø’°’¥ ’ß’¨ ’∏÷Ç’≤’≤’°’Ø’´ ’¥’•÷Ä ’∫÷Ä’´’∂’ø’´ ’æ’•÷Ä’ª’∏÷Ç’¥ ’Ø’°÷Ä’ø’°’Æ’•’∂÷Ñ ’´’∂’π ’∏÷Ç’¶’•’∂÷Ñ)\n\nprint('Hello', 'Malmo', 12, 'points go to', end='\\n') # ’Ω’° ’°’µ’∂ ’ø’°÷Ä’¢’•÷Ä’°’Ø’∂’° ’•÷Ä’¢ end ’π’•’∂÷Ñ ’ø’°’¨’´’Ω (default ’ø’°÷Ä’¢’•÷Ä’°’Ø’®)\nprint('Armenia')\n\n\nprint('Hello', 'Malmo', 12, 'points go to', end='... ’§÷Ä’°’¥’°’ø’´’Ø ’§’°’§’°÷Ä ...', sep=\"-\")\nprint('Armenia')\n\n‘±’µ’Ω ’°’¥’•’∂’® ’Ø’°÷Ä’∏’≤ ’•’∂÷Ñ ’∂’°÷á ’¥’´’°’™’°’¥’°’∂’°’Ø ÷Ö’£’ø’°’£’∏÷Ä’Æ’•’¨\n\nprint('’•’Ω ’°’º’°’ª’´’∂ print-’∂ ’•’¥')\nprint('’´’¥ ’æ’•÷Ä’ª’∏÷Ç’¥ ’Ø’¨’´’∂’´ 5 ’∞’°’ø ’°’Ω’ø’≤’°’∂’´’∑’∏’æ', end='*****')\nprint(3, 4, 1, 0, 'I love', '’Ø’°÷Ä’£’´’∂ ’∞’°’≤’∏÷Ä’§’∏÷Ç’¥')\nprint('’∞’•’Ω’° ’∂’•÷Ä÷á’∏÷Ç’¥ ’Ø’ø’∫’•’∂÷Ñ ’∂’∏÷Ç’µ’∂ ’æ’•÷Ä÷á’´ ’ø’∏’≤’® ’∏÷Ç’≤’≤’°’Ø’´ ’°’¥’•’∂’´’∂’π ’´÷Ä’°÷Ä’´÷Å ’£’Æ’´’Ø’∏’æ ’°’º’°’∂’±’∂’°÷Å’æ’°’Æ ’Ø’¨’´’∂’´ ’∏÷Ç ’æ’•÷Ä’ª’∏÷Ç’¥ ’ß’¨ ’Ø’£÷Ä’•’∂÷Ñ ’∑’∂’∏÷Ä’∞’°’æ’∏÷Ä ’°’¥’°’∂’∏÷Ä')\nprint('’•’Ω ’•÷Ä÷Ä’∏÷Ä’§ ’∫÷Ä’´’∂’ø’∂ ’•’¥', 3, 4, 1, 0, 'I love', '’Ø’°÷Ä’£’´’∂ ’∞’°’≤’∏÷Ä’§’∏÷Ç’¥', sep='-', end='’∑’∂’∏÷Ä’∞’°’æ’∏÷Ä ’°’¥’°’∂’∏÷Ä')\n\n’Ü’Ø’°’ø’•’∂÷Ñ ’∏÷Ä 1. 3, 4, 1, 0 ’©’æ’•÷Ä’® ’¥’´’°’∂’£’°’¥’´÷Å ’•÷Ä’Ø÷Ä’∏÷Ä’§ ’ø’∏’≤’∏÷Ç’¥ ’•’∂ *****-’∂’•÷Ä’´÷Å ’∞’•’ø’∏, ’∏’π ’©’• ’∂’∏÷Ä ’ø’∏’≤’´÷Å 2. ’æ’•÷Ä’ª’´’∂ ’ø’∏’≤’∏÷Ç’¥ ’∞’°’≤’∏÷Ä’§’∏÷Ç’¥ ’¢’°’º’´÷Å ’∞’•’ø’∏ - ’π’Ø’°",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>01 Intro: Print, Comments, Variables, Numbers, Input</span>"
    ]
  },
  {
    "objectID": "python/01_Intro.html#comment-’∂’•÷Ä-’¥’•’Ø’∂’°’¢’°’∂’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä",
    "href": "python/01_Intro.html#comment-’∂’•÷Ä-’¥’•’Ø’∂’°’¢’°’∂’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä",
    "title": "3¬† 01 Intro: Print, Comments, Variables, Numbers, Input",
    "section": "5.2 Comment-’∂’•÷Ä (’¥’•’Ø’∂’°’¢’°’∂’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä)",
    "text": "5.2 Comment-’∂’•÷Ä (’¥’•’Ø’∂’°’¢’°’∂’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä)\n’•’©’• ’∏÷Ç’¶’∏÷Ç’¥ ’•’∂÷Ñ ’£÷Ä’•’∂÷Ñ ’Æ÷Ä’°’£÷Ä’´ ’¥’°’Ω’® ’∏÷Ä’® ’∂’°’≠’°’ø’•’Ω’æ’°’Æ’° ’¥’°÷Ä’§’Ø’°’∂÷Å ’∞’°’¥’°÷Ä (÷Ö÷Ä’´’∂’°’Ø ’∞’•’∂÷Å ’¥’•÷Ä), ’°’µ’¨ ’∏’π ’©’• ’∞’°’¥’°’Ø’°÷Ä’£’π’´ ’§’° ’Ø’°÷Ä’∏’≤ ’•’∂÷Ñ ’°’∂’•’¨ ’°’µ ’Ω’•’∂÷Å\n\nprint(1)\n# ’•’Ω ’ø’•’Ω’°’∂’•’¨’´ ’•’¥ ’±’•’¶, ’¢’°’µ÷Å ’∞’°’¥’°’Ø’°÷Ä’£’´’π’® ’´’∂’± ’π’´ ’ø’•’Ω’∂’∏÷Ç’¥\nprint(2) # a\n\n\nprint(1)\n\"\"\"Triple quotes\n’•’Ω ’¥’´ ÷Ñ’°’∂’´ ’ø’∏’≤’´ ’æ÷Ä’° ’Ø’°÷Ä’∏’≤ ’•’¥ ’¨’´’∂’•’¨,\n÷á ’¥’•’Ø’°\n’Ø’∏’§’´ ’°’∑’≠’°’ø’•’¨’∏÷Ç ’æ÷Ä’° ’π’•’¥ ’°’¶’§’´, ’¢’°’µ÷Å ’•’Ω comment ’π’•’¥\n\"\"\"\nprint(2)",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>01 Intro: Print, Comments, Variables, Numbers, Input</span>"
    ]
  },
  {
    "objectID": "python/01_Intro.html#÷É’∏÷É’∏’≠’°’Ø’°’∂’∂’•÷Ä-variables",
    "href": "python/01_Intro.html#÷É’∏÷É’∏’≠’°’Ø’°’∂’∂’•÷Ä-variables",
    "title": "3¬† 01 Intro: Print, Comments, Variables, Numbers, Input",
    "section": "5.3 ’ì’∏÷É’∏’≠’°’Ø’°’∂’∂’•÷Ä (Variables)",
    "text": "5.3 ’ì’∏÷É’∏’≠’°’Ø’°’∂’∂’•÷Ä (Variables)\n’ì’∏÷É’∏’≠’°’Ø’°’∂’∂’•÷Ä’´ ’¥’´’ª’∏÷Å’∏’æ ’Ø’°÷Ä’∏’≤ ’•’∂÷Ñ ’°÷Ä’™’•÷Ñ’® ’∞’°÷Ä’¥’°÷Ä ’∫’°’∞’•’¨ ’∞’´’∑’∏’≤’∏÷Ç’©’µ’∏÷Ç’∂’∏÷Ç’¥ ÷á ’°’∫’°’£’°’µ’∏÷Ç’¥ ÷Ö’£’ø’°’£’∏÷Ä’Æ’•’∂÷Ñ (’ø’•’ø÷Ä, ’§’°÷Ä’°’Ø’´ ÷Ö÷Ä’´’∂’°’Ø)\n\na = \"points go to\"\nprint(a)\n\n\n5.3.1 ’ì’∏÷É’°’Ø’°’∂’∂’•÷Ä’´ ’°’∂’æ’°’∂’∏÷Ç’¥ (Variable naming)\n\n# ’Ø’°÷Ä’•’¨’´’°\nmyvar = \"’∫’°’∂’´÷Ä\" # var-’® variable-’´ ’Ø’°÷Ä’≥’∂’° ’∏÷Ç’≤’≤’°’Ø’´\nmy_var = \"’∫’°’∂’´÷Ä\" # snake case\n_my_var = \"’∫’°’∂’´÷Ä\"\nmyVar = \"’∫’°’∂’´÷Ä\" # camel case\nMYVAR = \"’∫’°’∂’´÷Ä\"\nmyvar2 = \"’∫’°’∂’´÷Ä\"\n\n# ’π’´ ’Ø’°÷Ä’•’¨’´\n2myvar = \"’∫’°’∂’´÷Ä\"\nmy-var = \"’∫’°’∂’´÷Ä\"\nmy var = \"’∫’°’∂’´÷Ä\"\n\n\n‘π’∏÷Ç’µ’°’ø÷Ä’æ’∏÷Ç’æ’∏÷Ç’¥’° ÷Ö’£’ø’°’£’∏÷Ä’Æ’•’¨ ’∞’•’ø÷á’µ’°’¨ ’∂’´’∑’•÷Ä÷Ç’ù A-z, 0-9, ÷á _\n‘µ’©’• ’•÷Ä’Ø’∏÷Ç ’¢’°’º’´÷Å ’Ø’°’¶’¥’æ’°’Æ ’°’∂’∏÷Ç’∂’° ’∫’°’µ’¥’°’∂’°’æ’∏÷Ä’æ’°’Æ’∏÷Ç’©’µ’∏÷Ç’∂’°’Ø ’°’º’°’∂’±’∂’°÷Å’∂’•’¨ ’´÷Ä’°÷Ä’´÷Å _-’∏’æ\n’´÷Ä’°’æ’∏÷Ç’∂÷Ñ ’π’∏÷Ç’∂’•’∂÷Ñ ’Ω’Ø’Ω’•’¨ ’°’∂’∏÷Ç’∂’ø ’©’æ’∏’≤, ’¢’°’µ÷Å _ ’∏’æ ’Ø’°÷Ä’∏’≤ ’•’∂÷Ñ\n’¥’•’Æ’°’ø’°’º ÷É’∏÷Ñ÷Ä’°’ø’°’º’® ’Ø’°’∫ ’∏÷Ç’∂’•’∂, NAME ’∏÷Ç name-’® ’∂’∏÷Ç’µ’∂ ’¢’°’∂’® ’π’•’∂\n\n\n\n5.3.2 ‘±’¥÷Ä’°’£÷Ä’æ’°’Æ ’°’∂’∏÷Ç’∂’∂’•÷Ä\n’π’•’∂÷Ñ ’Ø’°÷Ä’∏’≤ ÷Ö’£’ø’°’£’∏÷Ä’Æ’•’¨ ’∞’•’ø÷á’µ’°’¨ ’°’∂’∏÷Ç’∂’∂’•÷Ä’®\nFalse, def, if, raise, None, del, import, return, True, elif, in, try, and else, is, while, as, except, lambda, with, assert, finally, nonlocal, yield, break, for, not, class, from, or, continue, global, pass\n’â’°÷Ä’™’´ ÷Ö’£’ø’°’£’∏÷Ä’Æ’•’¨’ù O, I, l ’∑’°’ø ’∞’•’∑’ø ’° ’∑÷É’∏’©’•’¨ 0, 1-’´ ’∞’•’ø\n\nTrue = 5\n\n\nprint = 11\n\n\nprint(\"’¢’°÷Ä÷á\")\n\n\ndel print # ’∏÷Ç’≤’≤’•’∂÷Ñ ’°÷Ä’°’Æ ’Ω’≠’°’¨’®\n\n\n\n5.3.3 ’Ñ’´ ’ø’∏’≤’∏’æ ’¥’´ ÷Ñ’°’∂’´ ÷É’∏÷É’∏’≠’°’∂’∂’•÷Ä’´’´ ’°÷Ä’™’•÷Ñ’∂’•÷Ä ’æ’•÷Ä’°’£÷Ä’•’¨\n\na1 = 0\nb1 = 509\n\nprint(a1)\nprint(b1)\n\n\na, b = 0, 509\n\n\na, b, c = 0, 509 # ÷Ñ’°’∂’°’Ø’® ’∫’•’ø÷Ñ ’° ’¢’º’∂’´ \n\n\na = b = c = 0 # ’æ’ø’°’∂’£’°’æ’∏÷Ä ’°\nprint(b)",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>01 Intro: Print, Comments, Variables, Numbers, Input</span>"
    ]
  },
  {
    "objectID": "python/01_Intro.html#’©’æ’•÷Ä-÷á-’©’æ’°’¢’°’∂’°’Ø’°’∂-’£’∏÷Ä’Æ’∏’≤’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä",
    "href": "python/01_Intro.html#’©’æ’•÷Ä-÷á-’©’æ’°’¢’°’∂’°’Ø’°’∂-’£’∏÷Ä’Æ’∏’≤’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä",
    "title": "3¬† 01 Intro: Print, Comments, Variables, Numbers, Input",
    "section": "5.4 ‘π’æ’•÷Ä ÷á ’©’æ’°’¢’°’∂’°’Ø’°’∂ ’£’∏÷Ä’Æ’∏’≤’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä",
    "text": "5.4 ‘π’æ’•÷Ä ÷á ’©’æ’°’¢’°’∂’°’Ø’°’∂ ’£’∏÷Ä’Æ’∏’≤’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä\n\n5.4.1 ‘π’æ’•÷Ä’´ ’ø’•’Ω’°’Ø’∂’•÷Ä\n\nInteger (’°’¥’¢’∏’≤’ª ’©’´’æ)\nFloat (’´÷Ä’°’Ø’°’∂ ’©’æ’•÷Ä, ’¨’∏’≤’°÷Å’∏’≤(float) ’Ω’ø’∏÷Ä’°’Ø’•’ø’∏’æ)\nComplex (’Ø’∏’¥’∫’¨’•÷Ñ’Ω)\n\n\nprint(509, type(509))\nprint(1.2, type(1.2))\nprint(1.0, type(1.))\nprint(0.9, type(.9))\nprint(3 + 5j, type(3 + 5j))\n\n\n# ’Ø’°÷Ä’∏’≤ ’•’∂÷Ñ ’©’æ’´ ’ø’•’Ω’°’Ø’® ÷É’∏’≠’•’¨ ’°’µ’Ω’∫’•’Ω\nprint(type(12.509))\nprint(int(12.509))\nprint(type(int(12.509)))\n\n\na = 12\nprint(a, type(a))\nprint(float(a), type(float(a)))",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>01 Intro: Print, Comments, Variables, Numbers, Input</span>"
    ]
  },
  {
    "objectID": "python/01_Intro.html#’©’æ’°’¢’°’∂’°’Ø’°’∂-’£’∏÷Ä’Æ’∏’≤’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä",
    "href": "python/01_Intro.html#’©’æ’°’¢’°’∂’°’Ø’°’∂-’£’∏÷Ä’Æ’∏’≤’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä",
    "title": "3¬† 01 Intro: Print, Comments, Variables, Numbers, Input",
    "section": "5.5 ‘π’æ’°’¢’°’∂’°’Ø’°’∂ ’£’∏÷Ä’Æ’∏’≤’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä",
    "text": "5.5 ‘π’æ’°’¢’°’∂’°’Ø’°’∂ ’£’∏÷Ä’Æ’∏’≤’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä\n\n5.5.1 ‘≥’∏÷Ç’¥’°÷Ä’∏÷Ç’¥, ’∞’°’∂’∏÷Ç’¥, ’¢’°’¶’¥’°’∫’°’ø’Ø’∏÷Ç’¥, ’Ω’∏’æ’∏÷Ä’°’Ø’°’∂ ÷á ’°’¥’¢’∏’≤’©’´’æ ’¢’°’™’°’∂’∏÷Ç’¥, ’°’Ω’ø’´’≥’°’∂ ’¢’°÷Ä’±÷Ä’°÷Å’∂’•’¨, ’¥’∂’°÷Å’∏÷Ä’§\n\nprint(1+2+  53)\nprint(1 + 2 + 53)\nprint(1+2+53)\n\n\nprint(1 - 4)\nprint(-5)\n\n’ì’∏÷É’∏’≠’°’Ø’°’∂’´ ’ø’•’Ω’°’Ø\n\na = 1 + 1\nprint(a, type(a))\n\nb = 1 + 2.1\nprint(b, type(b)) # int + float = float\n\nc = 1 + 2.0\nprint(c, type(c)) # ’•’©’• ’∏÷Ç’≤’≤’°’Ø’´ . ’§’∂’•’∂÷Ñ ’°÷Ä’§’•’∂ float ’Ø’§’°’º’∂’°\n\n‘ª’Ü’π’´ 0.1 + 0.2 ’Ø’°÷Ä’° ’∞’°’æ’°’Ω’°÷Ä ’π’¨’´’∂’´ 0.3-’´: ‘º’°’æ ’æ’´’§’•’∏ ’§’° ’¢’°÷Å’°’ø÷Ä’∏’≤’ù https://www.youtube.com/watch?v=PZRI1IfStY0\n\nx = 1.0 + 2.0 \nprint(x)\nprint(type(x))\n\n\nprint(5 * 12)\nprint(5 * 12.0)\n\n\n# / - ’¥’´’∑’ø ’ø’°’¨’´’Ω ’° float\nprint(14 / 3)\nprint(14 / 2)\n\n\nprint(14 // 3) # int(14/3)\nprint(type(14//3))\n\n# 14 = 4 * 3 + 2\n# print(int(14/3))\n\n\nprint(-5 // 3) # ’°’¥’¢’∏’≤’ª’°’©’´’æ ’¢’°’™’°’∂’∏÷Ç’¥ -5 = -2 * 3 + 1\n\n\nprint(7 % 2) # ’¥’∂’°÷Å’∏÷Ä’§ 7 = 3 * 2 + 1\n\n\nprint(2**3) # ’ß÷Ñ’Ω’∫’∏’∂’•’∂’ø\n# 2 * 2 * 2\n\nprint(2**(1/2))\n\n\n\n5.5.2 ’£’∏÷Ä’Æ’∏’≤’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä’´ ’∞’•÷Ä’©’°’Ø’°’∂’∏÷Ç’©’µ’∏÷Ç’∂’®\n\nprint(2 * (3 + 1)) # ’Ω’Ø’¶’¢’∏÷Ç’¥ ÷É’°’Ø’°’£’Æ’´ ’¥’´’ª’´’∂’®, ’∞’•’ø’∏ ’°÷Ä’ø’°’§÷Ä’µ’°’¨’®\n\n\nprint(2*3 + 1) # ’Ω’Ø’¶’¢’∏÷Ç’¥ ’¢’°’¶’¥’°’∫’°’ø’Ø’∏÷Ç’¥ ’∞’•’ø’∏ ’£’∏÷Ç’¥’°÷Ä’∏÷Ç’¥\n\n\n\n5.5.3 ‘±’æ’•’¨’´ ’Ø’°÷Ä’≥ ’æ’•÷Ä’°’£÷Ä’•’¨’∏÷Ç ’±÷á\n\ntariq = 18\nprint(tariq)\n\ntariq = tariq + 1\nprint(tariq)\n\n\ntariq = 18\ntariq = tariq + 1.5\n\nprint(tariq)\n\n\ntariq = 18\ntariq += 1.5 # ’∂’∏÷Ç’µ’∂’∂’° ’´’∂’π tariq = tariq + 1.5\n\nprint(tariq)\n\n\nb = 4\n\nb *= 3 # b = b * 3\nprint(b)\n\nb //= 5\nprint(b)",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>01 Intro: Print, Comments, Variables, Numbers, Input</span>"
    ]
  },
  {
    "objectID": "python/01_Intro.html#input",
    "href": "python/01_Intro.html#input",
    "title": "3¬† 01 Intro: Print, Comments, Variables, Numbers, Input",
    "section": "5.6 Input",
    "text": "5.6 Input\n\na = input() # ’¥’´’∑’ø ’¥’∏÷Ç’ø÷Ñ’® ’ø’•÷Ñ’Ω’ø ’°\nprint('‘≤’°÷Ä÷á', a)\n\n\nprint(a)\n\n\ninput()\n\n’Ñ’´ ÷Ñ’°’∂’´ ’¥’∏÷Ç’ø÷Ñ\n\nanun = input(\"Enter your name: \")\nazganun = input()\n\nprint(anun)\nprint(azganun)\n\n\na = 1\nprint(a)\n\na = input()\nprint(a)\n\n’ä’•’ø÷Ñ ’° ’¶’£’∏÷Ç’µ’∑ ’¨’´’∂’•’∂÷Ñ ’ø’æ’µ’°’¨’∂’•÷Ä’´ ’ø’•’Ω’°’Ø’´ ’∞’•’ø\n\nnum = input()\n\nprint(num + 2)\n\n\nprint(num, type(num)) # input-’® ’¥’´’∑’ø ’ø’•÷Ñ’Ω’ø ’° ’æ’•÷Ä’°’§’°÷Ä’±’∂’∏÷Ç’¥\n\n\ntiv = int(input())\n\nprint(type(tiv))\n\nprint(tiv + 1)\n\n\nnumber = int(input('‘Ω’∂’§÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’¥’∏÷Ç’ø÷Ñ’°’£÷Ä’•’¨ ’©’´’æ'))\nprint(type(number))\nprint(number // 3)",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>01 Intro: Print, Comments, Variables, Numbers, Input</span>"
    ]
  },
  {
    "objectID": "python/01_Intro.html#’∞’´’¥’∂’°’Ø’°’∂-’ø’∂’°’µ’´’∂",
    "href": "python/01_Intro.html#’∞’´’¥’∂’°’Ø’°’∂-’ø’∂’°’µ’´’∂",
    "title": "3¬† 01 Intro: Print, Comments, Variables, Numbers, Input",
    "section": "6.1 ’Ä’´’¥’∂’°’Ø’°’∂ ’ø’∂’°’µ’´’∂",
    "text": "6.1 ’Ä’´’¥’∂’°’Ø’°’∂ ’ø’∂’°’µ’´’∂\n\nProfound ’¢’°’™’´’∂ 1 (’Ñ’∏÷Ç’ø÷Ñ ÷á ’•’¨÷Ñ) - ’¨÷Ä’´’æ\nProfound ’¢’°’™’´’∂ 3 (’ì’∏÷É’∏’≠’°’Ø’°’∂’∂’•÷Ä ÷á ’°’¥’¢’∏’≤’ª ’©’æ’•÷Ä) - ’¨÷Ä’´’æ\n’à’π ’∫’°÷Ä’ø’°’§’´÷Ä - ’Ø’°÷Ä’∏’≤ ’•÷Ñ ’°’∂’°’∂’∏÷Ç’∂ ’∞’°’µ’ø’∂’•’¨ ’Å’•÷Ä ’Ø’°÷Ä’Æ’´÷Ñ’® ’§’°’Ω’´ ’æ’•÷Ä’°’¢’•÷Ä’µ’°’¨ ’°’µ’Ω’ø’•’≤",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>01 Intro: Print, Comments, Variables, Numbers, Input</span>"
    ]
  },
  {
    "objectID": "python/01_Intro.html#’∂’∑’∏÷Ç’¥’∂’•÷Ä",
    "href": "python/01_Intro.html#’∂’∑’∏÷Ç’¥’∂’•÷Ä",
    "title": "3¬† 01 Intro: Print, Comments, Variables, Numbers, Input",
    "section": "6.2 ’Ü’∑’∏÷Ç’¥’∂’•÷Ä",
    "text": "6.2 ’Ü’∑’∏÷Ç’¥’∂’•÷Ä\n\n’è’∂’°’µ’´’∂’® ’°’∂’•’¨’´’Ω ’¥’∏’ø’•÷Å’•÷Ñ ’•’∂ ’Ω’Ø’¶’¢’∏÷Ç’∂÷Ñ’∏’æ ’∏÷Ä x ’≠’∂’§’´÷Ä’® ’¨’∏÷Ç’Æ’•’¨’´’Ω ’§’∏÷Ç÷Ñ ’¥’•’∂’°’Ø ’£’´’ø’•÷Ñ ’•’∂ ’°’¥’•’∂’´’∂’π’® ’´’∂’π profound-’® ’¥’´’∂’π÷á x-’´’∂ ’∞’°’Ω’∂’•’¨’® ’∂’•÷Ä’Ø’°’µ’°÷Å÷Ä’•’¨’° ’°÷â ‘µ÷Ä’¢’•’¥’∂ ÷Ö’£’ø’°’£’∏÷Ä’Æ’∏’≤ ’£’∏÷Ä’Æ’´÷Ñ’∂’•÷Ä’® ’Ω’°’∞’¥’°’∂’°÷É’°’Ø’•’¨’∏÷Ç ’§’•’∫÷Ñ’∏÷Ç’¥ ’° ’≠’∂’§’´÷Ä’® ’´’Ω’Ø’°’Ø’°’∂’´÷Å ÷Ö’£’∏÷Ç’ø ’ø’°’¨’´’Ω÷â ’ï÷Ä’´’∂’°’Ø’´ ’∞’°’¥’°÷Ä ’•’©’• ’≠’∂’§’´÷Ä ’¨’´’∂’´ ’∏÷Ä’ø’•’≤ ’∫’•’ø÷Ñ ’° ’Ω’∏÷Ä’ø’°’æ’∏÷Ä’•’¨ ’©’æ’•÷Ä’® ’∏÷Ç ’§’∏÷Ç÷Ñ ’£’´’ø’•÷Ñ sort ’∞÷Ä’°’¥’°’∂’´ ’¥’°’Ω’´’∂’ù ’ß ’∞’°, ’Ø’°÷Ä’°÷Ñ ÷Ö’£’ø’°’£’∏÷Ä’Æ’•÷Ñ ’ß’§ ’∞÷Ä’°’¥’°’∂’®, ’≠’∂’§’´÷Ä’® ’¨’∏÷Ç’Æ’æ’´’ù ’¢’°’µ÷Å ’°÷Ä’§’µ’∏÷Ç’∂÷Ñ’∏÷Ç’¥ ’∂’∏÷Ä’¥’°’¨ ’π’•÷Ñ ’Ω’∏’æ’∏÷Ä’´ ’ß’¨’´÷â\n‘µ’©’• ÷Ñ’´’π ’™’°’¥’°’∂’°’Ø ’∏÷Ç’∂’•÷Ñ ’Ø’°÷Ä’°÷Ñ ’¢’°÷Å ’©’∏’≤’•÷Ñ ‘≤’°’™’´’∂ 1 - 5, 6, 14 ’≠’∂’§’´÷Ä’∂’•÷Ä’®\n‘≤’°’™’´’∂ 3 13-’∏÷Ç’¥ ’∫’•’ø÷Ñ ’° ’¶’∏÷Ç’ø ÷Å’°’∂’Ø’°÷Å’°’Æ ’©’´’æ ’ø’∫’•÷Ñ\n‘≤’°’™’´’∂ 3-’´ ’æ’•÷Ä’ª’´’∂ ’•÷Ä’Ø’∏÷Ç ’≠’∂’§’´÷Ä’∂’•÷Ä’® ’¨’´÷Ñ’® ’¢’¶’¢’¶’°’¨’∏÷Ç ’•’∂, ’≠’∏÷Ä’∞’∏÷Ç÷Ä’§ ’Ø’ø’°’∂÷Ñ ’∑’°’ø ’™’°’¥’°’∂’°’Ø ’ø÷Ä’°’¥’°’§÷Ä’•÷Ñ ’´÷Ä’•’∂÷Å\nProfound-’® ’∂’•÷Ä’Ø’°’µ’°÷Å’∂’∏’≤ ’æ’´’§’•’∏\n’á’∏÷Ç’ø ’•’¥ ’°’Ω’•’¨ GPT ’∏÷Ç ’∂’¥’°’∂ ’£’∏÷Ä’Æ’´÷Ñ’∂’•÷Ä’´÷Å ÷Ö’£’ø’æ’•’¨ ’π’Ø’°\n‘µ’©’• ’∞’°÷Ä÷Å’•÷Ä ’¨’´’∂’´’ù ’°’∂’∫’°’µ’¥’°’∂ ’≠’°’¢’°÷Ä ’°÷Ä’•÷Ñ (’Ø’°’º’°’¨’µ’∏’Ø’´ ’∫’°’∞’® ’∞’´’∑’•÷Ñ)",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>01 Intro: Print, Comments, Variables, Numbers, Input</span>"
    ]
  },
  {
    "objectID": "python/01_Intro.html#’¨’∏÷Ç’Æ’∏÷Ç’¥’∂’•÷Ä",
    "href": "python/01_Intro.html#’¨’∏÷Ç’Æ’∏÷Ç’¥’∂’•÷Ä",
    "title": "3¬† 01 Intro: Print, Comments, Variables, Numbers, Input",
    "section": "6.3 ‘º’∏÷Ç’Æ’∏÷Ç’¥’∂’•÷Ä",
    "text": "6.3 ‘º’∏÷Ç’Æ’∏÷Ç’¥’∂’•÷Ä\n\n’à÷Ä’∏’∑ ’≠’∂’§’´÷Ä’∂’•÷Ä’´ ’æ’´’§’•’∏’¨’∏÷Ç’Æ’∏÷Ç’¥’∂’•÷Ä\n‘≤’∏’¨’∏÷Ä ’≠’∂’§’´÷Ä’∂’•÷Ä’´ ’¨’∏÷Ç’Æ’∏÷Ç’¥’∂’•÷Ä / ’∂’∑’∏÷Ç’¥’∂’•÷Ä",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>01 Intro: Print, Comments, Variables, Numbers, Input</span>"
    ]
  },
  {
    "objectID": "python/01_Intro.html#’∞’°’∑’æ’•’¨-’£’∂’°’∞’°’ø’°’Ø’°’∂’®",
    "href": "python/01_Intro.html#’∞’°’∑’æ’•’¨-’£’∂’°’∞’°’ø’°’Ø’°’∂’®",
    "title": "3¬† 01 Intro: Print, Comments, Variables, Numbers, Input",
    "section": "7.1 ’Ä’°’∑’æ’•’¨ ’£’∂’°’∞’°’ø’°’Ø’°’∂’®",
    "text": "7.1 ’Ä’°’∑’æ’•’¨ ’£’∂’°’∞’°’ø’°’Ø’°’∂’®\n’Ñ’∏÷Ç’ø÷Ñ’∏÷Ç’¥ ’ø÷Ä’æ’°’Æ ’ß ’°’∑’°’Ø’•÷Ä’ø’´ ’Ø’´’Ω’°’¥’µ’°’Ø’´ ’®’∂’©’°÷Å÷Ñ’∏÷Ç’¥ ’Ω’ø’°÷Å’°’Æ 3 ’©’•’¥’°’ø’´’Ø’∂’•÷Ä’´ ’°÷Ä’§’µ’∏÷Ç’∂÷Ñ’•÷Ä’® ÷á ’Ø’´’Ω’°’¥’µ’°’Ø’°’µ’´’∂ ’£÷Ä’°’æ’∏÷Ä’´ ’¥’´’°’æ’∏÷Ä’®, ’£’ø’∂’•’¨ ’©’• ’´’∂’π ’¢’°’¨’∏’æ ’ß ’°’∑’°’Ø’•÷Ä’ø’® ’°’æ’°÷Ä’ø’•’¨ ’Ø’´’Ω’°’¥’µ’°’Ø’®\n\ntematik1 = int(input(\"‘π’•’¥’°’ø’´’Ø ’£’∂’°’∞’°’ø’°’Ø’°’∂ 1÷â \"))\ntematik2 = int(input(\"‘π’•’¥’°’ø’´’Ø ’£’∂’°’∞’°’ø’°’Ø’°’∂ 2÷â \"))\ntematik3 = int(input(\"‘π’•’¥’°’ø’´’Ø ’£’∂’°’∞’°’ø’°’Ø’°’∂ 3÷â \"))\nkisamyakain = int(input(\"‘ø’´’Ω’°’¥’µ’°’Ø’°’µ’´’∂÷â \"))\n\nyntacik_mijin = (tematik1 + tematik2 + tematik3) // 3\n\nprint(yntacik_mijin)\nverjnakan = (kisamyakain + yntacik_mijin) / 2\n\nprint(\"’æ’•÷Ä’ª’∂’°’Ø’°’∂ ’£’∂’°’∞’°’ø’°’Ø’°’∂÷â \", verjnakan)",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>01 Intro: Print, Comments, Variables, Numbers, Input</span>"
    ]
  },
  {
    "objectID": "python/01_Intro.html#÷Ñ’°’º’°’Ø’∏÷Ç’Ω’°’µ’´’∂-’∞’°’æ’°’Ω’°÷Ä’∏÷Ç’¥",
    "href": "python/01_Intro.html#÷Ñ’°’º’°’Ø’∏÷Ç’Ω’°’µ’´’∂-’∞’°’æ’°’Ω’°÷Ä’∏÷Ç’¥",
    "title": "3¬† 01 Intro: Print, Comments, Variables, Numbers, Input",
    "section": "7.2 ’î’°’º’°’Ø’∏÷Ç’Ω’°’µ’´’∂ ’∞’°’æ’°’Ω’°÷Ä’∏÷Ç’¥",
    "text": "7.2 ’î’°’º’°’Ø’∏÷Ç’Ω’°’µ’´’∂ ’∞’°’æ’°’Ω’°÷Ä’∏÷Ç’¥\n’Ñ’∏÷Ç’ø÷Ñ’∏÷Ç’¥ ’ø÷Ä’æ’°’Æ ’ß ’•÷Ä’•÷Ñ ’ø’∏’≤’ù ÷Ñ’°’º’°’Ø’∏÷Ç’Ω’´ ’∞’°’æ’°’Ω’°÷Ä’¥’°’∂ (ax^2 + bx + c = 0) ’£’∏÷Ä’Æ’°’Ø’´÷Å’∂’•÷Ä’® (a, b, c)\n’ø’∫’•’¨ ’∞’°’æ’°’Ω’°÷Ä’¥’°’∂ ’¨’∏÷Ç’Æ’∏÷Ç’¥’∂’•÷Ä’®\n\na = float(input(\"’∂’•÷Ä’¥’∏÷Ç’Æ’•÷Ñ a: \"))\nb = float(input(\"’∂’•÷Ä’¥’∏÷Ç’Æ’•÷Ñ b: \"))\nc = float(input(\"’∂’•÷Ä’¥’∏÷Ç’Æ’•÷Ñ c: \"))\n\ndiscr_armat = (b**2 - 4*a*c)**0.5\n# ‘æ÷Ä’°’£’´÷Ä’® ’°’∑’≠’°’∏÷Ç’¥ ’° ’¥’•’∂’°’Ø ’∏’π ’¢’°÷Å’°’Ω’°’Ø’°’∂ ’§’´’Ω’Ø‚Ä§ ’§’•’∫’∂’∏÷Ç’¥\n\nx1 = (-b + discr_armat) / (2 * a)\nx2 = (-b - discr_armat) / (2 * a)\n\nprint(\"’¨’∏÷Ç’Æ’∏÷Ç’¥’∂’•÷Ä’∂ ’•’∂÷â\", x1, x2)",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>01 Intro: Print, Comments, Variables, Numbers, Input</span>"
    ]
  },
  {
    "objectID": "python/01_Intro.html#profound-’¨÷Ä’°÷Å’∏÷Ç÷Å’´’π",
    "href": "python/01_Intro.html#profound-’¨÷Ä’°÷Å’∏÷Ç÷Å’´’π",
    "title": "3¬† 01 Intro: Print, Comments, Variables, Numbers, Input",
    "section": "7.3 Profound ‘º÷Ä’°÷Å’∏÷Ç÷Å’´’π",
    "text": "7.3 Profound ‘º÷Ä’°÷Å’∏÷Ç÷Å’´’π\n\n2.1 ’∞’•’∑’ø ’ß÷Ä ’π’ß\n4.1 ’©’æ’°’¢’°’∂’°’Ø’°’∂ ’∫÷Ä’∏’£÷Ä’•’Ω’´’°\n4.3 ’∏÷Ç’Ω’°’∂’∏’≤’∂’•÷Ä ÷á ’≠’∂’±’∏÷Ä’∂’•÷Ä 2",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>01 Intro: Print, Comments, Variables, Numbers, Input</span>"
    ]
  },
  {
    "objectID": "python/02_Conditions.html",
    "href": "python/02_Conditions.html",
    "title": "4¬† 02 Conditionals: if, elif, else, match, nested if",
    "section": "",
    "text": "5 üé¶ ’è’•’Ω’°’§’°’Ω’•÷Ä + ’¨÷Ä’°÷Å’∏÷Ç÷Å’´’π\n‘Ω’∏÷Ç’Ω’ø’∏÷Ç÷É, ’¨’∏÷Ç’Ω’°’∂’Ø’°÷Ä’´ ’∞’≤’∏÷Ç’¥’® ’Ä’•’≤’´’∂’°’Ø’ù ’Ä’°’µ’Ø ‘≤’°÷Ä’Ω’•’≤’µ’°’∂\n(’£’∏÷Ç÷Å’• ’¥’´ ’©’•’©÷á ’∞’´’∂ ’¨’´’∂’´ ’æ’•÷Ä’Ω’´’°’∂)\n‘±’≠ if ’ø’•’Ω’∂’•’¥_÷Ö÷Ä’•÷Ä’´÷Å_’¥’´_÷Ö÷Ä:\n(c) ’™’∏’≤’∏’æ’∏÷Ç÷Ä’§\nif\n(c) Pink Floyd\n’Ü’∑’∏÷Ç’¥’∂’•÷Ä÷â - 2023, 2025-’´ ’£’∏÷Ä’Æ’∂’°’Ø’°’∂’∂’•÷Ä’´’∂ ’¨÷Ä’´’æ ’ø’°÷Ä’¢’•÷Ä ’≠’∂’§’´÷Ä’∂’•÷Ä ’•’∂ ’∂’°’µ’æ’∏÷Ç’¥’ù ’Ø’°÷Ä’∏’≤ ’•÷Ñ ’•÷Ä’Ø’∏÷Ç’Ω’∂ ’ß’¨ ’∂’°’µ’•’¨÷â - ’è’•’Ω’∏÷Ç’©’µ’∏÷Ç’∂’∏÷Ç’¥ ’∂’µ’∏÷Ç’©’® ’¨÷Ä’´’æ ’∂’∏÷Ç’µ’∂’∂ ’° ’∏÷Ç’≤’≤’°’Ø’´ ’§’°’Ω’® ’°’∂’Ø’°÷Å’∂’∏’≤’∂’•÷Ä’∂ ’•’∂ ’ø’°÷Ä’¢’•÷Ä\n‘¥’°’Ω’®’∂’©’°÷Å’´’∂ ’¥’°’Ω’∂’°’Ø÷Å’∏÷Ç’©’µ’°’∂ ’∏÷Ç ’Ø’°÷Ä’Æ’´÷Ñ ’∞’°’µ’ø’∂’•’¨’∏÷Ç Google Form",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>02 Conditionals: if, elif, else, match, nested if</span>"
    ]
  },
  {
    "objectID": "python/02_Conditions.html#bool-’ø’æ’µ’°’¨’∂’•÷Ä’´-’ø’•’Ω’°’Ø",
    "href": "python/02_Conditions.html#bool-’ø’æ’µ’°’¨’∂’•÷Ä’´-’ø’•’Ω’°’Ø",
    "title": "4¬† 02 Conditionals: if, elif, else, match, nested if",
    "section": "6.1 Bool ’ø’æ’µ’°’¨’∂’•÷Ä’´ ’ø’•’Ω’°’Ø",
    "text": "6.1 Bool ’ø’æ’µ’°’¨’∂’•÷Ä’´ ’ø’•’Ω’°’Ø\nThe name ‚ÄúBoolean‚Äù comes from the mathematician George Boole\n\na = True\nb = False\n\nprint(type(a))\nprint(a)\nprint(b)\n\n&lt;class 'bool'&gt;\nTrue\nFalse\n\n\n\n6.1.1 ’∞’°’¥’•’¥’°’ø’∏÷Ç’©’µ’°’∂ ’£’∏÷Ä’Æ’∏’≤’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä\n\n\n\n’ï’∫’•÷Ä’°’ø’∏÷Ä\n’∂’Ø’°÷Ä’°’£’´÷Ä\n\n\n\n\n==\nTrue, ’•’©’• ’∞’°’æ’°’Ω’°÷Ä ’•’∂\n\n\n!=\nTrue, ’•’©’• ’∞’°’æ’°’Ω’°÷Ä ’π’•’∂\n\n\n&lt;\nTrue, ’•’©’• ’°’æ’•’¨’´ ÷É’∏÷Ñ÷Ä’° ’°’º’°’ª’´’∂’® ’•÷Ä’Ø’∏÷Ä’§’´÷Å\n\n\n&gt;\nTrue, ’•’©’• ’°’æ’•’¨’´ ’¥’•’Æ’° ’°’º’°’ª’´’∂’® ’•÷Ä’Ø’∏÷Ä’§’´÷Å\n\n\n&lt;=\nTrue, ’•’©’• ’°’º’°’ª’´’∂’® ’°’æ’•’¨’´ ÷É’∏÷Ñ÷Ä’° ’Ø’°’¥ ’∞’°’æ’°’Ω’°÷Ä ’•÷Ä’Ø’∏÷Ä’§’´÷Å\n\n\n&gt;=\nTrue, ’•’©’• ’°’º’°’ª’´’∂’® ’°’æ’•’¨’´ ’¥’•’Æ’° ’Ø’°’¥ ’∞’°’æ’°’Ω’°÷Ä ’•÷Ä’Ø’∏÷Ä’§’´÷Å\n\n\nis\nTrue, ’•’©’• ’∂’∏÷Ç’µ’∂ ÷Ö’¢’µ’•’Ø’ø ’•’∂ (’∞’•’Ω’° ’Ø’¢’°÷Å’°’ø÷Ä’•’¥ :) )\n\n\n\n’Ä’°’Ø’°’º’°’Ø ’§’•’∫÷Ñ’∏÷Ç’¥’ù False\n\na = 11\nb = 509\n\n\nprint(a, \"==\", b, a==b)\nprint(a, \"!=\", b, a != b)\n\n11 == 509 False\n11 != 509 True\n\n\n\nprint(a, \"&gt;\", b, a&gt;b)\nprint(a, \"&lt;\", b, a&lt;b)\n\n11 &gt; 509 False\n11 &lt; 509 True\n\n\n\nprint(a, \"&gt;=\", b, a &gt;= b )\nprint(a, \"&lt;=\", b, a&lt;=b)\n\n11 &gt;= 509 False\n11 &lt;= 509 True\n\n\n\nprint(a, 'is', b, a is b)\n\n11 is 509 False\n\n\n\n6.1.1.1 is-’® ’¥’°’∂÷Ä’°’¥’°’Ω’∂\n\nc = 465\nd = 465\n\nprint(c, '==', d, c == d)\nprint(c, 'is', d, c is d)\n\n465 == 465 True\n465 is 465 False\n\n\n\ne = c\nprint(e, 'is', c, e is c)\n\n465 is 465 True\n\n\n\nprint(id(c))\nprint(id(d))\nprint(id(e))\n\n140465260069104\n140465260070864\n140465260069104\n\n\n\nprint(c is d)\n# ’∂ ’∂’∏÷Ç’µ’∂’∂’° ’´’∂’π\nprint(id(c) == id(d))\n\nFalse\nFalse\n\n\n\n\n\n6.1.2 ‘≤’∏÷Ç’¨’µ’°’∂ ’ø÷Ä’°’¥’°’¢’°’∂’∏÷Ç’©’µ’∏÷Ç’∂\nand (&), or (|), not\n\n# and (&)\n\nprint(True and True) # True and True and True\nprint(True and False) # print(True & False)\nprint(False and False)\n\nTrue\nFalse\nFalse\nFalse\n\n\n\n# or (|)\nprint(True or True)\nprint(True or False) # print(True | False)\nprint(False or False)\n\nTrue\nTrue\nFalse\n\n\n\n# not\nprint(not True)\nprint(not False)\n\nFalse\nTrue\n\n\n\n\n6.1.3 ’ì’∏’≠’°’∂÷Å’°’Ø’°’∂’∏÷Ç’©’µ’∏÷Ç’∂ (transitivity)\n\na = 11\n\nprint(a &gt; 10)\nprint(a &lt; 20)\n\nprint(10 &lt; a and a &lt; 20)\n\nprint(10 &lt; a &lt; 20) # 10 &lt; a and a &lt; 20\n\nTrue\nTrue\nTrue\nTrue\n\n\n\nprint(10 &lt; a &lt; 20)\n\nTrue\n\n\n\na = 11\nprint(10 == a &lt; 11) # 10 == a and a &lt; 11\n# ’´’û’∂’π ’Ø’ø’°\n\nFalse\n\n\n\n\n6.1.4 ’é’°÷Ä’™’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä\n\nprint(not 5 != 3)\n\n\nprint((not 4 == 4) or (4 &lt; 6))\n\n\nprint((5 &lt; 5 and 5 &gt; 3) or 4 &gt; 4)\n\n\n\n6.1.5 ‘≤’∏÷Ç’¨’µ’°’∂’∂’•÷Ä’® ’´’∂’π’∫’•’Ω 1, 0\n\nprint(True == 2)\nprint(False == 0)\n\nFalse\nTrue\n\n\n\nprint(True - True)\n\n0\n\n\n\nprint(True / False)\n\n\n---------------------------------------------------------------------------\nZeroDivisionError                         Traceback (most recent call last)\nInput In [21], in &lt;cell line: 1&gt;()\n----&gt; 1 print(True / False)\n\nZeroDivisionError: division by zero\n\n\n\n\n\n6.1.6 ‘±’µ’¨\n\n== ’•’©’• ’∞’°’¥’•’¥’°’ø’∏÷Ç’¥ ’•’∂÷Ñ,\n= ’•’©’• ’æ’•÷Ä’°’£÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’°’∂’∏÷Ç’¥\n\nFalse ’•’∂ False ’´÷Å ’∏÷Ç 0 ’´÷Å ’¢’°÷Å’´ ’∂’°÷á’ù\n\nprint(int(3.14))\nprint(bool(3.14))\n\n3\nTrue\n\n\n\nbool(0)\n\nFalse\n\n\n\nbool(0.0)\n\nFalse\n\n\n\nbool('')\n\nFalse\n\n\n\nbool([])\nbool({})\nbool(())\n\nFalse\n\n\n\nbool(None)\n\nFalse\n\n\n’Ñ’∂’°÷Å’°’Æ ’°’¥’•’∂’´’∂’π True\n\nprint(bool(3))\nprint(bool(3) and True)\n\nTrue\nTrue\n\n\n\nprint(bool('’∫’°’∂’´÷Ä'))\n\nTrue",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>02 Conditionals: if, elif, else, match, nested if</span>"
    ]
  },
  {
    "objectID": "python/02_Conditions.html#if-’•’©’•-’∫’°’µ’¥’°’∂",
    "href": "python/02_Conditions.html#if-’•’©’•-’∫’°’µ’¥’°’∂",
    "title": "4¬† 02 Conditionals: if, elif, else, match, nested if",
    "section": "6.2 If (’•’©’•) ’∫’°’µ’¥’°’∂",
    "text": "6.2 If (’•’©’•) ’∫’°’µ’¥’°’∂\n’Ä’°’≥’°’≠ ’¥’•÷Ä ’£’∏÷Ä’Æ’∏’≤’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä’® ’ø’°÷Ä’¢’•÷Ä ’•’∂, ’Ø’°’≠’æ’°’Æ ’∏÷Ä’∏’∑ ’∫’°’µ’¥’°’∂’∂’•÷Ä’´÷Å,\n’ï÷Ä’´’∂’°’Ø ’∑’∏÷Ä ’∞’°’£’∂’•’¨’∏÷Ç ÷Ü’∏÷Ç’∂’Ø÷Å’´’°’∂ ’Ø’°’≠’æ’°’Æ’° ’•’≤’°’∂’°’Ø’´÷Å’ù\n\n’•’©’• ÷Å’∏÷Ç÷Ä’ø’°\n    ’ø’°÷Ñ ’∑’∏÷Ä ’∞’°’£’∂’•’¨\n\n’¥’∂’°÷Å’°’Æ ’§’•’∫÷Ñ’•÷Ä’∏÷Ç’¥\n    ’©’•’©÷á ’∞’°’£’∂’æ’•’¨\n\n\nis_cold = True\n\nif is_cold:\n    print(34567)\n    print('’ø’°÷Ñ ’∞’°’£’∂’æ’´, ’π’¥÷Ä’Ω’•’Ω ’¢’°’¨’° ’ª’°’∂')\n\nprint(3456782)\n\n34567\n’ø’°÷Ñ ’∞’°’£’∂’æ’´, ’π’¥÷Ä’Ω’•’Ω ’¢’°’¨’° ’ª’°’∂\n3456782\n\n\n\nis_cold = False\n\nif is_cold == True:\n    print('’ø’°÷Ñ ’∞’°’£’∂’æ’´, ’π’¥÷Ä’Ω’•’Ω ’¢’°’¨’° ’ª’°’∂')\nelse:\n    print(\"’ø’°÷Ñ ’ß\")\n\nprint(2)\n\n’ø’°÷Ñ ’ß\n2\n\n\n\nif bool(3 == True):\n    print(211)\n\nif bool(3):\n    print(123)\n\nif 3: # bool(3)\n    print(134)\n\n\nif 0: # bool(0)\n    print(2)\n\n123\n134\n\n\n\nis_cold = False\n\nif bool(is_cold) == True:\n    print('’ø’°÷Ñ ’∞’°’£’∂’æ’´, ’π’¥÷Ä’Ω’•’Ω ’¢’°’¨’° ’ª’°’∂')\nelse:\n    print(\"’ø’°÷Ñ ’ß\")\n\nprint(2)\n\n’ø’°÷Ñ ’ß\n2\n\n\n\nis_cold = False\n\nif is_cold: # bool(is_cold) == True\n    print('’ø’°÷Ñ ’∞’°’£’∂’æ’´, ’π’¥÷Ä’Ω’•’Ω ’¢’°’¨’° ’ª’°’∂')\nelse:\n    print(\"’ø’°÷Ñ ’ß\")\n\nprint(2)\n\n’ø’°÷Ñ ’ß\n2\n\n\n\nis_cold = False\n\n# if is_cold:\nif \"barev\": # bool(\"barev\") -&gt; True\n    print('’ø’°÷Ñ ’∞’°’£’∂’æ’´, ’π’¥÷Ä’Ω’•’Ω ’¢’°’¨’° ’ª’°’∂')\nelse:\n    print(\"’ø’°÷Ñ ’ß\")\n\nprint(2)\n\n’ø’°÷Ñ ’∞’°’£’∂’æ’´, ’π’¥÷Ä’Ω’•’Ω ’¢’°’¨’° ’ª’°’∂\n2\n\n\n–°++ ’´ ’∫’•’Ω {} ’π’Ø’°’∂, ’Ω’ø’•’≤ tab-’•÷Ä ’°\n\nvazelu_enq = True\ncurta = False\n\nif (not curta) and vazelu_enq:\n    print('’¢’∏’©’°’Ω')\n    print(3)\nelse:\n    print('’Ø’∏’∑’´’Ø')\n\nprint(4)\n\n’¢’∏’©’°’Ω\n3\n\n\n\n6.2.1 elif (elif)\n’Ä’∂’°÷Ä’°’æ’∏÷Ä’° ’°’µ’∂’∫’•’Ω ’¨’´’∂’´ ’∏÷Ä ’ø’°÷Ä’¢’•÷Ä’°’Ø’∂’•÷Ä’® ’•÷Ä’Ø’∏÷Ç’Ω’´÷Å ’∑’°’ø ’¨’´’∂’•’∂’ù\n’¶’°÷Ä’©’∂’∏÷Ç’¥ ’•’∂÷Ñ ’•’©’• ’∑’°’¢’°’©’°’ù ’£’∂’∏÷Ç’¥ ’•’∂÷Ñ ’∑’°’¢’°’©÷Ö÷Ä’µ’°’Ø’´,\n’•’©’• ’Ø’´÷Ä’°’Ø’´’ù ’£’∂’∏÷Ç’¥ ’•’∂÷Ñ ’π’´’∂’£’°’π’∏÷Ç’∂’£’´ ’π’•’¥’∫’´’∏’∂’°’ø’´,\n’•’©’• ’°’µ’¨ ÷Ö÷Ä’° ’£’∂’∏÷Ç’¥ ’•’∂÷Ñ ’§’°’Ω’´\n\nday = '’∑’°’¢’°’©' # or = \"’∑’°’¢’°’©\"\n\nif day == '’∑’°’¢’°’©':\n    print('’£’∂’°÷Å’´’∂÷Ñ ’∑’°’¢’°’©÷Ö÷Ä’µ’°’Ø')\nelse:\n    print('’π’•’∂÷Ñ ’£’∂’∏÷Ç’¥ ’∑’°’¢’°’©÷Ö÷Ä’µ’°’Ø’´, ’¢’° ’∏÷Ç’û÷Ä ’•’∂÷Ñ ’£’∂’∏÷Ç’¥’ù ’∫’°÷Ä’¶ ’π’´')\n\n’£’∂’°÷Å’´’∂÷Ñ ’∑’°’¢’°’©÷Ö÷Ä’µ’°’Ø\n\n\n\nday = '’Ø’´÷Ä’°’Ø’´'\n\nif day == '’∑’°’¢’°’©':\n    print('’£’∂’°÷Å’´’∂÷Ñ ’∑’°’¢’°’©÷Ö÷Ä’µ’°’Ø')\nelse:\n    if day == '’Ø’´÷Ä’°’Ø’´': # else if, ’•’©’• ’æ’•÷Ä÷á’´ if-’® ’π’´ ’∏÷Ç ’¥’•÷Ä ’Ω’ø’•’≤ ’£÷Ä’°’Æ ’∫’°’µ’¥’°’∂’∂’°\n        print('’£’∂’°÷Å’´’∂÷Ñ ’π’´’∂’£’°’π’∏÷Ç’∂’£ ’≠’°’≤’°’∂÷Ñ')\n    else:\n        print('’£’∂’°÷Å’´’∂÷Ñ ’§’°’Ω’´ :( ')\n        \n\n’£’∂’°÷Å’´’∂÷Ñ ’§’°’Ω’´ :( \n\n\n\nday = '’∑’°’¢’°’©'\n\nif day == '’∑’°’¢’°’©':\n    print('’£’∂’°÷Å’´’∂÷Ñ ’∑’°’¢’°’©÷Ö÷Ä’µ’°’Ø')\nelif day == '’Ø’´÷Ä’°’Ø’´': # else if, ’•’©’• ’æ’•÷Ä÷á’´ if-’® ’π’´ ’∏÷Ç ’¥’•÷Ä ’Ω’ø’•’≤ ’£÷Ä’°’Æ ’∫’°’µ’¥’°’∂’∂’°\n    print('’£’∂’°÷Å’´’∂÷Ñ ’π’´’∂’£’°’π’∏÷Ç’∂’£ ’≠’°’≤’°’∂÷Ñ')\nelse:\n    print('’£’∂’°÷Å’´’∂÷Ñ ’§’°’Ω’´ :( ')\n\n’£’∂’°÷Å’´’∂÷Ñ ’∑’°’¢’°’©÷Ö÷Ä’µ’°’Ø\n\n\n\nday = '’∑’°’¢’°’©'\nday = \"’Ø’´÷Ä’°’Ø’´\"\nday = \"werxtyno\"\n\nif day == '’∑’°’¢’°’©':\n    print('’£’∂’°÷Å’´’∂÷Ñ ’∑’°’¢’°’©÷Ö÷Ä’µ’°’Ø')\nelif day == '’Ø’´÷Ä’°’Ø’´': # else if, ’•’©’• ’æ’•÷Ä÷á’´ if-’® ’π’´ ’∏÷Ç ’¥’•÷Ä ’Ω’ø’•’≤ ’£÷Ä’°’Æ ’∫’°’µ’¥’°’∂’∂’°\n    print('’£’∂’°÷Å’´’∂÷Ñ ’π’´’∂’£’°’π’∏÷Ç’∂’£ ’≠’°’≤’°’∂÷Ñ')\nelse:\n    print('’£’∂’°÷Å’´’∂÷Ñ ’§’°’Ω’´ :( ')\n\n’£’∂’°÷Å’´’∂÷Ñ ’§’°’Ω’´ :( \n\n\n\nday = '’∑’°’¢’°’©'\n# day = \"’Ø’´÷Ä’°’Ø’´\"\n# day = \"werxtyno\"\n\nif day == '’∑’°’¢’°’©':\n    print('’£’∂’°÷Å’´’∂÷Ñ ’∑’°’¢’°’©÷Ö÷Ä’µ’°’Ø')\nif day == '’Ø’´÷Ä’°’Ø’´': # else if, ’•’©’• ’æ’•÷Ä÷á’´ if-’® ’π’´ ’∏÷Ç ’¥’•÷Ä ’Ω’ø’•’≤ ’£÷Ä’°’Æ ’∫’°’µ’¥’°’∂’∂’°\n    print('’£’∂’°÷Å’´’∂÷Ñ ’π’´’∂’£’°’π’∏÷Ç’∂’£ ’≠’°’≤’°’∂÷Ñ')\nelse:\n    print('’£’∂’°÷Å’´’∂÷Ñ ’§’°’Ω’´ :( ')\n\n’£’∂’°÷Å’´’∂÷Ñ ’∑’°’¢’°’©÷Ö÷Ä’µ’°’Ø\n’£’∂’°÷Å’´’∂÷Ñ ’§’°’Ω’´ :( \n\n\n\nThe Kernel crashed while executing code in the current cell or a previous cell. \n\nPlease review the code in the cell(s) to identify a possible cause of the failure. \n\nClick &lt;a href='https://aka.ms/vscodeJupyterKernelCrash'&gt;here&lt;/a&gt; for more info. \n\nView Jupyter &lt;a href='command:jupyter.viewOutput'&gt;log&lt;/a&gt; for further details.",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>02 Conditionals: if, elif, else, match, nested if</span>"
    ]
  },
  {
    "objectID": "python/02_Conditions.html#÷Ö÷Ä’´’∂’°’Ø’∂’•÷Ä-’∏÷Ç-’¨÷Ä’°÷Å’∏÷Ç÷Å’´’π-’¢’°’∂’•÷Ä",
    "href": "python/02_Conditions.html#÷Ö÷Ä’´’∂’°’Ø’∂’•÷Ä-’∏÷Ç-’¨÷Ä’°÷Å’∏÷Ç÷Å’´’π-’¢’°’∂’•÷Ä",
    "title": "4¬† 02 Conditionals: if, elif, else, match, nested if",
    "section": "6.3 ’ï÷Ä’´’∂’°’Ø’∂’•÷Ä (’∏÷Ç ’¨÷Ä’°÷Å’∏÷Ç÷Å’´’π ’¢’°’∂’•÷Ä)",
    "text": "6.3 ’ï÷Ä’´’∂’°’Ø’∂’•÷Ä (’∏÷Ç ’¨÷Ä’°÷Å’∏÷Ç÷Å’´’π ’¢’°’∂’•÷Ä)\n\n6.3.1 ‘±’∂’´’Ø’§’∏’ø\n‘æ÷Ä’°’£÷Ä’°’æ’∏÷Ä’≤’® ’£’∂’∏÷Ç’¥’° ’≠’°’∂’∏÷Ç’©, ’Ø’´’∂’® ’°’Ω’∏÷Ç’¥’°’ù\n2 ’∞’°’ø ’∞’°÷Å ’°’º, ’•’©’• ’±’∏÷Ç ’¨’´’∂’´’ù 10 ’∞’°’ø ’æ’•÷Ä÷Å÷Ä’∏÷Ç,\n’ß’Ω ’¥’°÷Ä’§’® 10 ’∞’°’ø ’∞’°÷Å ’°’º’°’Æ ’£’°’¨’´’Ω’° ’ø’∏÷Ç’∂, ’Ø’´’∂’® ’∞’°÷Ä÷Å’∂’∏÷Ç’¥’° ’•’Ω ’´’û’∂’π ’•’Ω ’°÷Ä’•’¨, ’°’Ω’∏÷Ç’¥’° ’§’• ’±’∏÷Ç ’∏÷Ç’∂’•’´’∂\n\ndzu_ka = False\n\nif dzu_ka:\n    print('10 ’∞’°÷Å')\nelse:\n    print(\"2 ’∞’°÷Å\")\n\n2 ’∞’°÷Å\n\n\n\n\n6.3.2 ’∫’°÷Ä’ø’°’§’´÷Ä ’π’´ else ’£÷Ä’•’∂÷Ñ, ’Ø’°÷Ä’° ’¥’•’∂’°’Ø if ’¨’´’∂’´\n\ntariq = 20\nif tariq &gt; 18:\n    print('‘ª’∂’± ’¥’´ ’∞’°’ø ’£’´’∂’´ ’≠’∂’§÷Ä’∏÷Ç’¥ ’•’¥')\n\nif tariq % 10 == 0:\n    print(\"‘ø’¨’∏÷Ä ’ø’°÷Ä’´÷Ñ\")\n\n‘ª’∂’± ’¥’´ ’∞’°’ø ’£’´’∂’´ ’≠’∂’§÷Ä’∏÷Ç’¥ ’•’¥\n‘ø’¨’∏÷Ä ’ø’°÷Ä’´÷Ñ\n\n\n\n# pass\n\n\ntariq = 17\n\nif tariq &gt; 18:\n    pass\nelse:\n    print(\"’ª’∏÷Ç÷Ä ’Ø’∏÷Ç’¶’•’Ω\")\n\n’ª’∏÷Ç÷Ä ’Ø’∏÷Ç’¶’•’Ω\n\n\n\n\n6.3.3 ’Ø’°÷Ä’° ’¥’´ ÷Ñ’°’∂’´ elif ’¨’´’∂’´\n\napranq = '’∫’°’∂’´÷Ä'\n\nif apranq == '’∫’°’∂’´÷Ä':\n    gin = 2\nelif apranq == '’±’¥’•÷Ä’∏÷Ç’Ø':\n    gin = 4\nelif apranq == '’™’°÷Ä’´’ø':\n    gin = 1_000_000_000 # _ ’Ø’°÷Ä’°’∂÷Ñ ’§’∂’•’∂÷Ñ\nelse:\n    gin = '’•’Ω’´’¥'\n\nprint(gin)\n\n2\n\n\n\n\n6.3.4 ’´’∂’π’´’û ’•’∂÷Ñ elif ÷Ö’£’ø’°’£’∏÷Ä’Æ’∏÷Ç’¥ ’•’©’• ’Ø’°÷Ä’°’∂÷Ñ if ’£÷Ä’•’∂÷Ñ\n\napranq = '’∫’°’∂’´÷Ä'\n\nif apranq == '’∫’°’∂’´÷Ä':\n    gin = 2\n# print(gin)\nif apranq == '’±’¥’•÷Ä’∏÷Ç’Ø':\n    gin = 4\nif apranq == '’™’°÷Ä’´’ø':\n    gin = 100_000_000_000_000 # _ ’Ø’°÷Ä’°’∂÷Ñ ’§’∂’•’∂÷Ñ\nelse:\n    gin = '’•’Ω’´’¥'\n\nprint(gin)\n\n’•’Ω’´’¥\n\n\n\nprint(100_000_000_000_000)\nprint(100000000000000)\n\n100000000000000\n100000000000000\n\n\n\na = 0\n\nif a &gt; 10:\n    print(\"’¥’•’Æ’° 10-’´÷Å\")\nif a &gt; 5:\n    print(\"’¥’•’Æ’° 5-’´÷Å\")\nif a &gt; 1:\n    print(\"’¥’•’Æ’° 1-’´÷Å\")\n\n\na = 62\na = -2\n\nif a &gt; 10:\n    print(\"’¥’•’Æ’° 10-’´÷Å\")\nelif a &gt; 5:\n    print(\"’¥’•’Æ’° 5-’´÷Å\")\nelif a &gt; 1: # ’•’©’• ’æ’•÷Ä÷á’´’∂’® ’≥’´’∑’ø ’•’≤’°’æ, ’Ω’° ’ß’¨ ’π’´ ’°’∑’≠’°’ø’´\n    print(\"’¥’•’Æ’° 1-’´÷Å\")\nelse:\n    print(\"÷É’∏÷Ñ÷Ä ’° 1-’´÷Å\")\n\n÷É’∏÷Ñ÷Ä ’° 1-’´÷Å",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>02 Conditionals: if, elif, else, match, nested if</span>"
    ]
  },
  {
    "objectID": "python/02_Conditions.html#if-’´-’¥’•’ª-if-’∂’•÷Ä’§÷Ä’æ’°’Æ-if-’•÷Ä",
    "href": "python/02_Conditions.html#if-’´-’¥’•’ª-if-’∂’•÷Ä’§÷Ä’æ’°’Æ-if-’•÷Ä",
    "title": "4¬† 02 Conditionals: if, elif, else, match, nested if",
    "section": "6.4 if-’´ ’¥’•’ª if (’∂’•÷Ä’§÷Ä’æ’°’Æ if-’•÷Ä)",
    "text": "6.4 if-’´ ’¥’•’ª if (’∂’•÷Ä’§÷Ä’æ’°’Æ if-’•÷Ä)\n\ntariq = 17\nhastatutun = \"10 ’§’∫÷Ä’∏÷Å\"\n# nested if\nif tariq &gt; 18: # pass ’£÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’•’©’• ’∏÷Ç’¶’∏÷Ç’¥ ’•’∂÷Ñ ’∏’π ’¥’´ ’¢’°’∂ ’π’°’∂’•’¨ ’°’µ’§ ’§’•’∫÷Ñ’∏÷Ç’¥\n    if hastatutun == \"‘µ’ä’Ä\":\n        print(\"’•’Ω ’ß’¨\")\nelse:\n    if hastatutun == \"10 ’§’∫÷Ä’∏÷Å\":\n        print(\"’•’Ω ’ß’¨ ’•’¥ ’ß’§\")\n    else:\n        print(\"’¢’° ’∏÷Ä’ø’•’≤ ’° ’ß’§\")\n\n# if (tariq &gt; 18) and hastatun == \"::\n#     ...\n# elif tariq &lt; 18 an d\n\n’•’Ω ’ß’¨ ’•’¥ ’ß’§\n\n\n\n’°’∂’π’°÷É’°’∞’°’Ω’´’∂ -&gt; ’ª’∏÷Ç÷Ä\n’£’´’∂’´ ’π’Ω’´÷Ä’∏’≤’´’∂ -&gt; whiskey\n’£’´’∂’´ ’∏÷Ç ’∫’°’∂’´÷Ä -&gt; ’£’´’∂’´ ’∏÷Ç ’∫’°’∂’´÷Ä\n’£’´’∂’´ ’Ω’´÷Ä’∏÷Ç’¥ ’∫’°’∂’´÷Ä ’π’´ ’Ω’´÷Ä’∏÷Ç’¥ -&gt; ’¥’•’∂’°’Ø ’£’´’∂’´\n\n\ntariq = 18\npanir_sirum = True\ngini_sirum = False\n\nif tariq &lt; 18:\n    print(\"Jur\")\nelif not gini_sirum:\n    print(\"whiskey\")\nelif (tariq &gt;= 18) and gini_sirum and panir_sirum:\n    print(\"Gini u panir\")\nelif (tariq &gt;= 18) and gini_sirum and (not panir_sirum):\n    print(\"Gini\")\n\nwhiskey\n\n\n\ntariq = 18\npanir_sirum = True\ngini_sirum = False\n\nif tariq &gt;= 18:\n    if gini_sirum:\n        if panir_sirum:\n            print(\"gini u panir\")\n        else:\n            print(\"gini\")\n    else:\n        print(\"Whiskey\")\nelse:\n    print(\"Jur\")\n\nWhiskey\n\n\n\ntariq = 16\ngini_sirum = True\npanir_sirum = True\n\nif tariq &lt; 18:\n    print(\"’ª’∏÷Ç÷Ä\")\nelse:\n    if gini_sirum and panir_sirum:\n        print(\"’£’´’∂’´ ’∏÷Ç ’∫’°’∂’´÷Ä\")\n    elif gini_sirum:\n        print(\"’£’´’∂’´\")\n    else:\n        print(\"whiskey\")\n\n’ª’∏÷Ç÷Ä\n\n\n\ntariq = 16\ngini_sirum = True\npanir_sirum = True\n\nif tariq &lt; 18:\n    print(\"’ª’∏÷Ç÷Ä\")\nelse:\n    if gini_sirum:\n        if panir_sirum:\n            print(\"’£’´’∂’´ ’∏÷Ç ’∫’°’∂’´÷Ä\")\n        else:\n            print(\"gini\")\n    else:\n        print(\"whiskey\")\n\n’ª’∏÷Ç÷Ä\n\n\n\n# 2 * 2 * 2 = 8\n\n\ntariq = 16\ngini_sirum = True\npanir_sirum = True\n\n\nif tariq &gt; 18:\n    if gini_sirum:\n        if panir_sirum:\n            print(\"’£’´’∂’´ ’∏÷Ç ’∫’°’∂’´÷Ä\")\n        else:\n            print(\"gini\")\n    else:\n        print(\"whiskey\")\nelse:\n    print(\"’ª’∏÷Ç÷Ä\")\n\n\n’ª’∏÷Ç÷Ä\n\n\n\ntariq = 59\npanir_siruma = False\ngini_siruma = True\n\nif tariq &gt; 18 and panir_siruma and gini_siruma:\n    print(\"panir u gini\")\nelif tariq &gt; 18 and panir_siruma and (not gini_siruma)\n    print(\"meka \")\nelif tariq &gt; 18 and (not panir_siruma)\n\n\ntariq = 20\npanir_siruma = False\ngini_siruma = False\n\nif tariq &gt; 18:\n    if gini_siruma:\n        if panir_siruma:\n            print(\"’∫’°’∂’´÷Ä ’∏÷Ç ’£’´’∂’´\")\n        else:\n            print(\"’£’´’∂’´\")\n    else:\n        print(\"’∑’°’¥’∫’°’µ’∂ ’∏÷Ç ’©’°’∂\")\nelse:\n    print(\"’ª’∏÷Ç÷Ä\")\n\n’∑’°’¥’∫’°’µ’∂ ’∏÷Ç ’©’°’∂",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>02 Conditionals: if, elif, else, match, nested if</span>"
    ]
  },
  {
    "objectID": "python/02_Conditions.html#match",
    "href": "python/02_Conditions.html#match",
    "title": "4¬† 02 Conditionals: if, elif, else, match, nested if",
    "section": "6.5 Match",
    "text": "6.5 Match\n\napranq = '’™’°÷Ä’´’ø'\n\nif apranq == '’∫’°’∂’´÷Ä':\n    gin = 2\nelif apranq == '’±’¥’•÷Ä’∏÷Ç’Ø':\n    gin = 4\nelif apranq == '’™’°÷Ä’´’ø':\n    gin = 1_000_000_000 # _ ’Ø’°÷Ä’°’∂÷Ñ ’§’∂’•’∂÷Ñ\nelse:\n    gin = '’•’Ω’´’¥'\nprint(gin)\n\n1000000000\n\n\n\napranq = \"’±’¥’•÷Ä’∏÷Ç’Ø\"\nmatch apranq: # switch, case\n    case \"’∫’°’∂’´÷Ä\": # if apranq == \"’∫’°’∂’´÷Ä\"\n        gin = 2\n    case \"’±’¥’•÷Ä’∏÷Ç’Ø\":\n        gin = 4\n    case \"’™’°÷Ä’´’ø\":\n        gin = 1_000_000_000\n    case _:\n        gin = \"’•’Ω’´’¥\"\n\nprint(gin)\n\n4",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>02 Conditionals: if, elif, else, match, nested if</span>"
    ]
  },
  {
    "objectID": "python/02_Conditions.html#’∞’´’¥’∂’°’Ø’°’∂-’ø’∂’°’µ’´’∂",
    "href": "python/02_Conditions.html#’∞’´’¥’∂’°’Ø’°’∂-’ø’∂’°’µ’´’∂",
    "title": "4¬† 02 Conditionals: if, elif, else, match, nested if",
    "section": "7.1 ’Ä’´’¥’∂’°’Ø’°’∂ ’ø’∂’°’µ’´’∂",
    "text": "7.1 ’Ä’´’¥’∂’°’Ø’°’∂ ’ø’∂’°’µ’´’∂\n\nProfound ’¢’°’™’´’∂ 5 (’ä’°’µ’¥’°’∂’∂’•÷Ä) - ’¨÷Ä’´’æ\nProfound ’¢’°’™’´’∂ 7 (’Ü’•÷Ä’§÷Ä’æ’°’Æ ’∫’°’µ’¥’°’∂’∂’•÷Ä) - ’¨÷Ä’´’æ\nProfound ’¢’°’™’´’∂ 9 (’ì’∏÷É’∏’≠’°’Ø’°’∂’∂’•÷Ä ÷á ’ø’´’∫’•÷Ä) - 1 - 10 (’∂’•÷Ä’°’º’µ’°’¨)",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>02 Conditionals: if, elif, else, match, nested if</span>"
    ]
  },
  {
    "objectID": "python/02_Conditions.html#’∂’∑’∏÷Ç’¥’∂’•÷Ä",
    "href": "python/02_Conditions.html#’∂’∑’∏÷Ç’¥’∂’•÷Ä",
    "title": "4¬† 02 Conditionals: if, elif, else, match, nested if",
    "section": "7.2 ’Ü’∑’∏÷Ç’¥’∂’•÷Ä",
    "text": "7.2 ’Ü’∑’∏÷Ç’¥’∂’•÷Ä\n\n‘≤’°’™’´’∂ 5-’® ’£÷Ä’•’¨’´’Ω ’Ø’°÷Ä’•’¨’´ ’° ÷Ö’£’ø’æ’•’¨ ’¥’•’∂’°’Ø if-’´÷Å ’∏÷Ç else-’´÷Å (elif ’•’∂’©’°’§÷Ä’•÷Ñ ’∏÷Ä ’π’£’´’ø’•÷Ñ)\n‘¥’™’æ’°÷Ä ’∫’°’µ’¥’°’∂’∂’•÷Ä (7.14)-’® ’¨’∏÷Ç’Æ’•’¨’´’Ω ’•’©’• ’∑’°’ø ’•÷Ä’Ø’°÷Ä ’¨’´’∂’´ ’Å’•÷Ä ’¨’∏÷Ç’Æ’∏÷Ç’¥’®, ’¥’´ ’∞’°’ø ’ß’¨ ’∞’•’ø’∏ ’¥’ø’°’Æ’•÷Ñ ’∏’∂÷Å ’Ø’°÷Ä’°÷Ñ ’°’æ’•’¨’´ ’Ø’°÷Ä’≥ ’∏÷Ç ’Ø’∏’Ø’´’Ø ’§’°÷Ä’±’∂’•÷Ñ bool ÷É’∏÷É’∏’≠’°’Ø’°’∂’∂’•÷Ä ’Ω’°’∞’¥’°’∂’•’¨’∏’æ\n‘µ’©’• ’Ø’∏÷Ç’¶’•÷Ñ ’Ø’°÷Ä’°÷Ñ ‘≤’°’™’´’∂ 9-’® ÷É’∏÷Ä’±’•÷Ñ ’¥’´’∂’π÷á ’æ’•÷Ä’ª ’°’∂’•’¨’ù ’∞’°’ª’∏÷Ä’§ ’ø’∂’°’µ’´’∂’® ’§’° ’° ’¨’´’∂’•’¨’∏÷Ç",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>02 Conditionals: if, elif, else, match, nested if</span>"
    ]
  },
  {
    "objectID": "python/02_Conditions.html#bmi-calculator",
    "href": "python/02_Conditions.html#bmi-calculator",
    "title": "4¬† 02 Conditionals: if, elif, else, match, nested if",
    "section": "8.1 BMI calculator",
    "text": "8.1 BMI calculator\nRead two floats, weight (kg) and height (m), compute the Body Mass Index:\nBMI = weight / (height ** 2)\nThen categorize:\n\nBMI &lt; 18.5 ‚Üí Underweight\n18.5 ‚â§ BMI &lt; 25 ‚Üí Normal\n25 ‚â§ BMI &lt; 30 ‚Üí Overweight\nBMI ‚â• 30 ‚Üí Obese\n\nDon‚Äôt forget to check that the input is valid (positive numbers).\n\n\n\nInput\nOutput\n\n\n\n\n70 1.75\nNormal\n\n\n-70 1.75\nInvalid input\n\n\n\n\nweight = float(input(\"Weight: \"))\nheight = float(input(\"Height: \"))\n\nif (weight &lt;= 0) or (height &lt;= 0):    \n    print(\"Invalid input\")\nelse:\n    BMI = weight / (height ** 2)\n    print(\"BMI is\", BMI)\n    if BMI &lt; 18.5:\n        print(\"Underweight\")\n    elif BMI &lt; 25: \n        print(\"Normal\")\n    elif BMI &lt; 30:\n        print(\"Overweight\")\n    else:\n        print(\"Obese\")\n    \n\nBMI is 0.4444444444444444\nUnderweight",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>02 Conditionals: if, elif, else, match, nested if</span>"
    ]
  },
  {
    "objectID": "python/02_Conditions.html#discounts",
    "href": "python/02_Conditions.html#discounts",
    "title": "4¬† 02 Conditionals: if, elif, else, match, nested if",
    "section": "8.2 Discounts",
    "text": "8.2 Discounts\n\n\n\nPurchase Amount\nDiscount\n\n\n\n\nUp to $100\nNo discount\n\n\n$100‚Äì$500\n5%\n\n\nAbove $500\n10%\n\n\n\nAdditionally, if the user has a ‚Äúpremium‚Äù membership, they get an extra 5% on top of the above.\nExample\nInput: amount=600, premium=True\nOutput: 510.0\n\n8.2.1 ‘¥’°’Ω’´’∂ ’£÷Ä’æ’°’Æ ’Ø’∏’§\n\namount = float(input(\"Amount\"))\npremium = input(\"Premium (yes/no)\")\n\n# himnakan \nif amount &lt; 100:\n    zexch = 0\nelif amount &lt;= 500:\n    zexch = 0.05\nelse:\n    zexch = 0.1\n\nprint(\"’Ä’´’¥’∂’°’Ø’°’∂ ’¶’•’≤’π÷â\", zexch)\n# ’Æ’°’∂’∏’© \nif (premium == \"yes\") or (premium == \"Yes\"):\n    print(\"’µ’°’°, ’•’∂ ’∏÷Ç’¥ ‚Ä§‚Ä§\")\n    zexch += 0.05\n    \n\nprint(\"‘∂‘µ’≤’π÷â\", zexch)\nprint(amount * (1 - zexch))\n    \n\n’Ä’´’¥’∂’°’Ø’°’∂ ’¶’•’≤’π÷â 0.1\n’µ’°’°, ’•’∂ ’∏÷Ç’¥ ‚Ä§‚Ä§\n‘∂‘µ’≤’π÷â 0.15000000000000002\n450.5\n\n\n\nprint(bool(False))\nprint(bool(\"False\"))\n\nFalse\nTrue\n\n\n\n\n8.2.2 GPT-’´ ’∞’•’ø ’∑÷É-’©÷É ’°÷Ä’°’Æ ’Ø’∏’§\n\namount = float(input(\"Enter purchase amount: \"))\nmembership = input(\"Premium membership? (yes/no): \")\n\n\nif amount &lt;= 100:\n    discount = 0\nelif amount &lt;= 500:\n    discount = 0.05\nelse:\n    discount = 0.10\n\nif membership == \"yes\":\n    discount += 0.05\n\n# Compute final price\nfinal_price = amount * (1 - discount)\n\n# Print result\nprint(\"Final price:\" , final_price)",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>02 Conditionals: if, elif, else, match, nested if</span>"
    ]
  },
  {
    "objectID": "python/02_Conditions.html#smart-thermostat",
    "href": "python/02_Conditions.html#smart-thermostat",
    "title": "4¬† 02 Conditionals: if, elif, else, match, nested if",
    "section": "8.3 Smart Thermostat",
    "text": "8.3 Smart Thermostat\nThe thermostat sets heating or cooling mode based on:\nCurrent temp (float) and desired (float).\n\nIf temp &lt; desired - 2 ‚Üí ‚ÄúHeating‚Äù\nIf temp &gt; desired + 2 ‚Üí ‚ÄúCooling‚Äù\nOtherwise ‚Üí ‚ÄúStandby‚Äù.\n\nBUT if the user is ‚Äúaway‚Äù (bool), widen the deadband to ¬±5¬∞ before switching off.\nExample Input: temp=22.0, desired=25.0, away=True Output: Heating\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntemp = float(input(\"Current temperature (¬∞C): \"))\ndesired = float(input(\"Desired temperature (¬∞C): \"))\naway = input(\"Away? (yes/no): \")\n\nif away == \"yes\":\n    deviation = 5\nelse:\n    deviation = 2\n\nif temp &lt;  desired - deviation:\n    print(\"Heating\")\nelif temp &gt; desired + deviation:\n    print(\"Cooling\")\nelse:\n    print(\"Standby\")\n\nStandby",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>02 Conditionals: if, elif, else, match, nested if</span>"
    ]
  },
  {
    "objectID": "python/02_Conditions.html#’∑’°’≠’¥’°’ø’°’µ’´’∂-’±’´",
    "href": "python/02_Conditions.html#’∑’°’≠’¥’°’ø’°’µ’´’∂-’±’´",
    "title": "4¬† 02 Conditionals: if, elif, else, match, nested if",
    "section": "8.4 ’á’°’≠’¥’°’ø’°’µ’´’∂ ’±’´",
    "text": "8.4 ’á’°’≠’¥’°’ø’°’µ’´’∂ ’±’´\nProfound 8.6\n\nx1, y1 = int(input()), int(input())\nx2, y2 = int(input()), int(input())\n\nxdist = x1 - x2\nydist = y1 - y2\n\nif (xdist == 1 or xdist == -1) and (ydist == 2 or ydist == -2):\n    print(\"Yes\")\nelif (xdist == 2 or xdist == -2) and (ydist == 1 or ydist == -1):\n    print(\"Yes\")\nelse:\n    print(\"No\")",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>02 Conditionals: if, elif, else, match, nested if</span>"
    ]
  },
  {
    "objectID": "python/03_Str_Range_List_some_funcs.html",
    "href": "python/03_Str_Range_List_some_funcs.html",
    "title": "5¬† 03 String, Range, List, some functions",
    "section": "",
    "text": "6 üé¶ ’è’•’Ω’°’§’°’Ω’•÷Ä + ’¨÷Ä’°÷Å’∏÷Ç÷Å’´’π\n‘Ω’°’π’´’Ø, ’é’°’µ’∏÷Å ’±’∏÷Ä, ’¨’∏÷Ç’Ω’°’∂’Ø’°÷Ä’´ ’∞’≤’∏÷Ç’¥’® ’Ä’•’≤’´’∂’°’Ø’ù Ani Adiglozalyan\n(‘ø’°÷Ä’∏’≤’° ’¥’´ ’©’•’©÷á ’∞’´’∂ ’¨’´’∂’´ ’Ø’∏’¨’°’¢’∏÷Ç’¥ ’∂’µ’∏÷Ç’©’®)\nShindler‚Äôs [11, 509]\n(c) John Williams\nToDo 1. ’è’•’Ω’∏÷Ç’©’µ’∏÷Ç’∂ 2025\n2. ’è’•’Ω’∏÷Ç’©’µ’∏÷Ç’∂ 2023\n3. ‘≥’∏÷Ä’Æ’∂’°’Ø’°’∂ 2025\n4. ‘≥’∏÷Ä’Æ’∂’°’Ø’°’∂ 2023\n5. ’à÷Ä’∏’∑ ’ø’∂’°’µ’´’∂’∂’•÷Ä’´ ’¨’∏÷Ç’Æ’∏÷Ç’¥’∂’•÷Ä\n’Ü’∑’∏÷Ç’¥’∂’•÷Ä÷â\n‘¥’°’Ω’®’∂’©’°÷Å’´’∂ ’¥’°’Ω’∂’°’Ø÷Å’∏÷Ç’©’µ’°’∂ ’∏÷Ç ’Ø’°÷Ä’Æ’´÷Ñ ’∞’°’µ’ø’∂’•’¨’∏÷Ç Google Form",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>03 String, Range, List, some functions</span>"
    ]
  },
  {
    "objectID": "python/03_Str_Range_List_some_funcs.html#’ø’∏’≤’•÷Ä-string",
    "href": "python/03_Str_Range_List_some_funcs.html#’ø’∏’≤’•÷Ä-string",
    "title": "5¬† 03 String, Range, List, some functions",
    "section": "7.1 ’è’∏’≤’•÷Ä (string)",
    "text": "7.1 ’è’∏’≤’•÷Ä (string)\n\n7.1.1 ’è’∏’≤’•÷Ä’´ ’Ω’ø’•’≤’Æ’∏÷Ç’¥ ÷á escape(/)\n\na = \"\"\"‘≤’°÷Ä÷á’∂’•÷Ä\"\"\" # ’∂’∏÷Ç’µ’∂’∂’° ’´’∂’π ’¥’´ ’π’°’Ø’•÷Ä’ø’∏’æ ’ù a = \"‘≤’°÷Ä÷á’∂’•÷Ä\"\nprint(a)\nprint(type(a))\n\n‘≤’°÷Ä÷á’∂’•÷Ä\n&lt;class 'str'&gt;\n\n\n\n# 1\nprint(1) \na = '''asdasgudasfafsf \nsdfsdfsdfs'''\nprint(2) \n\nprint(a)\n\n1\n2\nasdasgudasfafsf\nsdfsdfsdfs\n\n\n\na = \"‘≤’°÷Ä÷á’∂’•÷Ä, ’´’∂’π ’Ø’° ’π’Ø’°, ’ß’¨’´ ’•’∂ ’∞’´’∂ ’ø’∂’•÷Ä’∂ ’•÷Ñ ’¥’∂’∏÷Ç’¥, \\n \\\n‘π’∏÷Ç’©’® ’©’°÷É ’•÷Ñ ’ø’°’¨’´’Ω, \\\n’∏÷Ç÷Ä’´’∑ ’´’∂’π ’Ø’° ’π’Ø’°, \\\n’§’• ’¨’°’æ ’§’• ’¨’°’æ ’¥’∂’°÷Å’•÷Ñ \\\n\" # '''\nprint(a)\n\n‘≤’°÷Ä÷á’∂’•÷Ä, ’´’∂’π ’Ø’° ’π’Ø’°, ’ß’¨’´ ’•’∂ ’∞’´’∂ ’ø’∂’•÷Ä’∂ ’•÷Ñ ’¥’∂’∏÷Ç’¥, \n ‘π’∏÷Ç’©’® ’©’°÷É ’•÷Ñ ’ø’°’¨’´’Ω, ’∏÷Ç÷Ä’´’∑ ’´’∂’π ’Ø’° ’π’Ø’°, ’§’• ’¨’°’æ ’§’• ’¨’°’æ ’¥’∂’°÷Å’•÷Ñ \n\n\n\na = 'Cheese' \nb = 'Hayk's cheese'\n\nprint(a)\nprint(b)\n\nCheese\nHayk's cheese\n\n\n\n# ‘ø’°÷Ä’∏’≤ ’•’∂÷Ñ ’∏÷Ç’≤’≤’•’¨ ’∞’•’ø÷á’µ’°’¨ ’Ø’•÷Ä’∫\nb = \"Hayk\\\"s cheese\"\nprint(b)\n\nHayk\"s cheese\n\n\n(double click before reading)\n‘µ÷Ä’¢ ’∂’∏÷Ä ’ø’∏’≤ ’£’∂’°’¨’´’Ω ’ß’´’∂÷Ñ ’£÷Ä’∏÷Ç’¥, ’´÷Ä’°’Ø’°’∂’∏÷Ç’¥ ’°’∞’° ’©’• ’´’∂’π ’ß÷Ä ’ø’•’≤’´ ’∏÷Ç’∂’•’∂’∏÷Ç’¥’ù\nPython-’® ’ø’•’Ω’∂’∏÷Ç’¥ ’ß÷Ä ¬†’∂’∑’°’∂’®, ’£’´’ø’•÷Ä ’∏÷Ä ’§’° ’∞’°’ø’∏÷Ç’Ø ’∂’∑’°’∂’° ’∏÷Ç ’∫’•’ø÷Ñ’° ’°’Ω’´ ’´÷Ä’•’∂ ’©’• ’´’∂÷Ñ’® ’´’∂’π ’°’∂’´ ’∞’°’ª’∏÷Ä’§ ÷Ñ’°’µ’¨’∏÷Ç’¥, ’•’©’• ’ø’•’Ω’∂’´ n ’£’∂’° ’∞’°’ª’∏÷Ä’§ ’ø’∏’≤, ’∏÷Ä’∏’∑ ’°’µ’¨ ’¢’°’∂’•÷Ä ’∏÷Ç’∂’´ ’∂’°÷á\n\n¬†- escape character\n' - ‚Äô\n\" - ‚Äù\n tab\n- new line\n\\ -\n\n\n\nprint('Hayk\\\\s cheese')\n\n\nHayk\\s cheese\n\n\n\nprint('Hayk\\ns cheese')\n\nHayk\ns cheese\n\n\n\nprint('Hayk\\ts cheese')\n\nprint('Hayk\\\\s cheese')\n\nprint(\"\\\"Hayk\\'s cheese\\\"\")\n\nHayk    s cheese\nHayk\\s cheese\n\n\n\n\n7.1.2 String-’•÷Ä’∏’æ ’£’∏÷Ä’Æ’∏’≤’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä\n\n7.1.2.1 ‘≥’∏÷Ç’¥’°÷Ä’∏÷Ç’¥\n\nskizb = \"‘µ’Ω ’ø’∏’≤’´ ’Ω’Ø’´’¶’¢’∂ ’•’¥\"\nverj = '’•’Ω ’ß’¨ ’æ’•÷Ä’ª’®'\n\n\nprint(skizb + verj)\n\n‘µ’Ω ’ø’∏’≤’´ ’Ω’Ø’´’¶’¢’∂ ’•’¥’•’Ω ’ß’¨ ’æ’•÷Ä’ª’®\n\n\n\nprint(skizb + \" - \" + verj) # print(skizb, verj, sep=\" - \")\n\n‘µ’Ω ’ø’∏’≤’´ ’Ω’Ø’´’¶’¢’∂ ’•’¥ - ’•’Ω ’ß’¨ ’æ’•÷Ä’ª’®\n\n\n\nprint(skizb + 1231231231 + verj + '’∫’°’∂’´÷Ä')\n\n\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\nInput In [7], in &lt;cell line: 1&gt;()\n----&gt; 1 print(skizb + 1231231231 + verj + '’∫’°’∂’´÷Ä')\n\nTypeError: can only concatenate str (not \"int\") to str\n\n\n\n\n# ’Ø’°÷Ä’°’∂÷Ñ ’¥’´ ÷Ñ’°’∂’´ ’∞’°’ø ’£’∏÷Ç’¥’°÷Ä’•’∂÷Ñ ’¥’´’°’∂’£’°’¥’´÷Å\nprint(skizb + str(1231231231) + verj + '’∫’°’∂’´÷Ä')\n\n‘µ’Ω ’ø’∏’≤’´ ’Ω’Ø’´’¶’¢’∂ ’•’¥1231231231’•’Ω ’ß’¨ ’æ’•÷Ä’ª’®’∫’°’∂’´÷Ä\n\n\n\nprint('2' + \"2\")\n\n22\n\n\n\nprint('2' + True)\n\n\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\nInput In [21], in &lt;cell line: 1&gt;()\n----&gt; 1 print('2' + True)\n\nTypeError: can only concatenate str (not \"bool\") to str\n\n\n\n\n\n7.1.2.2 ‘≤’°’¶’¥’°’∫’°’ø’Ø’∏÷Ç’¥\n\na = '’¢’°÷Ä÷á'\n\n# 5 * 3\n# 5 + 5 + 5\n\n\nprint(\"*\")\nprint(\"*\" * 2)\nprint(\"*\" * 3) # \"*\" + \"*\" + \"*\"\nprint(\"*\" * 4)\n\nprint(\"*\"*4.5) # problem\n\n*\n**\n***\n****\n\n\n\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\nInput In [13], in &lt;cell line: 6&gt;()\n      3 print(\"*\" * 3) # \"*\" + \"*\" + \"*\"\n      4 print(\"*\" * 4)\n----&gt; 6 print(\"*\"*4.5) # problem\n\nTypeError: can't multiply sequence by non-int of type 'float'\n\n\n\n\nprint(a * 4)\nprint(a + \"1\"*4)\nprint((a + \" \") * 4)\n\n‘≤’°÷Ä÷á’∂’•÷Ä, ’´’∂’π ’Ø’° ’π’Ø’°, ’ß’¨’´ ’•’∂ ’∞’´’∂ ’ø’∂’•÷Ä’∂ ’•÷Ñ ’¥’∂’∏÷Ç’¥, \n ‘π’∏÷Ç’©’® ’©’°÷É ’•÷Ñ ’ø’°’¨’´’Ω, ’∏÷Ç÷Ä’´’∑ ’´’∂’π ’Ø’° ’π’Ø’°, ’§’• ’¨’°’æ ’§’• ’¨’°’æ ’¥’∂’°÷Å’•÷Ñ ‘≤’°÷Ä÷á’∂’•÷Ä, ’´’∂’π ’Ø’° ’π’Ø’°, ’ß’¨’´ ’•’∂ ’∞’´’∂ ’ø’∂’•÷Ä’∂ ’•÷Ñ ’¥’∂’∏÷Ç’¥, \n ‘π’∏÷Ç’©’® ’©’°÷É ’•÷Ñ ’ø’°’¨’´’Ω, ’∏÷Ç÷Ä’´’∑ ’´’∂’π ’Ø’° ’π’Ø’°, ’§’• ’¨’°’æ ’§’• ’¨’°’æ ’¥’∂’°÷Å’•÷Ñ ‘≤’°÷Ä÷á’∂’•÷Ä, ’´’∂’π ’Ø’° ’π’Ø’°, ’ß’¨’´ ’•’∂ ’∞’´’∂ ’ø’∂’•÷Ä’∂ ’•÷Ñ ’¥’∂’∏÷Ç’¥, \n ‘π’∏÷Ç’©’® ’©’°÷É ’•÷Ñ ’ø’°’¨’´’Ω, ’∏÷Ç÷Ä’´’∑ ’´’∂’π ’Ø’° ’π’Ø’°, ’§’• ’¨’°’æ ’§’• ’¨’°’æ ’¥’∂’°÷Å’•÷Ñ ‘≤’°÷Ä÷á’∂’•÷Ä, ’´’∂’π ’Ø’° ’π’Ø’°, ’ß’¨’´ ’•’∂ ’∞’´’∂ ’ø’∂’•÷Ä’∂ ’•÷Ñ ’¥’∂’∏÷Ç’¥, \n ‘π’∏÷Ç’©’® ’©’°÷É ’•÷Ñ ’ø’°’¨’´’Ω, ’∏÷Ç÷Ä’´’∑ ’´’∂’π ’Ø’° ’π’Ø’°, ’§’• ’¨’°’æ ’§’• ’¨’°’æ ’¥’∂’°÷Å’•÷Ñ \n‘≤’°÷Ä÷á’∂’•÷Ä, ’´’∂’π ’Ø’° ’π’Ø’°, ’ß’¨’´ ’•’∂ ’∞’´’∂ ’ø’∂’•÷Ä’∂ ’•÷Ñ ’¥’∂’∏÷Ç’¥, \n ‘π’∏÷Ç’©’® ’©’°÷É ’•÷Ñ ’ø’°’¨’´’Ω, ’∏÷Ç÷Ä’´’∑ ’´’∂’π ’Ø’° ’π’Ø’°, ’§’• ’¨’°’æ ’§’• ’¨’°’æ ’¥’∂’°÷Å’•÷Ñ 1111\n‘≤’°÷Ä÷á’∂’•÷Ä, ’´’∂’π ’Ø’° ’π’Ø’°, ’ß’¨’´ ’•’∂ ’∞’´’∂ ’ø’∂’•÷Ä’∂ ’•÷Ñ ’¥’∂’∏÷Ç’¥, \n ‘π’∏÷Ç’©’® ’©’°÷É ’•÷Ñ ’ø’°’¨’´’Ω, ’∏÷Ç÷Ä’´’∑ ’´’∂’π ’Ø’° ’π’Ø’°, ’§’• ’¨’°’æ ’§’• ’¨’°’æ ’¥’∂’°÷Å’•÷Ñ  ‘≤’°÷Ä÷á’∂’•÷Ä, ’´’∂’π ’Ø’° ’π’Ø’°, ’ß’¨’´ ’•’∂ ’∞’´’∂ ’ø’∂’•÷Ä’∂ ’•÷Ñ ’¥’∂’∏÷Ç’¥, \n ‘π’∏÷Ç’©’® ’©’°÷É ’•÷Ñ ’ø’°’¨’´’Ω, ’∏÷Ç÷Ä’´’∑ ’´’∂’π ’Ø’° ’π’Ø’°, ’§’• ’¨’°’æ ’§’• ’¨’°’æ ’¥’∂’°÷Å’•÷Ñ  ‘≤’°÷Ä÷á’∂’•÷Ä, ’´’∂’π ’Ø’° ’π’Ø’°, ’ß’¨’´ ’•’∂ ’∞’´’∂ ’ø’∂’•÷Ä’∂ ’•÷Ñ ’¥’∂’∏÷Ç’¥, \n ‘π’∏÷Ç’©’® ’©’°÷É ’•÷Ñ ’ø’°’¨’´’Ω, ’∏÷Ç÷Ä’´’∑ ’´’∂’π ’Ø’° ’π’Ø’°, ’§’• ’¨’°’æ ’§’• ’¨’°’æ ’¥’∂’°÷Å’•÷Ñ  ‘≤’°÷Ä÷á’∂’•÷Ä, ’´’∂’π ’Ø’° ’π’Ø’°, ’ß’¨’´ ’•’∂ ’∞’´’∂ ’ø’∂’•÷Ä’∂ ’•÷Ñ ’¥’∂’∏÷Ç’¥, \n ‘π’∏÷Ç’©’® ’©’°÷É ’•÷Ñ ’ø’°’¨’´’Ω, ’∏÷Ç÷Ä’´’∑ ’´’∂’π ’Ø’° ’π’Ø’°, ’§’• ’¨’°’æ ’§’• ’¨’°’æ ’¥’∂’°÷Å’•÷Ñ  \n\n\n\nprint(a * 3 + \" \" + '$' *4)\n\n’¢’°÷Ä÷á’¢’°÷Ä÷á’¢’°÷Ä÷á $$$$\n\n\n\n\n\n7.1.3 ’Ä’Ω’ø’°’Ø ’∂’´’∑’•÷Ä ’æ’•÷Ä÷Å’∂’•’¨ (indexing, slicing)\n\n7.1.3.1 indexing\n\na = '‘≤’°÷Ä÷á'\nprint(a)\nprint(len(a)) # len('‘≤’°÷Ä÷á') length\n\n‘≤’°÷Ä÷á\n4\n\n\n\nprint(\"‘≤’°÷Ä÷á\"[0])\nprint(a[3])\n\n‘≤\n÷á\n\n\n\nb = \"asdfghkhreadsfgjygfadsfhytsdfhytsfdacdvgfh\"\n\n\nprint(b[-1])\n\nh\n\n\n\nprint(a[4])\n\n\n---------------------------------------------------------------------------\nIndexError                                Traceback (most recent call last)\nInput In [31], in &lt;cell line: 1&gt;()\n----&gt; 1 print(a[4])\n\nIndexError: string index out of range\n\n\n\n\nprint(b[-3])\n\ng\n\n\n\nprint(a[4-1])\n\n÷á\n\n\n\nprint(a[len(a) - 1]) # ’´’û’∂’π ’Ø’ø’∫’´ ’®’Ω’ø ’±’•’¶\n\n÷á\n\n\n\nprint(a[len(a)-1])\n\n÷á\n\n\n\nprint(a[-3])\n\n’°\n\n\n\n\n\npython indexing.png\n\n\n\nprint(a[2])\nprint(a[-2]) # len(a) - 2 -&gt; 4 - 2 = 2\n\n÷Ä\n÷Ä\n\n\n\n\n7.1.3.2 slicing\n\nprint(a[0:-4]) # ’Ω’Ø’´’¶’¢’® ’∂’•÷Ä’°’º’µ’°’¨, ’æ’•÷Ä’ª’® ’π’ß\n# a[0] + a[1] (a[2]-’® ’π’Ø’°)\n\n# -4-1 -&gt; -5 + 4 -&gt; -1\n\n\n\n\n\nprint(a[0:12345678]) # a[4]-’® ’π’´ ’°’∑’≠’°’ø’∏÷Ç’¥, ’¢’°’µ÷Å ’Ω’ø’•’≤ ’£÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’¥’´’∂’π÷á 4, ’§’° ’∞’•’∂÷Å ’∂÷Ä’°’∂’´÷Å’° ’∏÷Ä ’æ’•÷Ä’ª’® ’π’•’∂÷Ñ ’æ’•÷Ä÷Å’∂’∏÷Ç’¥\n\n‘≤’°÷Ä÷á\n\n\n\nprint(a[0:412345678])\n\n‘≤’°÷Ä÷á\n\n\n\nprint(a[0:2])\nprint(a[:2]) # ’•’©’• ’¢’°÷Å ’©’∏’≤’•’∂÷Ñ ’°’º’°’ª’´’∂ ’©’´’æ’® ’Ø’∞’°’Ω’Ø’°’∂’° ’∏÷Ä ’∏÷Ç’≤’≤’°’Ø’´ ’¶÷Ä’∏’µ’´÷Å’° ’Ω’Ø’Ω’æ’∏÷Ç’¥\n\n‘≤’°\n‘≤’°\n\n\n\nprint(a[1:4])\nprint(a[1:]) # ’∂’∏÷Ç’µ’∂ ’±÷á ’ß’¨ ’•÷Ä’Ø÷Ä’∏÷Ä’§’® ’¢’°÷Å ’©’∏’≤’•’¨’∏’æ ’∞’°’Ω’Ø’°’∂’∏÷Ç’¥’° ’∏÷Ä ’¥’´’∂’π÷á ’æ’•÷Ä’ª ’•’∂÷Ñ ’∏÷Ç’¶’∏÷Ç’¥\n\n’°÷Ä÷á\n’°÷Ä÷á\n\n\n\nprint(a[-3:-1])\nprint(a[1:3])\n\n’°÷Ä\n’°÷Ä\n\n\n’Ø’°÷Ä’∏’≤ ’•’∂÷Ñ ’∂’°÷á ’©’º’´’∂’π÷Ñ ’∏÷Ç’∂’•’∂’°’¨\n\na = 'abcdefghk'\n\n\na['’Ω’Ø’Ω’´ ’Ω’ø’•’≤’´÷Å':'’£’∂’° ’¥’´’∂’π÷á ’Ω’ø’•’≤(’∏’π ’∂’•÷Ä’°’º’µ’°’¨)':'’°’µ ’ß’Ω÷Ñ’°’∂ ’¥’•’Æ ÷Ñ’°’µ’¨’∏’æ']\n\n\nprint(a[2:5:2])\n\nce\n\n\n\n# abcdefghk\nprint(a[::-2])\n\nkgeca\n\n\n\nprint(a[8:2:-1])\n\nkhgfed\n\n\n\nprint(a[::-1]) # a[4:6:1]\n\nkhgfedcba\n\n\n\nprint(a[::-1])\n\nkhgfedcba\n\n\n\nprint(a[3:7]) # 7 - 3\n\ndefg\n\n\n\nprint(len(a))\n\n9\n\n\n\nprint(a[8::-1])\n\nkhgfedcba\n\n\n\na[3:6] # -&gt; 6-3 = 3\n\n'def'\n\n\n\nprint(a[::2])\n\n13579\n\n\n\nprint(a[1::2])\n\n2468\n\n\n\nprint(a[7:0:-2])\n\n8642\n\n\n\n# 123456789\nprint(a[6:]) # a[x:y] -&gt; y-x\n\n789\n\n\n\nprint(a)\na = \"abcdef\"\n\nabcdef\n\n\n\nprint(a[-36:6000]) # ...123456789......\n\n\n  File \"&lt;ipython-input-56-98a858089493&gt;\", line 1\n    print([-36:6000]) # ...123456789......\n              ^\nSyntaxError: invalid syntax\n\n\n\n\n\na = \"abcdefgh\"\nprint(a[-4:-2]) # a[8-4:8-2] -&gt; a[4:6]\nprint(a[4:6])\n\nef\nef\n\n\n\nprint(a + '___' + a[::-1])\n\nabcdefghk___khgfedcba\n\n\n\na = '123456789'\n# print(a[2:8:-1])\nprint(a[3:1:-1])\nprint(a[1:3])\n\n43\n234\n\n\n\na[3:19:4]\n\n# 3, 7 (3+4), 11 (7 + 4), 15 (11 + 4)\n\n# 13, 100, 4\n\na = \"01234567891011\"\nprint(a[2:8:3])\n\n25\n\n\n\n\n\n7.1.4 Range (string-’•÷Ä’´ ’©’•’¥’°’µ’´÷Å ’π’´)\n\n# a = '0123456789'\n\n# [1:9:3] -&gt; 1, 4, 7\n# a[1] + a[4] + a[7]\n# print(a[1:4])\n\n\nprint(range(-3,4)) # a[1:4]\nprint(list(range(-3, 4)))\nprint(type(range(-3,4)))\n\nprint(a)\nprint(a[1:4])\n\nrange(-3, 4)\n[-3, -2, -1, 0, 1, 2, 3]\n&lt;class 'range'&gt;\nabcdefghk\nbcd\n\n\n\na = '0123456789'\nprint(a[1:15:-1]) #-&gt; 1, 4, 7\n\n98765432\n\n\n\nprint(list(range(30, 15, -3))) # a[1:15:3]\n\n[30, 27, 24, 21, 18]\n\n\n\n# list(range(3,10,2))\n# a[3:10:2]\n\na = \"abcd\"\nprint(a[1:4])\nprint(list(range(1,4)))\n\nbcd\n[1, 2, 3]\n\n\n\n# print(list(range(10,15,3)))\n# print(list(range(18, 10, -1.5)))\n\n# ...2..5.8 9 10 11 12 13 14 15 16 17 18\n\nprint(list(range(10,15,-3)))\n\nrange(10,15, 2)\nrange(1, 100000000, 3)\n\n[]\n\n\n\n# a[:15]\nlist(range(15)) # range(0,15)\n\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]\n\n\n\na[3:]\n# ’∞’°’¥’°÷Ä’™’•÷Ñ’® ’π’Ø’°\n\n\n# a[2:15]\nlist(range(2, 15)) # range(2,15,1)\n\n[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]\n\n\n\n# a[2:15:3]\nlist(range(2, 1, -8)) # try also 2, 11,1\n\n# -7 -6 -5 ... -1 0 1 2\n# -7 -6 -5 ... -1 0 1 2 3\n\n\n[2]\n\n\n\nlist(range(-4, 1, 2)) # ’Ω’Ø’´’¶’¢, ’°’æ’°÷Ä’ø, ÷Ñ’°’µ’¨\n\n[-4, -2, 0]\n\n\n\nlist(range(1, 5, -2))\n\n[]\n\n\n\n\n7.1.5 Formatting\n\n7.1.5.1 Formated string\n’∞’°’æ’•’Ω ’¢’°’∂’•÷Ä ’∏÷Ä’∏’∂÷Ñ ’Ø’°÷Ä’•’¨’´ ’° f string-’•÷Ä’∏’æ ’°’∂’•’¨. ’Ø’°÷Ä’≥ ’æ’´’§’•’∏\n\nanun = 'John'\nazganun = \"Smith\"\ntariq = 25\n\n\n# ’Ü’•÷Ä’Ø’°’µ’°÷Å’∂’•’¨ John-’´’∂\nprint('‘ª’¥ ’°’∂’∏÷Ç’∂’∂', anun, '’ß, ’´’Ω’Ø ’°’¶’£’°’∂’∏÷Ç’∂’®', azganun, \"’•’Ω\", tariq, \"’ø’°÷Ä’•’Ø’°’∂ ’•’¥\")\n\n‘ª’¥ ’°’∂’∏÷Ç’∂’∂ John ’ß, ’´’Ω’Ø ’°’¶’£’°’∂’∏÷Ç’∂’® Smith ’•’Ω 25 ’ø’°÷Ä’•’Ø’°’∂ ’•’¥\n\n\n\n# ’Ü’•÷Ä’Ø’°’µ’°÷Å’∂’•’¨ John-’´’∂\nprint('‘ª’¥ ’°’∂’∏÷Ç’∂’∂', anun, '’ß, ’´’Ω’Ø ’°’¶’£’°’∂’∏÷Ç’∂’®', azganun, \"’•’Ω\", tariq, \"’ø’°÷Ä’•’Ø’°’∂ ’•’¥\")\n\n‘ª’¥ ’°’∂’∏÷Ç’∂’∂ John ’ß, ’´’Ω’Ø ’°’¶’£’°’∂’∏÷Ç’∂’® Smith ’•’Ω 25 ’ø’°÷Ä’•’Ø’°’∂ ’•’¥\n\n\n\nprint('‘ª’¥ ’°’∂’∏÷Ç’∂’∂ anun, ’ß ’´’Ω’Ø ’°’¶’£’°’∂’∏÷Ç’∂’® azganun ’•’Ω tariq ’ø’°÷Ä’•’Ø’°’∂ ’•’¥')\n\n‘ª’¥ ’°’∂’∏÷Ç’∂’∂ anun, ’ß ’´’Ω’Ø ’°’¶’£’°’∂’∏÷Ç’∂’® azganun ’•’Ω tariq ’ø’°÷Ä’•’Ø’°’∂ ’•’¥\n\n\n\nprint('‘ª’¥ ’°’∂’∏÷Ç’∂’∂’® {} ’ß ’´’Ω’Ø ’°’¶’£’°’∂’∏÷Ç’∂’® {} ’•’Ω {} ’ø’°÷Ä’•’Ø’°’∂ ’•’¥'.format(anun, azganun, tariq))\n\n‘ª’¥ ’°’∂’∏÷Ç’∂’∂’® John ’ß ’´’Ω’Ø ’°’¶’£’°’∂’∏÷Ç’∂’® Smith ’•’Ω 25 ’ø’°÷Ä’•’Ø’°’∂ ’•’¥\n\n\n\ntext = '‘ª’¥ ’°’∂’∏÷Ç’∂’∂’® {anun} ’ß ’´’Ω’Ø ’°’¶’£’°’∂’∏÷Ç’∂’® {azganun} ’•’Ω {tariq} ’ø’°÷Ä’•’Ø’°’∂ ’•’¥'\nprint(text)\n\n‘ª’¥ ’°’∂’∏÷Ç’∂’∂’® {anun} ’ß ’´’Ω’Ø ’°’¶’£’°’∂’∏÷Ç’∂’® {azganun} ’•’Ω {tariq} ’ø’°÷Ä’•’Ø’°’∂ ’•’¥\n\n\n\nprint(f\"‘ª’¥ ’°’∂’∏÷Ç’∂’∂’®’ù{anun} ’ß ’´’Ω’Ø ’°’¶’£’°’∂’∏÷Ç’∂’® {azganun} ’•’Ω {tariq} ’ø’°÷Ä’•’Ø’°’∂ ’•’¥\")\n\n‘ª’¥ ’°’∂’∏÷Ç’∂’∂’®’ùJohn ’ß ’´’Ω’Ø ’°’¶’£’°’∂’∏÷Ç’∂’® Smith ’•’Ω 25 ’ø’°÷Ä’•’Ø’°’∂ ’•’¥\n\n\n\nprint(f\"‘ª’¥ ’°’∂’∏÷Ç’∂’∂’® {anun} ’ß ’´’Ω’Ø ’°’¶’£’°’∂’∏÷Ç’∂’® {azganun+'’µ’°’∂'} ’•’Ω {tariq+4} ’ø’°÷Ä’•’Ø’°’∂ ’•’¥\")\n\n‘ª’¥ ’°’∂’∏÷Ç’∂’∂’® John ’ß ’´’Ω’Ø ’°’¶’£’°’∂’∏÷Ç’∂’® Smith’µ’°’∂ ’•’Ω 29 ’ø’°÷Ä’•’Ø’°’∂ ’•’¥\n\n\n\nprint(anun, azganun, sep=\"-\") # ’π’•’∂÷Ñ ’Ø’°÷Ä’° ’æ’•÷Ä’°’£÷Ä’•’∂÷Ñ ÷É’∏÷É‚Ä§\n\nJohn-Smith\n\n\n\nname = f\"{anun}-{azganun}\"\nprint(name)\n\nJohn-Smith\n\n\n\nprint(f\"‘ª’¥ ’°’∂’∏÷Ç’∂’∂’® {anun} ’ß ’´’Ω’Ø ’°’¶’£’°’∂’∏÷Ç’∂’® {azganun} ’∞’°’ª’∏÷Ä’§ ’ø’°÷Ä’´ ’•’Ω ’Ø’¨’´’∂’•’¥ {tariq + 1} ’ø’°÷Ä’•’Ø’°’∂\")\n\n‘ª’¥ ’°’∂’∏÷Ç’∂’∂’® John ’ß ’´’Ω’Ø ’°’¶’£’°’∂’∏÷Ç’∂’® Smith ’∞’°’ª’∏÷Ä’§ ’ø’°÷Ä’´ ’•’Ω ’Ø’¨’´’∂’•’¥ 26 ’ø’°÷Ä’•’Ø’°’∂\n\n\n\nshat_erkar_popoghakan = 4\nprint(shat_erkar_popoghakan)\nprint(f\"shat_erkar_popoghakan = {shat_erkar_popoghakan = }\")\nprint(f\"{shat_erkar_popoghakan = }\")\n\n# print(f\"\"\"{a} \n# {x} = {a *3}\n# \"\"\")\n\n4\nshat_erkar_popoghakan = shat_erkar_popoghakan =    4\nshat_erkar_popoghakan =        4\n\n\n\n\nnum = 5.123456432\n\nprint(f\"{num:.0f}\")\n\na = f\"{num:.1f}\"\nprint(a, type(a))\n\n\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\nInput In [66], in &lt;cell line: 3&gt;()\n      1 num = 5.123456432\n----&gt; 3 print(f\"{num:.0r}\")\n      5 a = f\"{num:.1f}\"\n      6 print(a, type(a))\n\nValueError: Unknown format code 'r' for object of type 'float'\n\n\n\n\nsurname = \"’°’¶’£’°’∂’∏÷Ç’∂’® {}\"\nprint(surname)\n\nsurname_input = input()\n\nprint(surname.format(surname_input))\n\n’°’¶’£’°’∂’∏÷Ç’∂’® {}\n’°’¶’£’°’∂’∏÷Ç’∂’® TArk\n\n\n\n\n7.1.5.2 Raw string\n\nprint('’•’Ω ’°’º’°’ª’´’∂ ’ø’∏’≤’∂ ’•’¥ \\n ’•’Ω ’ß’¨ ’•÷Ä’Ø÷Ä’∏÷Ä’§')\n\n’•’Ω ’°’º’°’ª’´’∂ ’ø’∏’≤’∂ ’•’¥ \n ’•’Ω ’ß’¨ ’•÷Ä’Ø÷Ä’∏÷Ä’§\n\n\n\na = r'’•’Ω ’°’º’°’ª’´’∂ ’ø’∏’≤’∂ ’•’¥ \\n ’•’Ω ’ß’¨ ’•÷Ä’Ø÷Ä’∏÷Ä’§'\nprint(a)\n\n’•’Ω ’°’º’°’ª’´’∂ ’ø’∏’≤’∂ ’•’¥ \\n ’•’Ω ’ß’¨ ’•÷Ä’Ø÷Ä’∏÷Ä’§\n\n\n\nprint(a)\n\n’•’Ω ’°’º’°’ª’´’∂ ’ø’∏’≤’∂ ’•’¥ \\n ’•’Ω ’ß’¨ ’•÷Ä’Ø÷Ä’∏÷Ä’§\n\n\n\nprint(\"Desktop\\tut\\nur.txt\")\n\nDesktop ut\nur.txt\n\n\n\nprint(\"Desktop\\\\tut\\\\nur.txt\")\n\nDesktop\\tut\\nur.txt\n\n\n\nprint(r\"Desktop\\tut\\nur.txt\")\n\nDesktop\\tut\\nur.txt\n\n\n\n\n\n7.1.6 Immutability\n\ns = '’∫÷Ä’∂’´÷Ä'\n\n\ns[1] = \"’°\"\n\n\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\nInput In [77], in &lt;cell line: 1&gt;()\n----&gt; 1 s[1] = \"’°\"\n\nTypeError: 'str' object does not support item assignment\n\n\n\n\n# s[1] = \"÷Ä\"\ns = \"’∫’°’∂’´÷Ä\"\nprint(s)\n\n’∫’°’∂’´÷Ä\n\n\n\ns = s[0] + \"’°\" + s[2:]\nprint(s)\n\n’∫’°’∂’´÷Ä\n\n\n\n\n7.1.7 in\n\ns = '’°’≤÷Å’°’∂ ’Ω’∏’≠'\n\n\nprint('’°' in s)\nprint('’°’∂' in s)\n\nTrue\nTrue\n\n\n\nprint('’≤’°' in s)\nprint('’°’≤' in s)\n\nFalse\nTrue\n\n\n\nprint('’¢’´’¢’°’º' in s)\n\nFalse",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>03 String, Range, List, some functions</span>"
    ]
  },
  {
    "objectID": "python/03_Str_Range_List_some_funcs.html#list-÷Å’∏÷Ç÷Å’°’Ø",
    "href": "python/03_Str_Range_List_some_funcs.html#list-÷Å’∏÷Ç÷Å’°’Ø",
    "title": "5¬† 03 String, Range, List, some functions",
    "section": "7.2 List (÷Å’∏÷Ç÷Å’°’Ø)",
    "text": "7.2 List (÷Å’∏÷Ç÷Å’°’Ø)\n\n7.2.1 ’Ä’°’µ’ø’°÷Ä’°÷Ä’∏÷Ç’¥’®\n\na = [1, 3.14, \"’Ø’°÷Ä’ø’∏÷Ü’´’¨\", [25,33], 5]\n\nprint(a)\nprint(type(a))\nprint(a[1:3])\nprint(list(range(1,3)))\n\n[1, 3.14, '’Ø’°÷Ä’ø’∏÷Ü’´’¨', [25, 33], 5]\n&lt;class 'list'&gt;\n[3.14, '’Ø’°÷Ä’ø’∏÷Ü’´’¨']\n[1, 2]\n1 3.14 ’Ø’°÷Ä’ø’∏÷Ü’´’¨ [25, 33] 5\n\n\n\nprint(a[1])\n\n3.14\n\n\n\nprint(a[-1])\n\n5\n\n\n\nprint(a[2:4])\n\n['’Ø’°÷Ä’ø’∏÷Ü’´’¨', [25, 33]]\n\n\n\nprint(a[3])\n\nprint(a[3][1])\n\nprint([25, 33][1])\n\n[25, 33]\n33\n33\n\n\n\na[:3]\n\n[1, 3.14, '’Ø’°÷Ä’ø’∏÷Ü’´’¨']\n\n\n\na = [1,\n     5,\n     3,\n     50,\n     9]\nprint(a)\n\n[1, 5, 3, 50, 9]\n\n\n\n# s[1] = \"’°\"\na[0] = 509\nprint(a) # mutable\n\n[509, 5, 3, 50, 9]\n\n\n\nprint(12 in a)\nprint(11 in a)\n\nFalse\nFalse\n\n\n\na = list(\"barev\")\nprint(a)\n\nprint(str([1,2,3]))\n\n['b', 'a', 'r', 'e', 'v']\n[\n\n\n\n\n7.2.2 ‘≥’∏÷Ç’¥’°÷Ä’∏÷Ç’¥, ’©’æ’∏’æ ’¢’°’¶’¥’°’∫’°’ø’Ø’∏÷Ç’¥\n\nb = [2, 4, 6]\nprint(b)\n\nprint(a)\n\n[2, 4, 6]\n[509, 5, 3, 50, 9]\n\n\n\na + b\n\n[509, 5, 3, 50, 9, 2, 4, 6]\n\n\n\nb * 3\n\n[2, 4, 6, 2, 4, 6, 2, 4, 6]\n\n\n\nprint(b)\n\n[2, 4, 6]\n\n\n\nb += [5]\n\n\nb\n\n[2, 4, 6, 5]\n\n\n\n# b = b + 5 # b += 5\nb = b + [5]\nb += [5]\nprint(b)\n\n[2, 4, 6, 5, 5, 5]\n\n\n\na.append(5)\n\na.append([1,2, 4])\n\n# a = a.append(5)\n\nprint(a)\n\n[509, 5, 3, 50, 9, 5, [1, 2, 4], 5, [1, 2, 4]]\n\n\n\ndel a[2] # delete\na\n\n[509, 5, 5, [1, 2, 4], 5, [1, 2, 4]]\n\n\n\n\n7.2.3 ÷Å’∏÷Ç÷Å’°’Ø’∂’•÷Ä’´ ’æ÷Ä’° ’∞’°’≥’°’≠ ’Ø’´÷Ä’°’º’æ’∏’≤ ÷Ü’∏÷Ç’∂’Ø÷Å’´’°’∂’•÷Ä (’∞÷Ä’°’¥’°’∂’∂’•÷Ä)\n\na = [1, 3.4, 654, 143]\nprint(sum(a))\n\n# b = [\"a\", \"b\", \"c\"]\n# print(sum(b))\n\n801.4\n\n\n\nprint(max(a))\n\n654\n\n\n\nprint(min(a))\n\n1\n\n\n\nprint(len(a)) # length\n\n4",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>03 String, Range, List, some functions</span>"
    ]
  },
  {
    "objectID": "python/03_Str_Range_List_some_funcs.html#’©’æ’•÷Ä’´-’æ÷Ä’°-’∞’°’≥’°’≠-’Ø’´÷Ä’°’º’æ’∏’≤-÷Ü’∏÷Ç’∂’Ø÷Å’´’°’∂’•÷Ä-’∞÷Ä’°’¥’°’∂’∂’•÷Ä",
    "href": "python/03_Str_Range_List_some_funcs.html#’©’æ’•÷Ä’´-’æ÷Ä’°-’∞’°’≥’°’≠-’Ø’´÷Ä’°’º’æ’∏’≤-÷Ü’∏÷Ç’∂’Ø÷Å’´’°’∂’•÷Ä-’∞÷Ä’°’¥’°’∂’∂’•÷Ä",
    "title": "5¬† 03 String, Range, List, some functions",
    "section": "7.3 ‘π’æ’•÷Ä’´ ’æ÷Ä’° ’∞’°’≥’°’≠ ’Ø’´÷Ä’°’º’æ’∏’≤ ÷Ü’∏÷Ç’∂’Ø÷Å’´’°’∂’•÷Ä (’∞÷Ä’°’¥’°’∂’∂’•÷Ä)",
    "text": "7.3 ‘π’æ’•÷Ä’´ ’æ÷Ä’° ’∞’°’≥’°’≠ ’Ø’´÷Ä’°’º’æ’∏’≤ ÷Ü’∏÷Ç’∂’Ø÷Å’´’°’∂’•÷Ä (’∞÷Ä’°’¥’°’∂’∂’•÷Ä)\n\na = -509\nprint(abs(a)) # absolute value, ’¢’°÷Å’°÷Ä’±’°’Ø ’°÷Ä’™’•÷Ñ, ’¥’∏’§’∏÷Ç’¨\n\n509\n\n\n\na = 4 # a**3\nprint(pow(a, (1/3))) # power ’°’Ω’´’≥’°’∂ pow(a, b) ’∂’∑’°’∂’°’Ø’∏÷Ç’¥’° a-’´ b ’°’Ω’ø’´’≥’°’∂\n\n0.6299605249474366\n\n\n\na = 3.14159\nb = 3.89\n# print(round(a))\nprint(f\"{a}-’∂ ’Ø’¨’∏÷Ä’°÷Å’∂’•’∂÷Ñ -&gt; {round(a)}\")\nprint(f\"{b}-’∂ ’Ø’¨’∏÷Ä’°÷Å’∂’•’∂÷Ñ -&gt; {round(b)}\")\n\nprint(round(3.5))\n\nprint(round(-3.7))\n\nprint(round(a, 3)) # ’Ω’ø’∏÷Ä’°’Ø’•’ø’´÷Å ’∞’•’ø’∏ ÷Ñ’°’∂’´ ’∂’´’∑’´ ’≥’∑’ø’∏÷Ç’©’µ’°’¥’¢ ’•’∂÷Ñ ’∏÷Ç’¶’∏÷Ç’¥ ’Ø’¨’∏÷Ä’°÷Å’∂’•’¨\n\n3.14159-’∂ ’Ø’¨’∏÷Ä’°÷Å’∂’•’∂÷Ñ -&gt; 3\n3.89-’∂ ’Ø’¨’∏÷Ä’°÷Å’∂’•’∂÷Ñ -&gt; 4\n4\n-4\n3.142\n\n\n\ncos(3)\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nInput In [169], in &lt;cell line: 1&gt;()\n----&gt; 1 cos(3)\n\nNameError: name 'cos' is not defined",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>03 String, Range, List, some functions</span>"
    ]
  },
  {
    "objectID": "python/03_Str_Range_List_some_funcs.html#’¥’•’Æ’°÷Å’∂’•’∂÷Ñ-’¥’•÷Ä-÷Ü’∏÷Ç’∂’Ø÷Å’´’°’∂’•÷Ä’´-’∞’°’æ’°÷Ñ’°’Æ’∏÷Ç’∂",
    "href": "python/03_Str_Range_List_some_funcs.html#’¥’•’Æ’°÷Å’∂’•’∂÷Ñ-’¥’•÷Ä-÷Ü’∏÷Ç’∂’Ø÷Å’´’°’∂’•÷Ä’´-’∞’°’æ’°÷Ñ’°’Æ’∏÷Ç’∂",
    "title": "5¬† 03 String, Range, List, some functions",
    "section": "7.4 ’Ñ’•’Æ’°÷Å’∂’•’∂÷Ñ ’¥’•÷Ä ÷Ü’∏÷Ç’∂’Ø÷Å’´’°’∂’•÷Ä’´ ’∞’°’æ’°÷Ñ’°’Æ’∏÷Ç’∂",
    "text": "7.4 ’Ñ’•’Æ’°÷Å’∂’•’∂÷Ñ ’¥’•÷Ä ÷Ü’∏÷Ç’∂’Ø÷Å’´’°’∂’•÷Ä’´ ’∞’°’æ’°÷Ñ’°’Æ’∏÷Ç’∂\n\n7.4.1 math\n\nimport math # import-’∂’•÷Ä’´ ’¥’°’Ω’´’∂ ’§’•’º ’Ø’≠’∏’Ω’•’∂÷Ñ\n\n\na = 3.5\n\nprint(math.ceil(a)) # ’°’º’°’Ω’ø’°’≤\nprint(math.floor(a)) # ’∞’°’ø’°’Ø # int(a)\n\n4\n3\n\n\n\nimport this\n\nThe Zen of Python, by Tim Peters\n\nBeautiful is better than ugly.\nExplicit is better than implicit.\nSimple is better than complex.\nComplex is better than complicated.\nFlat is better than nested.\nSparse is better than dense.\nReadability counts.\nSpecial cases aren't special enough to break the rules.\nAlthough practicality beats purity.\nErrors should never pass silently.\nUnless explicitly silenced.\nIn the face of ambiguity, refuse the temptation to guess.\nThere should be one-- and preferably only one --obvious way to do it.\nAlthough that way may not be obvious at first unless you're Dutch.\nNow is better than never.\nAlthough never is often better than *right* now.\nIf the implementation is hard to explain, it's a bad idea.\nIf the implementation is easy to explain, it may be a good idea.\nNamespaces are one honking great idea -- let's do more of those!\n\n\n\nfrom math import ceil, floor\n\na = 3.5\nprint(ceil(a)) # ’°’º’°’Ω’ø’°’≤\nprint(floor(a)) # ’∞’°’ø’°’Ø\n\n4\n3\n\n\n\na = 25\nprint(math.sqrt(a)) # square root, ÷Ñ’°’º’°’Ø’∏÷Ç’Ω’´ ’°÷Ä’¥’°’ø\n\n5.0\n\n\n\na = 0\nprint(math.cos(a))\n\n1.0\n\n\n\nhelp(math)\n\nHelp on built-in module math:\n\nNAME\n    math\n\nDESCRIPTION\n    This module provides access to the mathematical functions\n    defined by the C standard.\n\nFUNCTIONS\n    acos(x, /)\n        Return the arc cosine (measured in radians) of x.\n        \n        The result is between 0 and pi.\n    \n    acosh(x, /)\n        Return the inverse hyperbolic cosine of x.\n    \n    asin(x, /)\n        Return the arc sine (measured in radians) of x.\n        \n        The result is between -pi/2 and pi/2.\n    \n    asinh(x, /)\n        Return the inverse hyperbolic sine of x.\n    \n    atan(x, /)\n        Return the arc tangent (measured in radians) of x.\n        \n        The result is between -pi/2 and pi/2.\n    \n    atan2(y, x, /)\n        Return the arc tangent (measured in radians) of y/x.\n        \n        Unlike atan(y/x), the signs of both x and y are considered.\n    \n    atanh(x, /)\n        Return the inverse hyperbolic tangent of x.\n    \n    ceil(x, /)\n        Return the ceiling of x as an Integral.\n        \n        This is the smallest integer &gt;= x.\n    \n    comb(n, k, /)\n        Number of ways to choose k items from n items without repetition and without order.\n        \n        Evaluates to n! / (k! * (n - k)!) when k &lt;= n and evaluates\n        to zero when k &gt; n.\n        \n        Also called the binomial coefficient because it is equivalent\n        to the coefficient of k-th term in polynomial expansion of the\n        expression (1 + x)**n.\n        \n        Raises TypeError if either of the arguments are not integers.\n        Raises ValueError if either of the arguments are negative.\n    \n    copysign(x, y, /)\n        Return a float with the magnitude (absolute value) of x but the sign of y.\n        \n        On platforms that support signed zeros, copysign(1.0, -0.0)\n        returns -1.0.\n    \n    cos(x, /)\n        Return the cosine of x (measured in radians).\n    \n    cosh(x, /)\n        Return the hyperbolic cosine of x.\n    \n    degrees(x, /)\n        Convert angle x from radians to degrees.\n    \n    dist(p, q, /)\n        Return the Euclidean distance between two points p and q.\n        \n        The points should be specified as sequences (or iterables) of\n        coordinates.  Both inputs must have the same dimension.\n        \n        Roughly equivalent to:\n            sqrt(sum((px - qx) ** 2.0 for px, qx in zip(p, q)))\n    \n    erf(x, /)\n        Error function at x.\n    \n    erfc(x, /)\n        Complementary error function at x.\n    \n    exp(x, /)\n        Return e raised to the power of x.\n    \n    expm1(x, /)\n        Return exp(x)-1.\n        \n        This function avoids the loss of precision involved in the direct evaluation of exp(x)-1 for small x.\n    \n    fabs(x, /)\n        Return the absolute value of the float x.\n    \n    factorial(x, /)\n        Find x!.\n        \n        Raise a ValueError if x is negative or non-integral.\n    \n    floor(x, /)\n        Return the floor of x as an Integral.\n        \n        This is the largest integer &lt;= x.\n    \n    fmod(x, y, /)\n        Return fmod(x, y), according to platform C.\n        \n        x % y may differ.\n    \n    frexp(x, /)\n        Return the mantissa and exponent of x, as pair (m, e).\n        \n        m is a float and e is an int, such that x = m * 2.**e.\n        If x is 0, m and e are both 0.  Else 0.5 &lt;= abs(m) &lt; 1.0.\n    \n    fsum(seq, /)\n        Return an accurate floating point sum of values in the iterable seq.\n        \n        Assumes IEEE-754 floating point arithmetic.\n    \n    gamma(x, /)\n        Gamma function at x.\n    \n    gcd(*integers)\n        Greatest Common Divisor.\n    \n    hypot(...)\n        hypot(*coordinates) -&gt; value\n        \n        Multidimensional Euclidean distance from the origin to a point.\n        \n        Roughly equivalent to:\n            sqrt(sum(x**2 for x in coordinates))\n        \n        For a two dimensional point (x, y), gives the hypotenuse\n        using the Pythagorean theorem:  sqrt(x*x + y*y).\n        \n        For example, the hypotenuse of a 3/4/5 right triangle is:\n        \n            &gt;&gt;&gt; hypot(3.0, 4.0)\n            5.0\n    \n    isclose(a, b, *, rel_tol=1e-09, abs_tol=0.0)\n        Determine whether two floating point numbers are close in value.\n        \n          rel_tol\n            maximum difference for being considered \"close\", relative to the\n            magnitude of the input values\n          abs_tol\n            maximum difference for being considered \"close\", regardless of the\n            magnitude of the input values\n        \n        Return True if a is close in value to b, and False otherwise.\n        \n        For the values to be considered close, the difference between them\n        must be smaller than at least one of the tolerances.\n        \n        -inf, inf and NaN behave similarly to the IEEE 754 Standard.  That\n        is, NaN is not close to anything, even itself.  inf and -inf are\n        only close to themselves.\n    \n    isfinite(x, /)\n        Return True if x is neither an infinity nor a NaN, and False otherwise.\n    \n    isinf(x, /)\n        Return True if x is a positive or negative infinity, and False otherwise.\n    \n    isnan(x, /)\n        Return True if x is a NaN (not a number), and False otherwise.\n    \n    isqrt(n, /)\n        Return the integer part of the square root of the input.\n    \n    lcm(*integers)\n        Least Common Multiple.\n    \n    ldexp(x, i, /)\n        Return x * (2**i).\n        \n        This is essentially the inverse of frexp().\n    \n    lgamma(x, /)\n        Natural logarithm of absolute value of Gamma function at x.\n    \n    log(...)\n        log(x, [base=math.e])\n        Return the logarithm of x to the given base.\n        \n        If the base not specified, returns the natural logarithm (base e) of x.\n    \n    log10(x, /)\n        Return the base 10 logarithm of x.\n    \n    log1p(x, /)\n        Return the natural logarithm of 1+x (base e).\n        \n        The result is computed in a way which is accurate for x near zero.\n    \n    log2(x, /)\n        Return the base 2 logarithm of x.\n    \n    modf(x, /)\n        Return the fractional and integer parts of x.\n        \n        Both results carry the sign of x and are floats.\n    \n    nextafter(x, y, /)\n        Return the next floating-point value after x towards y.\n    \n    perm(n, k=None, /)\n        Number of ways to choose k items from n items without repetition and with order.\n        \n        Evaluates to n! / (n - k)! when k &lt;= n and evaluates\n        to zero when k &gt; n.\n        \n        If k is not specified or is None, then k defaults to n\n        and the function returns n!.\n        \n        Raises TypeError if either of the arguments are not integers.\n        Raises ValueError if either of the arguments are negative.\n    \n    pow(x, y, /)\n        Return x**y (x to the power of y).\n    \n    prod(iterable, /, *, start=1)\n        Calculate the product of all the elements in the input iterable.\n        \n        The default start value for the product is 1.\n        \n        When the iterable is empty, return the start value.  This function is\n        intended specifically for use with numeric values and may reject\n        non-numeric types.\n    \n    radians(x, /)\n        Convert angle x from degrees to radians.\n    \n    remainder(x, y, /)\n        Difference between x and the closest integer multiple of y.\n        \n        Return x - n*y where n*y is the closest integer multiple of y.\n        In the case where x is exactly halfway between two multiples of\n        y, the nearest even value of n is used. The result is always exact.\n    \n    sin(x, /)\n        Return the sine of x (measured in radians).\n    \n    sinh(x, /)\n        Return the hyperbolic sine of x.\n    \n    sqrt(x, /)\n        Return the square root of x.\n    \n    tan(x, /)\n        Return the tangent of x (measured in radians).\n    \n    tanh(x, /)\n        Return the hyperbolic tangent of x.\n    \n    trunc(x, /)\n        Truncates the Real x to the nearest Integral toward 0.\n        \n        Uses the __trunc__ magic method.\n    \n    ulp(x, /)\n        Return the value of the least significant bit of the float x.\n\nDATA\n    e = 2.718281828459045\n    inf = inf\n    nan = nan\n    pi = 3.141592653589793\n    tau = 6.283185307179586\n\nFILE\n    (built-in)\n\n\n\n\n\nhelp(math.sqrt)\n\nHelp on built-in function sqrt in module math:\n\nsqrt(x, /)\n    Return the square root of x.\n\n\n\n\nhelp(math)\n\nHelp on built-in module math:\n\nNAME\n    math\n\nDESCRIPTION\n    This module provides access to the mathematical functions\n    defined by the C standard.\n\nFUNCTIONS\n    acos(x, /)\n        Return the arc cosine (measured in radians) of x.\n        \n        The result is between 0 and pi.\n    \n    acosh(x, /)\n        Return the inverse hyperbolic cosine of x.\n    \n    asin(x, /)\n        Return the arc sine (measured in radians) of x.\n        \n        The result is between -pi/2 and pi/2.\n    \n    asinh(x, /)\n        Return the inverse hyperbolic sine of x.\n    \n    atan(x, /)\n        Return the arc tangent (measured in radians) of x.\n        \n        The result is between -pi/2 and pi/2.\n    \n    atan2(y, x, /)\n        Return the arc tangent (measured in radians) of y/x.\n        \n        Unlike atan(y/x), the signs of both x and y are considered.\n    \n    atanh(x, /)\n        Return the inverse hyperbolic tangent of x.\n    \n    ceil(x, /)\n        Return the ceiling of x as an Integral.\n        \n        This is the smallest integer &gt;= x.\n    \n    comb(n, k, /)\n        Number of ways to choose k items from n items without repetition and without order.\n        \n        Evaluates to n! / (k! * (n - k)!) when k &lt;= n and evaluates\n        to zero when k &gt; n.\n        \n        Also called the binomial coefficient because it is equivalent\n        to the coefficient of k-th term in polynomial expansion of the\n        expression (1 + x)**n.\n        \n        Raises TypeError if either of the arguments are not integers.\n        Raises ValueError if either of the arguments are negative.\n    \n    copysign(x, y, /)\n        Return a float with the magnitude (absolute value) of x but the sign of y.\n        \n        On platforms that support signed zeros, copysign(1.0, -0.0)\n        returns -1.0.\n    \n    cos(x, /)\n        Return the cosine of x (measured in radians).\n    \n    cosh(x, /)\n        Return the hyperbolic cosine of x.\n    \n    degrees(x, /)\n        Convert angle x from radians to degrees.\n    \n    dist(p, q, /)\n        Return the Euclidean distance between two points p and q.\n        \n        The points should be specified as sequences (or iterables) of\n        coordinates.  Both inputs must have the same dimension.\n        \n        Roughly equivalent to:\n            sqrt(sum((px - qx) ** 2.0 for px, qx in zip(p, q)))\n    \n    erf(x, /)\n        Error function at x.\n    \n    erfc(x, /)\n        Complementary error function at x.\n    \n    exp(x, /)\n        Return e raised to the power of x.\n    \n    expm1(x, /)\n        Return exp(x)-1.\n        \n        This function avoids the loss of precision involved in the direct evaluation of exp(x)-1 for small x.\n    \n    fabs(x, /)\n        Return the absolute value of the float x.\n    \n    factorial(x, /)\n        Find x!.\n        \n        Raise a ValueError if x is negative or non-integral.\n    \n    floor(x, /)\n        Return the floor of x as an Integral.\n        \n        This is the largest integer &lt;= x.\n    \n    fmod(x, y, /)\n        Return fmod(x, y), according to platform C.\n        \n        x % y may differ.\n    \n    frexp(x, /)\n        Return the mantissa and exponent of x, as pair (m, e).\n        \n        m is a float and e is an int, such that x = m * 2.**e.\n        If x is 0, m and e are both 0.  Else 0.5 &lt;= abs(m) &lt; 1.0.\n    \n    fsum(seq, /)\n        Return an accurate floating point sum of values in the iterable seq.\n        \n        Assumes IEEE-754 floating point arithmetic.\n    \n    gamma(x, /)\n        Gamma function at x.\n    \n    gcd(*integers)\n        Greatest Common Divisor.\n    \n    hypot(...)\n        hypot(*coordinates) -&gt; value\n        \n        Multidimensional Euclidean distance from the origin to a point.\n        \n        Roughly equivalent to:\n            sqrt(sum(x**2 for x in coordinates))\n        \n        For a two dimensional point (x, y), gives the hypotenuse\n        using the Pythagorean theorem:  sqrt(x*x + y*y).\n        \n        For example, the hypotenuse of a 3/4/5 right triangle is:\n        \n            &gt;&gt;&gt; hypot(3.0, 4.0)\n            5.0\n    \n    isclose(a, b, *, rel_tol=1e-09, abs_tol=0.0)\n        Determine whether two floating point numbers are close in value.\n        \n          rel_tol\n            maximum difference for being considered \"close\", relative to the\n            magnitude of the input values\n          abs_tol\n            maximum difference for being considered \"close\", regardless of the\n            magnitude of the input values\n        \n        Return True if a is close in value to b, and False otherwise.\n        \n        For the values to be considered close, the difference between them\n        must be smaller than at least one of the tolerances.\n        \n        -inf, inf and NaN behave similarly to the IEEE 754 Standard.  That\n        is, NaN is not close to anything, even itself.  inf and -inf are\n        only close to themselves.\n    \n    isfinite(x, /)\n        Return True if x is neither an infinity nor a NaN, and False otherwise.\n    \n    isinf(x, /)\n        Return True if x is a positive or negative infinity, and False otherwise.\n    \n    isnan(x, /)\n        Return True if x is a NaN (not a number), and False otherwise.\n    \n    isqrt(n, /)\n        Return the integer part of the square root of the input.\n    \n    lcm(*integers)\n        Least Common Multiple.\n    \n    ldexp(x, i, /)\n        Return x * (2**i).\n        \n        This is essentially the inverse of frexp().\n    \n    lgamma(x, /)\n        Natural logarithm of absolute value of Gamma function at x.\n    \n    log(...)\n        log(x, [base=math.e])\n        Return the logarithm of x to the given base.\n        \n        If the base not specified, returns the natural logarithm (base e) of x.\n    \n    log10(x, /)\n        Return the base 10 logarithm of x.\n    \n    log1p(x, /)\n        Return the natural logarithm of 1+x (base e).\n        \n        The result is computed in a way which is accurate for x near zero.\n    \n    log2(x, /)\n        Return the base 2 logarithm of x.\n    \n    modf(x, /)\n        Return the fractional and integer parts of x.\n        \n        Both results carry the sign of x and are floats.\n    \n    nextafter(x, y, /)\n        Return the next floating-point value after x towards y.\n    \n    perm(n, k=None, /)\n        Number of ways to choose k items from n items without repetition and with order.\n        \n        Evaluates to n! / (n - k)! when k &lt;= n and evaluates\n        to zero when k &gt; n.\n        \n        If k is not specified or is None, then k defaults to n\n        and the function returns n!.\n        \n        Raises TypeError if either of the arguments are not integers.\n        Raises ValueError if either of the arguments are negative.\n    \n    pow(x, y, /)\n        Return x**y (x to the power of y).\n    \n    prod(iterable, /, *, start=1)\n        Calculate the product of all the elements in the input iterable.\n        \n        The default start value for the product is 1.\n        \n        When the iterable is empty, return the start value.  This function is\n        intended specifically for use with numeric values and may reject\n        non-numeric types.\n    \n    radians(x, /)\n        Convert angle x from degrees to radians.\n    \n    remainder(x, y, /)\n        Difference between x and the closest integer multiple of y.\n        \n        Return x - n*y where n*y is the closest integer multiple of y.\n        In the case where x is exactly halfway between two multiples of\n        y, the nearest even value of n is used. The result is always exact.\n    \n    sin(x, /)\n        Return the sine of x (measured in radians).\n    \n    sinh(x, /)\n        Return the hyperbolic sine of x.\n    \n    sqrt(x, /)\n        Return the square root of x.\n    \n    tan(x, /)\n        Return the tangent of x (measured in radians).\n    \n    tanh(x, /)\n        Return the hyperbolic tangent of x.\n    \n    trunc(x, /)\n        Truncates the Real x to the nearest Integral toward 0.\n        \n        Uses the __trunc__ magic method.\n    \n    ulp(x, /)\n        Return the value of the least significant bit of the float x.\n\nDATA\n    e = 2.718281828459045\n    inf = inf\n    nan = nan\n    pi = 3.141592653589793\n    tau = 6.283185307179586\n\nFILE\n    (built-in)\n\n\n\n\n\n\n7.4.2 random\n\nimport random\n\n\nprint(random.randint(2, 20)) # ’•÷Ä’Ø’∏÷Ç ’•’¶÷Ä’∂ ’ß’¨ ’∂’•÷Ä’°’º’µ’°’¨\n\n16\n\n\n\nlst = [\"rock\", \"paper\", \"scissors\"]\n\nprint(random.choice(lst))\n\nrock",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>03 String, Range, List, some functions</span>"
    ]
  },
  {
    "objectID": "python/03_Str_Range_List_some_funcs.html#’∞’´’¥’∂’°’Ø’°’∂-’ø’∂’°’µ’´’∂",
    "href": "python/03_Str_Range_List_some_funcs.html#’∞’´’¥’∂’°’Ø’°’∂-’ø’∂’°’µ’´’∂",
    "title": "5¬† 03 String, Range, List, some functions",
    "section": "8.1 ’Ä’´’¥’∂’°’Ø’°’∂ ’ø’∂’°’µ’´’∂",
    "text": "8.1 ’Ä’´’¥’∂’°’Ø’°’∂ ’ø’∂’°’µ’´’∂\n\nProfound ’¢’°’™’´’∂ 9 (’ì’∏÷É’∏’≠’°’Ø’°’∂’∂’•÷Ä ÷á ’ø’´’∫’•÷Ä) - 11-’´÷Å ’¥’´’∂’π÷á ’æ’•÷Ä’ª\nProfound ’¢’°’™’´’∂ 11 (’è’∏’≤’•÷Ä) - ’¨÷Ä’´’æ\nProfound ’¢’°’™’´’∂ 13 (’ë’∏÷Ç÷Å’°’Ø’∂’•÷Ä ÷á ’¥’´’ª’°’Ø’°’µ÷Ñ’•÷Ä) - ’¨÷Ä’´’æ",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>03 String, Range, List, some functions</span>"
    ]
  },
  {
    "objectID": "python/03_Str_Range_List_some_funcs.html#’∂’∑’∏÷Ç’¥’∂’•÷Ä",
    "href": "python/03_Str_Range_List_some_funcs.html#’∂’∑’∏÷Ç’¥’∂’•÷Ä",
    "title": "5¬† 03 String, Range, List, some functions",
    "section": "8.2 ’Ü’∑’∏÷Ç’¥’∂’•÷Ä",
    "text": "8.2 ’Ü’∑’∏÷Ç’¥’∂’•÷Ä\n\n13.17-’® range ÷Ö’£’ø’°’£’∏÷Ä’Æ’•’¨’∏’æ ÷É’∏÷Ä’±’•÷Ñ ’¨’∏÷Ç’Æ’•’¨",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>03 String, Range, List, some functions</span>"
    ]
  },
  {
    "objectID": "python/03_Str_Range_List_some_funcs.html#’¨’∏÷Ç’Æ’∏÷Ç’¥’∂’•÷Ä",
    "href": "python/03_Str_Range_List_some_funcs.html#’¨’∏÷Ç’Æ’∏÷Ç’¥’∂’•÷Ä",
    "title": "5¬† 03 String, Range, List, some functions",
    "section": "8.3 ‘º’∏÷Ç’Æ’∏÷Ç’¥’∂’•÷Ä",
    "text": "8.3 ‘º’∏÷Ç’Æ’∏÷Ç’¥’∂’•÷Ä\n\n’à÷Ä’∏’∑ ’≠’∂’§’´÷Ä’∂’•÷Ä’´ ’æ’´’§’•’∏’¨’∏÷Ç’Æ’∏÷Ç’¥’∂’•÷Ä (ToDo)\n‘≤’∏’¨’∏÷Ä ’≠’∂’§’´÷Ä’∂’•÷Ä’´ ’¨’∏÷Ç’Æ’∏÷Ç’¥’∂’•÷Ä / ’∂’∑’∏÷Ç’¥’∂’•÷Ä (ToDo)",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>03 String, Range, List, some functions</span>"
    ]
  },
  {
    "objectID": "python/04_Loops_for_while.html",
    "href": "python/04_Loops_for_while.html",
    "title": "6¬† 04 Loops: For, While, Break, Continue, Else",
    "section": "",
    "text": "7 üé¶ ’è’•’Ω’°’§’°’Ω’•÷Ä + ’¨÷Ä’°÷Å’∏÷Ç÷Å’´’π\n’¨’∏÷Ç’Ω’°’∂’Ø’°÷Ä’´ ’∞’≤’∏÷Ç’¥’®, ’Ä’•’≤’´’∂’°’Ø’ù Naz Israyelyan\n(ToDo)\nwhile my_guitar_gently_weeps:\n(c) Beatles\nToDo 1. ’è’•’Ω’∏÷Ç’©’µ’∏÷Ç’∂ 2025\n2. ’è’•’Ω’∏÷Ç’©’µ’∏÷Ç’∂ 2023\n3. ‘≥’∏÷Ä’Æ’∂’°’Ø’°’∂ 2025\n4. ‘≥’∏÷Ä’Æ’∂’°’Ø’°’∂ 2023\n5. ’à÷Ä’∏’∑ ’ø’∂’°’µ’´’∂’∂’•÷Ä’´ ’¨’∏÷Ç’Æ’∏÷Ç’¥’∂’•÷Ä\n’Ü’∑’∏÷Ç’¥’∂’•÷Ä÷â\n‘¥’°’Ω’®’∂’©’°÷Å’´’∂ ’¥’°’Ω’∂’°’Ø÷Å’∏÷Ç’©’µ’°’∂ ’∏÷Ç ’Ø’°÷Ä’Æ’´÷Ñ ’∞’°’µ’ø’∂’•’¨’∏÷Ç Google Form",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>04 Loops: For, While, Break, Continue, Else</span>"
    ]
  },
  {
    "objectID": "python/04_Loops_for_while.html#for",
    "href": "python/04_Loops_for_while.html#for",
    "title": "6¬† 04 Loops: For, While, Break, Continue, Else",
    "section": "8.1 For",
    "text": "8.1 For\n\n8.1.1 For ÷Å’´’Ø’¨’® ’ø’°÷Ä’¢’•÷Ä ’ø’æ’µ’°’∂’•÷Ä’´ ’Ø’°’º’∏÷Ç÷Å’æ’°’Æ’∂’•÷Ä’´ ’æ÷Ä’°\n\n8.1.1.1 for ’¨’´’Ω’ø\n\nanunner = [\"‘º’•’º’∂’´’Ø\", \"’ç’°’∂’°’Ω’°÷Ä\", \"‘π’•’¨’¥’°’∂\", \"‘∫’∏÷Ä’´’Ø\", \"‘∫’∏÷Ä’™’´’Ø\", \"‘±’µ’Æ’•’¥’∂’´’Ø\",\n           \"’ç’∫’´÷Ä’´’§’∏’∂\", \"’ç’∏÷Ç’¨’•’µ’¥’°’∂\", \"’è’°÷Ä’¶’°’∂\", \"‘π’∏÷Ä’£’∏’¥’´’Ø\", \"‘ø’≥’•’∫\", \"‘Ω÷É’∏\",\n           \"‘¥’°’º’æ’´’Ω\", \"’é’´’ø’µ’∏’Ø\", \"’Ñ’∏’¶’£\", \"‘≤’∏÷Ç’©’∏÷Ç’¨\", \"’è’°’¨’°’∑\", \"‘≤’•÷Ä’´’¥’∏’º\",\n           \"’ñ’°’µ’¨’∏\", \"‘≥’∏’º’∏\", \"’Ñ’°’æ’Ω’•’Ω\", \"‘¥÷Ä’°’Ø’∏’∂\", \"‘º’∏÷Ç’©’∏\", \"‘≤’°÷Ä’∑’°’¥\",\n           \"‘∑’º’∂’•’Ω’ø’∏ ’ì’°÷Ä’∫’•÷Å’´\", \"‘≤’°÷Ä’≠’∏÷Ç’§’°÷Ä’∏÷Ç’¥\", \"‘≤’∏’¢’∏’¨\", \"’Ä’º’°’¶’¥’´’Ø\"]\n\n\nprint(f\"{anunner[0]}’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\")\nprint(f\"{anunner[1]}’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\")\nprint(f\"{anunner[2]}’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\")\nprint(f\"{anunner[3]}’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\")\nprint(f\"{anunner[4]}’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\")\nprint(f\"{anunner[5]}’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\")\nprint(f\"{anunner[6]}’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\")\nprint(f\"{anunner[7]}’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\")\nprint(f\"{anunner[8]}’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\")\nprint(f\"{anunner[9]}’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\")\nprint(f\"{anunner[10]}’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\") # ÷á ’°’µ’¨’∂\n\n# ÷É’∏’≠’•’¨ ’∂-’∂ ’®-÷Ç\n\n‘º’•’º’∂’´’Ø’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\n’ç’°’∂’°’Ω’°÷Ä’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\n‘π’•’¨’¥’°’∂’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\n‘∫’∏÷Ä’´’Ø’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\n‘∫’∏÷Ä’™’´’Ø’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\n‘±’µ’Æ’•’¥’∂’´’Ø’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\n’ç’∫’´÷Ä’´’§’∏’∂’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\n’ç’∏÷Ç’¨’•’µ’¥’°’∂’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\n’è’°÷Ä’¶’°’∂’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\n‘π’∏÷Ä’£’∏’¥’´’Ø’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\n‘ø’≥’•’∫’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\n\n\n\n# anunner[0], annuner[1], anunner[2]\na = anunner[0]\nprint(f\"{a}’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\")\n\na = anunner[1]\nprint(f\"{a}’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\")\n\n\n‘º’•’º’∂’´’Ø’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\n’ç’°’∂’°’Ω’°÷Ä’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\n\n\n\nfor a in anunner:\n    print(f\"{a}’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\")\n\n‘º’•’º’∂’´’Ø’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\n’ç’°’∂’°’Ω’°÷Ä’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\n‘π’•’¨’¥’°’∂’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\n‘∫’∏÷Ä’´’Ø’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\n‘∫’∏÷Ä’™’´’Ø’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\n‘±’µ’Æ’•’¥’∂’´’Ø’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\n’ç’∫’´÷Ä’´’§’∏’∂’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\n’ç’∏÷Ç’¨’•’µ’¥’°’∂’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\n’è’°÷Ä’¶’°’∂’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\n‘π’∏÷Ä’£’∏’¥’´’Ø’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\n‘ø’≥’•’∫’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\n‘Ω÷É’∏’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\n‘¥’°’º’æ’´’Ω’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\n’é’´’ø’µ’∏’Ø’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\n’Ñ’∏’¶’£’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\n‘≤’∏÷Ç’©’∏÷Ç’¨’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\n’è’°’¨’°’∑’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\n‘≤’•÷Ä’´’¥’∏’º’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\n’ñ’°’µ’¨’∏’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\n‘≥’∏’º’∏’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\n’Ñ’°’æ’Ω’•’Ω’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\n‘¥÷Ä’°’Ø’∏’∂’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\n‘º’∏÷Ç’©’∏’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\n‘≤’°÷Ä’∑’°’¥’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\n‘∑’º’∂’•’Ω’ø’∏ ’ì’°÷Ä’∫’•÷Å’´’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\n‘≤’°÷Ä’≠’∏÷Ç’§’°÷Ä’∏÷Ç’¥’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\n‘≤’∏’¢’∏’¨’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\n’Ä’º’°’¶’¥’´’Ø’∂ ’Ø’°÷Ä’£’´’∂’´ ’∞’•÷Ä’∏’Ω ’ß\n\n\nfor ÷É’∏÷É’∏’≠’°’Ø’°’∂ in ’´’∂’π-’∏÷Ä ’¢’°’∂ ’∏÷Ä’® ’∏÷Ç’∂’´ ’ß’¨’•’¥’•’∂’ø’∂’•÷Ä:\n    ’°÷Ä’° ’ß’Ω ’´’∂’π ’¢’°’∂’®\n\nsirac_tver = [0, 5, 9, 12]\nfor tiv in sirac_tver:\n    if tiv &gt; 5:\n        print(tiv)\n  \n# tiv = sirac_tver[0]\n# if tiv &gt; 5:\n#   print(tiv)\n# tiv = sirac_tver[1]\n# if tiv &gt; 5:\n#   print(tiv)\n# tiv = sirac_tver[2]\n# if tiv &gt; 5:\n#   print(tiv)\n\n\n9\n12\n\n\n\n\n8.1.1.2 for range\n’∂’∏÷Ç’µ’∂’´’Ω’Ø ’•’©’• ’Ø’°÷Ä’∏’≤’°’∂’°’´’∂÷Ñ ’¥’´’∑’ø ’¥’•’∂÷Ñ ’∏÷Ç’≤’≤’°’Ø’´ list-’∏’æ ÷Å’∏÷Ç÷Å’°’Ø ’Ω’°÷Ä÷Ñ’•’¨, range’® ’°’æ’•’¨’´ ’∂’°’≠’®’∂’ø÷Ä’•’¨’´ ’°, ’∏÷Ä’∏’æ’∞’•’ø÷á ’∂’∏÷Ç’µ’∂’´’Ω’Ø ’¥’´’¨’´’∏’∂ ’©’´’æ ’∫’°÷Ä’∏÷Ç’∂’°’Ø’´, ’∞’´’∑’∏’≤’∏÷Ç’©’µ’∏÷Ç’∂’∏÷Ç’¥ ’¶’¢’°’≤’•÷Å’∂’∏÷Ç’¥ ’° ’∂’∏÷Ç’µ’∂ ÷Ñ’°’∂’°’Ø’´ ’ø’•’≤ (3 ’©’´’æ ’° ’∫’°’∞’∏÷Ç’¥, start, end, step)\n\nprint(range(3,21))\nprint(list(range(3,21)))\n\nprint(range(3, 1000000000000000000000000000))\n# print(list(range(3, 100000000000000000000000000)))\n\nrange(3, 21)\n[3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\nrange(3, 1000000000000000000000000000)\n\n\n\nlst = list(range(1,10))\nprint(lst)\n\n[1, 2, 3, 4, 5, 6, 7, 8, 9]\n\n\n\nprint(range(1,10))\n\nrange(1, 10)\n\n\n\nfor i in lst:\n    if i % 2 == 0:\n        print(i)\n\n2\n4\n6\n8\n\n\n\nlst = list(range(1,10))\nprint(lst)\n\n# for i in lst:\nfor i in list(range(1,10)):\n    if i % 2 == 0:\n        print(i)\n\nfor i in range(1,10):\n    if i % 2 == 0:\n        print(i)\n\n[1, 2, 3, 4, 5, 6, 7, 8, 9]\n2\n4\n6\n8\n2\n4\n6\n8\n\n\n\nfor i in range(1,5): # i - iterator / iterable\n    print(i)\n\n1\n2\n3\n4\n\n\n\n\n\n8.1.2 (count) ‘±’º’°’ª’°’§÷Ä’°’∂÷Ñ 1\n’∞’°’∑’æ’•’¨ ’©’• ÷Ñ’°’∂’´ ’¶’∏÷Ç’µ’£ ’©’´’æ ’Ø’° 1-’´÷Å 10 ’¥’´’ª’°’Ø’°’µ÷Ñ’∏÷Ç’¥\n\ncount = 0\n\nfor i in range(1,11):\n    if i % 2 == 0:\n        count += 1\n\nprint(count)\n\n\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n\n\n\ncount = 0\n\nfor i in range(1,10):\n    if i % 2 == 0:\n        print(i, \"’∂ ’¶’∏÷Ç’µ’£ ’ß\")\n        count += 1\n        print(count)\n\nprint(\"’®’∂’§’∞’°’∂’∏÷Ç÷Ä ÷Ñ’°’∂’°’Ø\", count)\n\n2 ’∂ ’¶’∏÷Ç’µ’£ ’ß\n1\n4 ’∂ ’¶’∏÷Ç’µ’£ ’ß\n2\n6 ’∂ ’¶’∏÷Ç’µ’£ ’ß\n3\n8 ’∂ ’¶’∏÷Ç’µ’£ ’ß\n4\n’®’∂’§’∞’°’∂’∏÷Ç÷Ä ÷Ñ’°’∂’°’Ø 4\n\n\n\nfor i in range(1,9): \n    print(f\"{i = }\")\n    count = 0\n    if i % 2 == 0:\n        print(i, \"’∂ ’¶’∏÷Ç’µ’£ ’ß\")\n        count += 1\n    print(count)\n    print()\n\nprint(\"’®’∂’§’∞’°’∂’∏÷Ç÷Ä ÷Ñ’°’∂’°’Ø\", count)\n\ni = 1\n0\n\ni = 2\n2 ’∂ ’¶’∏÷Ç’µ’£ ’ß\n1\n\ni = 3\n0\n\ni = 4\n4 ’∂ ’¶’∏÷Ç’µ’£ ’ß\n1\n\ni = 5\n0\n\ni = 6\n6 ’∂ ’¶’∏÷Ç’µ’£ ’ß\n1\n\ni = 7\n0\n\ni = 8\n8 ’∂ ’¶’∏÷Ç’µ’£ ’ß\n1\n\n’®’∂’§’∞’°’∂’∏÷Ç÷Ä ÷Ñ’°’∂’°’Ø 1\n\n\n\n\n8.1.3 (range) ‘±’º’°’ª’°’§÷Ä’°’∂÷Ñ 2\n’≠’∂’§÷Ä’•’¨ ’¥’°÷Ä’§’∏÷Ç’∂ ’∏÷Ä ’°’Ω’´ ’©’• ÷Ñ’°’∂’´ ’©’´’æ’° ’∏÷Ç’¶’∏÷Ç’¥ ’∂’•÷Ä’¥’∏÷Ç’Æ’´, ’∂’•÷Ä’¥’∏÷Ç’Æ’´ ’∏÷Ç ’∫’°’∞’•’¨ ÷Å’∏÷Ç÷Å’°’Ø’´ ’¥’•’ª\n\nn = int(input())\n\nlst = []\n\nfor _ in range(n):\n    lst.append(input())\n    \nprint(f\"’ä’•’ø÷Ñ ’° ’°’º’∂’•’∂÷Ñ÷â {lst}\")\n    \n\n\n\n\n\n\n\n\n’ä’•’ø÷Ñ ’° ’°’º’∂’•’∂÷Ñ÷â ['pnar', 'kanget']\n\n\n\n# ’≠’∂’§÷Ä’•’¨ ’¥’°÷Ä’§’∏÷Ç’∂ ’∏÷Ä ’°’Ω’´ ’©’• ÷Ñ’°’∂’´ ’©’´’æ’° ’∏÷Ç’¶’∏÷Ç’¥ ’∂’•÷Ä’¥’∏÷Ç’Æ’´, ÷Ö’£’∂’•’¨ ’∏÷Ä ’∂’•÷Ä’¥’∏÷Ç’Æ’´ ’∏÷Ç ’ø’∫’•’¨ ’§÷Ä’°’∂÷Ñ\nn = int(input())\nfor _ in range(n): # ’°÷Ä’° n ’°’∂’£’°’¥\n    bar = input()\n    print('’§’∏÷Ç÷Ñ ’∂’•÷Ä’¥’∏÷Ç’Æ’•÷Å’´÷Ñ', bar)\n\n‘≤’°’µ÷Å ’°’≠÷Ä ’∞’•’π ’Ø’°÷Ä÷á’∏÷Ä ’π’ß÷Ä ’Ω’ø’•’≤ i-’∂,\n’Ü’¥’°’∂ ’§’•’∫÷Ñ’•÷Ä’∏÷Ç’¥ ’•÷Ä’¢ ’¥’•’¶ ’´÷Ä’°’Ø’°’∂’∏÷Ç’¥ ÷É’∏÷É’∏’≠’°’Ø’°’∂’® ’∫’•’ø÷Ñ ’π’´, ’´÷Ä’° ’°’∂’∏÷Ç’∂’® ’§’∂’∏÷Ç’¥ ’•’∂÷Ñ _\n_ -&gt; ’´’∂’π’∏÷Ä’°’µ’°\n\n\n8.1.4 (index) ‘±’º’°’ª’°’§÷Ä’°’∂÷Ñ 3\n’ø’∫’•’¨ ’¶’∏÷Ç’µ’£ ’´’∂’§’•÷Ñ’Ω’∏’æ ’©’æ’•÷Ä’®\n\ntver = [3, 4, 1, 0, 112, 509, 8]\n\nfor i in range(0, len(tver), 2):\n    # if i % 2 == 0:\n    print(tver[i])\n    \n\n3\n1\n112\n8\n\n\n\ntver = [3, 4, 1, 0, 112, 509, 8]\n\nprint(tver[::2])\n\n[3, 1, 112, 8]\n\n\n\n\n8.1.5 ’ì’∏÷É’∏’≠’°’Ø’°’∂’´ ’°÷Ä’™’•÷Ñ’´ ’æ÷Ä’° for-’´ ’°’¶’§’§’•÷Å’∏÷Ç’©’µ’∏÷Ç’∂’®\n\ntver = [3, 4, 1, 0, 112, 509, 8]\n\na = \"barev\"\nprint(a, \"’¥’´’∂’π÷á for\")\nfor a in range(len(tver)):\n    print(a, 'for-’´ ’¥’•’ª')\n    if a % 2 == 0:\n        pass\n\nprint(a, 'for-’´÷Å ’§’∏÷Ç÷Ä’Ω')\n\nfor a in range(len(tver)):\n    pass\n\nbarev ’¥’´’∂’π÷á for\n0 for-’´ ’¥’•’ª\n1 for-’´ ’¥’•’ª\n2 for-’´ ’¥’•’ª\n3 for-’´ ’¥’•’ª\n4 for-’´ ’¥’•’ª\n5 for-’´ ’¥’•’ª\n6 for-’´ ’¥’•’ª\n6 for-’´÷Å ’§’∏÷Ç÷Ä’Ω\n\n\n\n\n8.1.6 For string\n\n# ’∞’°’∑’æ’•’¨ ’ø’•÷Ñ’Ω’´ ’¥’•’ª a-’•÷Ä’´ ÷Ñ’°’∂’°’Ø’®\n\ns = \"÷Å’´’Ø’¨’∂’•÷Ä’® ’∑’°’ø ’¨’°’æ ’¢’°’∂ ’•’∂\"\n\ncount_a = 0\nfor i in s: # for i in \"÷Å’´’Ø’¨’∂’•÷Ä’® ’∑’°’ø ’¨’°’æ ’¢’°’∂ ’•’∂\"\n    # print(i)\n    if i == '’°':\n        count_a += 1\n\nprint(count_a)\n\n3",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>04 Loops: For, While, Break, Continue, Else</span>"
    ]
  },
  {
    "objectID": "python/04_Loops_for_while.html#break",
    "href": "python/04_Loops_for_while.html#break",
    "title": "6¬† 04 Loops: For, While, Break, Continue, Else",
    "section": "8.2 break",
    "text": "8.2 break\n‘ª’Ω’Ø ’´’∂’π ’•’©’• ’´’∂’π-’∏÷Ä ’∫’°’∞’´÷Å ’Ω’Ø’Ω’°’Æ ’ß’¨ ’¥’∂’°÷Å’°’Æ ’ß’¨’•’¥’•’∂’ø’∂’•÷Ä’´ ’∞’°’¥’°÷Ä ’π’•’∂÷Ñ ’∏÷Ç’¶’∏÷Ç’¥ ’°’∑’≠’°’ø’°÷Å’∂’•’∂÷Ñ ’Æ÷Ä’°’£’´÷Ä’®, ’¥’•’¶ ’´’∂’π ’∫’•’ø÷Ñ ’ß÷Ä ’°÷Ä’•÷Å’´’∂÷Ñ\n\nirer = ['’£÷Ä’´’π', \"’∫’°’∂’´÷Ä\", \"’∞’°÷Ä’©’∏÷Ç’Ø\", \"’∂’°’Ω’Ø’∏÷Ç ’©’°’µ\",\"’¥’°’Ø’°÷Ä’∏’∂\", \"’£’´÷Ä÷Ñ\",  \"’°’ø’°’¥’´ ’≠’∏’¶’°’∂’°’Ø\", \"÷É’´’≤\"]\n\nfor i in irer:\n    print(f'’§’°÷Ä’°’Ø’´ ’¥’•’ª ’§÷Ä’æ’°’Æ ’ß÷Ä {i}')\n    if i == '’∂’°’Ω’Ø’∏÷Ç ’©’°’µ':\n        print('’∏÷Ç’º’°’°’°, ’£’ø’°')\n        break\n    print('’∑’°’∂’∏÷Ç’∂’°’Ø’∏÷Ç’¥ ’•’∂÷Ñ ’¥’°’∂ ’£’°’¨')\n    \nprint(1)\n\n’§’°÷Ä’°’Ø’´ ’¥’•’ª ’§÷Ä’æ’°’Æ ’ß÷Ä ’£÷Ä’´’π\n’∑’°’∂’∏÷Ç’∂’°’Ø’∏÷Ç’¥ ’•’∂÷Ñ ’¥’°’∂ ’£’°’¨\n’§’°÷Ä’°’Ø’´ ’¥’•’ª ’§÷Ä’æ’°’Æ ’ß÷Ä ’∫’°’∂’´÷Ä\n’∑’°’∂’∏÷Ç’∂’°’Ø’∏÷Ç’¥ ’•’∂÷Ñ ’¥’°’∂ ’£’°’¨\n’§’°÷Ä’°’Ø’´ ’¥’•’ª ’§÷Ä’æ’°’Æ ’ß÷Ä ’∞’°÷Ä’©’∏÷Ç’Ø\n’∑’°’∂’∏÷Ç’∂’°’Ø’∏÷Ç’¥ ’•’∂÷Ñ ’¥’°’∂ ’£’°’¨\n’§’°÷Ä’°’Ø’´ ’¥’•’ª ’§÷Ä’æ’°’Æ ’ß÷Ä ’∂’°’Ω’Ø’∏÷Ç ’©’°’µ\n’∏÷Ç’º’°’°’°, ’£’ø’°\n1",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>04 Loops: For, While, Break, Continue, Else</span>"
    ]
  },
  {
    "objectID": "python/04_Loops_for_while.html#continue",
    "href": "python/04_Loops_for_while.html#continue",
    "title": "6¬† 04 Loops: For, While, Break, Continue, Else",
    "section": "8.3 Continue",
    "text": "8.3 Continue\n‘±÷Ä’¥’°’ø ’∞’°’∑’æ’•’¨\n\nfor i in [1, 4, 509, -3, 49, -13]:\n    print(f\"÷É’∏÷Ä’±’•’¥ ’∞’°’∑’æ’•’¨ {i}-’´ ’°÷Ä’¥’°’ø’®\")\n\n    if i &lt; 0:\n        print(f'’Ä’¨’® ’¥’´ ÷Ä’∏’∫’•, ’¥’•’∂÷Ñ ’Ω’•’∂÷Å ’π’ß’´’∂÷Ñ ’∫’°’µ’¥’°’∂’°’æ’∏÷Ä’æ’•’¨, ’¢’°÷Å ’•’¥ ’©’∏’≤’∂’∏÷Ç’¥ {i}’®')\n        print()\n        continue\n\n    print(f\"’°÷Ä’¥’°’ø’∂’°’ù {i ** 0.5}\")\n    print()\n\n÷É’∏÷Ä’±’•’¥ ’∞’°’∑’æ’•’¨ 1-’´ ’°÷Ä’¥’°’ø’®\n’°÷Ä’¥’°’ø’∂’°’ù 1.0\n\n÷É’∏÷Ä’±’•’¥ ’∞’°’∑’æ’•’¨ 4-’´ ’°÷Ä’¥’°’ø’®\n’°÷Ä’¥’°’ø’∂’°’ù 2.0\n\n÷É’∏÷Ä’±’•’¥ ’∞’°’∑’æ’•’¨ 509-’´ ’°÷Ä’¥’°’ø’®\n’°÷Ä’¥’°’ø’∂’°’ù 22.561028345356956\n\n÷É’∏÷Ä’±’•’¥ ’∞’°’∑’æ’•’¨ -3-’´ ’°÷Ä’¥’°’ø’®\n’Ä’¨’® ’¥’´ ÷Ä’∏’∫’•, ’¥’•’∂÷Ñ ’Ω’•’∂÷Å ’π’ß’´’∂÷Ñ ’∫’°’µ’¥’°’∂’°’æ’∏÷Ä’æ’•’¨, ’¢’°÷Å ’•’¥ ’©’∏’≤’∂’∏÷Ç’¥ -3’®\n\n÷É’∏÷Ä’±’•’¥ ’∞’°’∑’æ’•’¨ 49-’´ ’°÷Ä’¥’°’ø’®\n’°÷Ä’¥’°’ø’∂’°’ù 7.0\n\n÷É’∏÷Ä’±’•’¥ ’∞’°’∑’æ’•’¨ -13-’´ ’°÷Ä’¥’°’ø’®\n’Ä’¨’® ’¥’´ ÷Ä’∏’∫’•, ’¥’•’∂÷Ñ ’Ω’•’∂÷Å ’π’ß’´’∂÷Ñ ’∫’°’µ’¥’°’∂’°’æ’∏÷Ä’æ’•’¨, ’¢’°÷Å ’•’¥ ’©’∏’≤’∂’∏÷Ç’¥ -13’®",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>04 Loops: For, While, Break, Continue, Else</span>"
    ]
  },
  {
    "objectID": "python/04_Loops_for_while.html#’Ø’°÷Ä’°’∂÷Ñ-’¥’´’°’™’°’¥’°’∂’°’Ø-’∞’°’¥-break-’∞’°’¥-continue-’∏÷Ç’∂’•’∂’°’∂÷Ñ",
    "href": "python/04_Loops_for_while.html#’Ø’°÷Ä’°’∂÷Ñ-’¥’´’°’™’°’¥’°’∂’°’Ø-’∞’°’¥-break-’∞’°’¥-continue-’∏÷Ç’∂’•’∂’°’∂÷Ñ",
    "title": "6¬† 04 Loops: For, While, Break, Continue, Else",
    "section": "8.4 ‘ø’°÷Ä’°’∂÷Ñ ’¥’´’°’™’°’¥’°’∂’°’Ø ’∞’°’¥ break ’∞’°’¥ continue ’∏÷Ç’∂’•’∂’°’∂÷Ñ",
    "text": "8.4 ‘ø’°÷Ä’°’∂÷Ñ ’¥’´’°’™’°’¥’°’∂’°’Ø ’∞’°’¥ break ’∞’°’¥ continue ’∏÷Ç’∂’•’∂’°’∂÷Ñ\n13’´÷Å ’æ’°’≠’•÷Å’∏’≤’´ ’≠’∂’§’´÷Ä, ’°÷Ä’¥’°’ø ’∞’°’∑’æ’•’¨\n\nfor num in [-1, 9, 4, -2, 13, 16, 36]:\n    print(f\"÷É’∏÷Ä’±’•’∂÷Ñ ’∞’°’∑’æ’•’¨ {num}’´ ’°÷Ä’¥’°’ø’®\")\n\n    if num &lt; 0:\n        print('’°’≠÷Ä ’π’•’¥ ’Ø’°÷Ä’° ’ß ’¢’°÷Å’°’Ω’°’Ø’°’∂’´ ’°÷Ä’¥’°’ø’® ’∞’°’∑’æ’•’¥\\n')\n        continue\n\n    if num == 13:\n        print(\"’æ’°’µ-’æ’°’µ, ’æ’°’≠’•÷Å’°, ’ß’¨ ’π’•’¥ ’∞’°’∑’æ’´ ’•’Ω ÷Ñ’∏ ’∞’°’¥’°÷Ä ’°÷Ä’¥’°’ø’∂’•÷Ä, ’•’Ω ÷Ñ’•’¶ ’æ’Ω’ø’°’∞’∏÷Ç’¥ ’ß’´, ’´’Ω’Ø ’§’∏÷Ç‚Ä§‚Ä§‚Ä§ ÷Ö’ú’∞, ’´’∂’π’∫’•’Ω ’Ø’°÷Ä’∏’≤ ’ß’´÷Ä, ’¥’•÷Ä ’¥’•’ª ’°’¥’•’∂’´’∂’π ’æ’•÷Ä’ª’°÷Å’°’Æ ’ß, ’π’•’¥ ’∏÷Ç’¶’∏÷Ç’¥ ÷Ñ’•’¶ ’°’µ’¨÷á’Ω ’ø’•’Ω’∂’•’¨, ’¥’∏’º’°÷Å’´÷Ä ’´’¥ ’£’∏’µ’∏÷Ç’©’µ’°’∂ ’¥’°’Ω’´’∂, ’§’∏÷Ç ’°’µ’¨÷á’Ω ’´’¥ ’Ø’µ’°’∂÷Ñ’∏÷Ç’¥ ’ø’•’≤ ’π’∏÷Ç’∂’•’Ω, ’•’Ω ’°’∂’´’Æ’∏÷Ç’¥ ’•’¥ ’°’µ’∂ ÷Ö÷Ä’® ’•÷Ä’¢ ’¥’•’∂÷Ñ ’∞’°’∂’§’´’∫’•÷Å’´’∂÷Ñ, ’•÷Ä’¢ ’°’µ’£’∏÷Ç’¥ ’ø’≠’∏÷Ç÷Ä ’∂’Ω’ø’°’Æ ’ß’´, ’∂’∏÷Ä ’ß’´ ’æ’•÷Ä’ª’°÷Å÷Ä’•’¨ ’å’•’¥’°÷Ä’Ø’´ ’£’´÷Ä÷Ñ’Ω ’Ø’°÷Ä’§’°’¨’®, ’§’∏÷Ç ’ß’¨ ’°’∂’ø÷Ä’°’¥ ’∞’•’∂’æ’°’Æ ’ß’´÷Ä ’Æ’°’º’´ ’Ø’∏’≥’´’∂, ’∞’°’µ’°÷Å÷Ñ’∂’•÷Ä’∏’æ ’∞’°’∂’§’´’∫’•÷Å’´’∂÷Ñ’ù ÷Ñ’°’ª’∏÷Ç’©’µ’∏÷Ç’∂ ’°÷Ä’•÷Å’´÷Ä ’¥’∏’ø’•’∂’°’¨, ÷á ’∫’°÷Ä’¶’æ’•÷Å ’∏÷Ä ’•÷Ä’Ø’∏÷Ç’Ω’Ω ’ß’¨ ’∂’∏÷Ç’µ’∂ ’∞’•÷Ä’∏’Ω’´ ’¥’°’∞’´ ’∫’°’ø’≥’°’º’∏’æ ’ß’´’∂÷Ñ ’ø’≠’∏÷Ç÷Ä, ’å’•’¥’°÷Ä’Ø’´ ’¥’∏’ø ’∑’°’ø ’¨’°’æ’° ’Ω’ø’°÷Å’æ’∏÷Ç’¥ ’Ω’´÷Ä’ø’® ’Ø’∏’ø÷Ä’•’¨ ’´÷Ä ’£÷Ä÷Ñ’´ ’∞’•÷Ä’∏’Ω’´, ÷É’°’Ω’ø’∏÷Ä’•’∂ ’§’∏÷Ç ’ß’¨ ’´’¥ ’Ω’´÷Ä’ø’® ’Ø’∏’ø÷Ä’•’¨’∏÷Ç ’¥’°’Ω’∂’°’£’•’ø ’•’Ω, ’°’≠÷Ä ’¥’•’∂÷Ñ ’°’µ’∂÷Ñ’°’∂ ’¢’°’∂’´ ’¥’´’ª’∏’æ ’•’∂÷Ñ ’´÷Ä’°÷Ä ’∞’•’ø ’°’∂÷Å’•’¨, ’°’µ’∂÷Ñ’°’∂ ’∞÷Ä’°’∑’°’¨’´ ÷Ö÷Ä’•÷Ä ’•’∂÷Ñ ’∏÷Ç’∂’•÷Å’•’¨, ’∞’´’∑’∏÷Ç’¥ ’•’Ω ’•÷Ä’¢ ’°’¥’¢’∏’≤’ª ’£’´’∑’•÷Ä ’°’Ω’ø’•÷Ä’´’∂ ’ß’´’∂÷Ñ ’∂’°’µ’∏÷Ç’¥ ’∏÷Ç ’§’∏÷Ç ’´’∂’± ’Ω’∏’æ’∏÷Ä’°÷Å’∂’∏÷Ç’¥ ’ß’´÷Ä ’∞’°’¥’°’Ω’ø’•’≤’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä’®, ’Ø’°’¥ ’•÷Ä’¢ ’¥’´’°’Ω’´’∂ ‘±÷Ä’°’£’°’Æ ’ß’´’∂÷Ñ ’¢’°÷Ä’±÷Ä’°÷Å’•’¨ ÷á ’´’∂’± ÷Ñ’∏ ’∏÷Ç’Ω’•÷Ä’´ ’æ÷Ä’° ’∂’Ω’ø’°÷Å÷Ä’•÷Å’´÷Ä ’∏÷Ä ’•’Ω ’°’µ’§ ’∫’°’∞’´’∂ ’°’¥’•’∂’°’¢’°÷Ä’±÷Ä ’¥’°÷Ä’§’® ’¨’´’∂’•’¥ ’Ä’°’µ’°’Ω’ø’°’∂’∏÷Ç’¥, ’∞’´’∑’∏÷Ç’¥ ’•’Ω ’•÷Ä’¢ ’Æ’∂’æ’•÷Å ’¥’•÷Ä ’§’∏÷Ç’Ω’ø÷Ä’®’ù ’ç’•÷Å’´’¨’´’°’∂, ’°’π÷Ñ’•÷Ä’Ω ’¨÷Å’æ’∏÷Ç’¥ ’•’∂ ’•÷Ä’¢ ’∞’´’∑’∏÷Ç’¥ ’•’¥ ’´’∂’π’∫’•’Ω ’°’Ω’•÷Å ’∂’° ’´÷Ä ’°’º’°’ª’´’∂ ÷Ñ’°’µ’¨’®, ’§’∏÷Ç ’ß’¨ ’´÷Ä ’∞’°’¥’°÷Ä ’≥’∏’≥’°÷Ä’°’∂ ’Ø’°’º’∏÷Ç÷Å’•÷Å’´÷Ä, ’§’• ’≥’∏’≥’°÷Ä’°’∂ ’°’Ω’•’¨’Ω ’¥’•÷Ñ’•’∂’°’µ’´ ’°’∂’´’æ’® ’Ø’°’≠’•÷Å’´÷Ä ’¥’•÷Ä ’ø’∂’Ø’°’Æ ’©’©’•’∂’∏÷Ç ’≥’µ’∏÷Ç’≤’•÷Ä’´÷Å ’¥’•’Ø’´÷Å, ’∞’´’∑’´ ’•’∂ ÷Ö÷Ä’® ’•÷Ä’¢ ’¥’•÷Ä ’°’º’°’ª’∂’•’Ø ‘ª’£’∂’°’Ω’´’∏’µ’´’∂ ’∫’•’ø÷Ñ ’ß ’°’º’°’ª’´’∂ ’°’∂’£’°’¥ ’§’∫÷Ä’∏÷Å ’∏÷Ç’≤’≤’°÷Ä’Ø’•’´’∂÷Ñ, ’•’∂ ’∏÷Ä ’¨’°÷Ä’æ’°’Æ ’ß’´’∂÷Ñ ’°÷Ä’§’µ’∏’≤ ’Ø’∞’°÷Ä’¥’°÷Ä’æ’´ ’©’• ’π’ß, ’´’∂÷Ñ’∂ ’ß’¨ ’•’Ø’°’æ ’≥’°’Ø’°’ø’´’∂ ’°’Ω’ø’≤ ’∂’Ø’°÷Ä’°’Æ ’°’Ω’•÷Å ’∏÷Ä ’¢’∏’¨’∏÷Ä’´÷Å ’°’¥’•’∂’°’¨’°’æ’® ’∂’° ’ß ’∫’°’ø’°’Ω’≠’°’∂’•’¨ ’∏÷Ç’Ω’∏÷Ç÷Å’π’´ ’ø’æ’°’Æ ’∞’°’∂’•’¨’∏÷Ç’Ø’∂’•÷Ä’´’∂, ’§’• ’´’∞’°÷Ä’Ø’• ’¨’°’æ ’Ø’∫’°’ø’°’Ω’≠’°’∂’•÷Ä’ù ’°’¥’•’∂ ’£’´’∑’•÷Ä ’∞’•÷Ñ’´’°’© ’∫’°’ø’¥’•’¨’∏÷Ç÷Å ’°’º’°’ª ’¥’´’°’Ω’´’∂ ’ø’°÷Ä’¢’•÷Ä ’ø÷Ä’°’¥’°’¢’°’∂’°’Ø’°’∂ ’≠’∂’§’´÷Ä’∂’•÷Ä’´ ’ß’´’∂÷Ñ ÷Ñ’∂’∂’°÷Ä’Ø’∏÷Ç’¥ ’∞’´’∑’∏÷Ç’û’¥ ’•’Ω, ’∏’∂÷Å ’Ø’°÷Ä’°’´÷Ä ’§’∏÷Ç ’°’µ’Ω ’°’¥’•’∂’® ’°’æ’´÷Ä’•’´÷Ä, ’´’∂’π’∫’•’Ω ’Ø’°÷Ä’∏’≤ ’ß’´÷Ä ’´’∂’± ’°’Ω’•’¨ ’∞’°’∑’æ’•’¥ 13’´ ’°÷Ä’¥’°’ø’®, ’°’≠÷Ä ’§’∏÷Ç ’£’´’ø’•’Ω ’∏÷Ä ’•’Ω ’ß’§ ’©’´’æ’® ’π’•’¥ ’Ω’´÷Ä’∏÷Ç’¥, ’æ’Ω’ø’°’∞ ’•’≤’´÷Ä ’§’°’ø’°÷Ä’°’∂’® ’´’¥ ÷Ö’£’ø’´’∂ ’Ø’Ø’°’µ’°÷Å’∂’´ ’∏÷Ä’∏’∑’∏÷Ç’¥’®, ’•÷Ä’•’≠’°’∂’•÷Ä’® ’Ø’¥’∂’°’∂ ’´’∂’± ’∞’•’ø, ’´’∞’°÷Ä’Ø’• ’§’°’ø’°÷Ä’°’∂’® ’´’¥ ’Ø’∏’≤÷Ñ’´’∂ ’Ø’¨’´’∂’´, ’∏’æ ’ß’¨ ’¨’Ω’´ ’©’• ’´’∂’π ’•’Ω ’§’∏÷Ç ’°÷Ä’•’¨ ’¥’´’°’∂’£’°’¥’´÷Å ’Ø’∫’°’∑’ø’∫’°’∂’´ ’´’∂’±, ’°’Ω’•’¨ ’∞’°’∑’æ’´ 13’´ ’°÷Ä’¥’°’ø’®, ’´’∂’π’∫’•’Ω ’Ø’°÷Ä’∏’≤ ’•’Ω ÷Ñ’∏ ’•÷Ä’•’≠’°’∂’•÷Ä’´ ’¥’∏÷Ä’® ’°’µ’§’∫’´’Ω’´ ’¢’°’∂ ’°’Ω’•’¨, ’°’µ’∂ ’¢’∏’¨’∏÷Ä ’≠’∏’Ω’ø’∏÷Ç’¥’∂’•÷Ä’´÷Å ’∞’•’ø’∏, ’£’°’¥’°’Ø ’ß’´’∂÷Ñ ’£’∂’•’¨, ’°’Ω’∏÷Ç’¥ ’ß’´÷Ä ’•’Ω ’°’æ’•’¨’´ ’∑’°’ø ’£’°’¥’°’Ø’´ ’¥’•’ª ’•’¥ ’Ω’´÷Ä’∏÷Ç’¥ ÷Ñ’∂’•’¨, ’°÷Ä’´ ’¥’•’∂÷Ñ ’∏’π ’©’• ’¥’´ ’¢’°÷Ä’±’´ ’Æ’•÷Ä’°’∂’°’∂÷Ñ ’°’µ’¨ ’∂’∏÷Ç’µ’∂ ’£’°’¥’°’Ø’´ ’¥’•’ª, ’´’Ω’Ø ’∞’´’¥’°’ù ’ø’•’Ω ’©’• ’´’∂’π’´ ’•’∂÷Ñ ’∞’°’Ω’•’¨, ’Ω’° ’£÷Ä’•’¨’∏÷Ç’∂ ’¶’∏÷Ç’£’°’∞’•’º ’≠’°÷Ä’∏÷Ç’µ’Ø’´ ’¥’•’ª ’•’¥ ÷Ñ÷Å’∏÷Ç’¥ ’¥’•÷Ä ’¢’∏’¨’∏÷Ä ’¥’´’°’Ω’∂’°’Ø’°’∂ ’∂’Ø’°÷Ä’∂’•÷Ä’® ÷á ’•’∂ ’∂’æ’•÷Ä’® ’∏÷Ä’∂ ’´’∂’± ’°÷Ä’•÷Å’´÷Ä ’¥’•÷Ä ’°’º’°’ª’´’∂ ’ø’°÷Ä’•’¨’´÷Å’´’∂, ’°’µ’∂ 365’ß’ª’°’∂’∏÷Å ’™’∏’≤’∏’æ’°’Æ’∏÷Ç’∂ ’¢’°’∂’°’Ω’ø’•’≤’Æ’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä’´ ’∏÷Ä’∏’∂÷Ñ ’£÷Ä’∏÷Ç’¥ ’ß’´÷Ä ’°’¥’•’∂ ’£’´’∑’•÷Ä ’¥’•÷Ä ’°’µ’§ ÷Ö÷Ä’æ’° ÷á ’¥’•÷Ä ’Ω’´÷Ä’∏ ’¥’°’Ω’´’∂, ’¨’°’æ, ’¥’´ ’ø’•’Ω’°’Ø ’•’©’• ’Ω’•’∂÷Å ’∑’°÷Ä’∏÷Ç’∂’°’Ø’•’¥ ’¥’∂’°÷Å’°’Æ ’∂’µ’∏÷Ç’©’® ÷Å’´’Ø’¨’•÷Ä’´ ’π’•’¥ ’∞’°’Ω÷Å’∂’´ ’¥’´’∂’π÷á ’§’°’Ω’®, ’•’Ω ’°’µ’Ω÷Ö÷Ä ’©’∏’≤’∂’∏÷Ç’¥ ’•’¥ ÷Ñ’•’¶ ’´’¥ ’Ω’•÷Ä’∂ ’∏÷Ç ’∞’•’º’°’∂’∏÷Ç’¥, ’´’¥ ’Ω÷Ä’ø’´’∂ ’°’µ’Ω÷Ö÷Ä ’¥’´ ’∂’∏÷Ä ’æ’•÷Ä÷Ñ ’ß ’°’æ’•’¨’°’∂’∏÷Ç’¥ ’à÷Ç ’´’¥ ’Ω’•÷Ä’® ’∫’∏’Ø’æ’°’Æ ’≥’µ’∏÷Ç’≤’´, ’∫’∏’Ø’æ’°’Æ ’≥’µ’∏÷Ç’≤’´, ’≥’µ’∏÷Ç’≤’´ ’∂’¥’°’∂, ÷Ö÷Ä’∏÷Ä’æ’∏÷Ç’¥ ’ß ’°’∑’∂’°’∂ ÷Ñ’°’¥’∏÷Ç÷Å, ’°’∑’∂’°’∂ ÷Ñ’°’¥’∏÷Ç÷Å, ’°’∑’∂’°’∂ ÷Ñ’°’¥’∏÷Ç÷Å, ’∞’°’ª’∏’≤’∏÷Ç’©’µ’∏÷Ç’∂ ’Ω÷Ä’´’Ø’°\\n\")\n        break\n\n    print(f\"’°÷Ä’¥’°’ø’∂’°’ù {num ** 0.5}\\n\")\n\n\n÷É’∏÷Ä’±’•’∂÷Ñ ’∞’°’∑’æ’•’¨ -1’´ ’°÷Ä’¥’°’ø’®\n’°’≠÷Ä ’π’•’¥ ’Ø’°÷Ä’° ’ß ’¢’°÷Å’°’Ω’°’Ø’°’∂’´ ’°÷Ä’¥’°’ø’® ’∞’°’∑’æ’•’¥\n\n÷É’∏÷Ä’±’•’∂÷Ñ ’∞’°’∑’æ’•’¨ 9’´ ’°÷Ä’¥’°’ø’®\n’°÷Ä’¥’°’ø’∂’°’ù 3.0\n\n÷É’∏÷Ä’±’•’∂÷Ñ ’∞’°’∑’æ’•’¨ 4’´ ’°÷Ä’¥’°’ø’®\n’°÷Ä’¥’°’ø’∂’°’ù 2.0\n\n÷É’∏÷Ä’±’•’∂÷Ñ ’∞’°’∑’æ’•’¨ -2’´ ’°÷Ä’¥’°’ø’®\n’°’≠÷Ä ’π’•’¥ ’Ø’°÷Ä’° ’ß ’¢’°÷Å’°’Ω’°’Ø’°’∂’´ ’°÷Ä’¥’°’ø’® ’∞’°’∑’æ’•’¥\n\n÷É’∏÷Ä’±’•’∂÷Ñ ’∞’°’∑’æ’•’¨ 13’´ ’°÷Ä’¥’°’ø’®\n’æ’°’µ-’æ’°’µ, ’æ’°’≠’•÷Å’°, ’ß’¨ ’π’•’¥ ’∞’°’∑’æ’´ ’•’Ω ÷Ñ’∏ ’∞’°’¥’°÷Ä ’°÷Ä’¥’°’ø’∂’•÷Ä, ’•’Ω ÷Ñ’•’¶ ’æ’Ω’ø’°’∞’∏÷Ç’¥ ’ß’´, ’´’Ω’Ø ’§’∏÷Ç‚Ä§‚Ä§‚Ä§ ÷Ö’ú’∞, ’´’∂’π’∫’•’Ω ’Ø’°÷Ä’∏’≤ ’ß’´÷Ä, ’¥’•÷Ä ’¥’•’ª ’°’¥’•’∂’´’∂’π ’æ’•÷Ä’ª’°÷Å’°’Æ ’ß, ’π’•’¥ ’∏÷Ç’¶’∏÷Ç’¥ ÷Ñ’•’¶ ’°’µ’¨÷á’Ω ’ø’•’Ω’∂’•’¨, ’¥’∏’º’°÷Å’´÷Ä ’´’¥ ’£’∏’µ’∏÷Ç’©’µ’°’∂ ’¥’°’Ω’´’∂, ’§’∏÷Ç ’°’µ’¨÷á’Ω ’´’¥ ’Ø’µ’°’∂÷Ñ’∏÷Ç’¥ ’ø’•’≤ ’π’∏÷Ç’∂’•’Ω, ’•’Ω ’°’∂’´’Æ’∏÷Ç’¥ ’•’¥ ’°’µ’∂ ÷Ö÷Ä’® ’•÷Ä’¢ ’¥’•’∂÷Ñ ’∞’°’∂’§’´’∫’•÷Å’´’∂÷Ñ, ’•÷Ä’¢ ’°’µ’£’∏÷Ç’¥ ’ø’≠’∏÷Ç÷Ä ’∂’Ω’ø’°’Æ ’ß’´, ’∂’∏÷Ä ’ß’´ ’æ’•÷Ä’ª’°÷Å÷Ä’•’¨ ’å’•’¥’°÷Ä’Ø’´ ’£’´÷Ä÷Ñ’Ω ’Ø’°÷Ä’§’°’¨’®, ’§’∏÷Ç ’ß’¨ ’°’∂’ø÷Ä’°’¥ ’∞’•’∂’æ’°’Æ ’ß’´÷Ä ’Æ’°’º’´ ’Ø’∏’≥’´’∂, ’∞’°’µ’°÷Å÷Ñ’∂’•÷Ä’∏’æ ’∞’°’∂’§’´’∫’•÷Å’´’∂÷Ñ’ù ÷Ñ’°’ª’∏÷Ç’©’µ’∏÷Ç’∂ ’°÷Ä’•÷Å’´÷Ä ’¥’∏’ø’•’∂’°’¨, ÷á ’∫’°÷Ä’¶’æ’•÷Å ’∏÷Ä ’•÷Ä’Ø’∏÷Ç’Ω’Ω ’ß’¨ ’∂’∏÷Ç’µ’∂ ’∞’•÷Ä’∏’Ω’´ ’¥’°’∞’´ ’∫’°’ø’≥’°’º’∏’æ ’ß’´’∂÷Ñ ’ø’≠’∏÷Ç÷Ä, ’å’•’¥’°÷Ä’Ø’´ ’¥’∏’ø ’∑’°’ø ’¨’°’æ’° ’Ω’ø’°÷Å’æ’∏÷Ç’¥ ’Ω’´÷Ä’ø’® ’Ø’∏’ø÷Ä’•’¨ ’´÷Ä ’£÷Ä÷Ñ’´ ’∞’•÷Ä’∏’Ω’´, ÷É’°’Ω’ø’∏÷Ä’•’∂ ’§’∏÷Ç ’ß’¨ ’´’¥ ’Ω’´÷Ä’ø’® ’Ø’∏’ø÷Ä’•’¨’∏÷Ç ’¥’°’Ω’∂’°’£’•’ø ’•’Ω, ’°’≠÷Ä ’¥’•’∂÷Ñ ’°’µ’∂÷Ñ’°’∂ ’¢’°’∂’´ ’¥’´’ª’∏’æ ’•’∂÷Ñ ’´÷Ä’°÷Ä ’∞’•’ø ’°’∂÷Å’•’¨, ’°’µ’∂÷Ñ’°’∂ ’∞÷Ä’°’∑’°’¨’´ ÷Ö÷Ä’•÷Ä ’•’∂÷Ñ ’∏÷Ç’∂’•÷Å’•’¨, ’∞’´’∑’∏÷Ç’¥ ’•’Ω ’•÷Ä’¢ ’°’¥’¢’∏’≤’ª ’£’´’∑’•÷Ä ’°’Ω’ø’•÷Ä’´’∂ ’ß’´’∂÷Ñ ’∂’°’µ’∏÷Ç’¥ ’∏÷Ç ’§’∏÷Ç ’´’∂’± ’Ω’∏’æ’∏÷Ä’°÷Å’∂’∏÷Ç’¥ ’ß’´÷Ä ’∞’°’¥’°’Ω’ø’•’≤’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä’®, ’Ø’°’¥ ’•÷Ä’¢ ’¥’´’°’Ω’´’∂ ‘±÷Ä’°’£’°’Æ ’ß’´’∂÷Ñ ’¢’°÷Ä’±÷Ä’°÷Å’•’¨ ÷á ’´’∂’± ÷Ñ’∏ ’∏÷Ç’Ω’•÷Ä’´ ’æ÷Ä’° ’∂’Ω’ø’°÷Å÷Ä’•÷Å’´÷Ä ’∏÷Ä ’•’Ω ’°’µ’§ ’∫’°’∞’´’∂ ’°’¥’•’∂’°’¢’°÷Ä’±÷Ä ’¥’°÷Ä’§’® ’¨’´’∂’•’¥ ’Ä’°’µ’°’Ω’ø’°’∂’∏÷Ç’¥, ’∞’´’∑’∏÷Ç’¥ ’•’Ω ’•÷Ä’¢ ’Æ’∂’æ’•÷Å ’¥’•÷Ä ’§’∏÷Ç’Ω’ø÷Ä’®’ù ’ç’•÷Å’´’¨’´’°’∂, ’°’π÷Ñ’•÷Ä’Ω ’¨÷Å’æ’∏÷Ç’¥ ’•’∂ ’•÷Ä’¢ ’∞’´’∑’∏÷Ç’¥ ’•’¥ ’´’∂’π’∫’•’Ω ’°’Ω’•÷Å ’∂’° ’´÷Ä ’°’º’°’ª’´’∂ ÷Ñ’°’µ’¨’®, ’§’∏÷Ç ’ß’¨ ’´÷Ä ’∞’°’¥’°÷Ä ’≥’∏’≥’°÷Ä’°’∂ ’Ø’°’º’∏÷Ç÷Å’•÷Å’´÷Ä, ’§’• ’≥’∏’≥’°÷Ä’°’∂ ’°’Ω’•’¨’Ω ’¥’•÷Ñ’•’∂’°’µ’´ ’°’∂’´’æ’® ’Ø’°’≠’•÷Å’´÷Ä ’¥’•÷Ä ’ø’∂’Ø’°’Æ ’©’©’•’∂’∏÷Ç ’≥’µ’∏÷Ç’≤’•÷Ä’´÷Å ’¥’•’Ø’´÷Å, ’∞’´’∑’´ ’•’∂ ÷Ö÷Ä’® ’•÷Ä’¢ ’¥’•÷Ä ’°’º’°’ª’∂’•’Ø ‘ª’£’∂’°’Ω’´’∏’µ’´’∂ ’∫’•’ø÷Ñ ’ß ’°’º’°’ª’´’∂ ’°’∂’£’°’¥ ’§’∫÷Ä’∏÷Å ’∏÷Ç’≤’≤’°÷Ä’Ø’•’´’∂÷Ñ, ’•’∂ ’∏÷Ä ’¨’°÷Ä’æ’°’Æ ’ß’´’∂÷Ñ ’°÷Ä’§’µ’∏’≤ ’Ø’∞’°÷Ä’¥’°÷Ä’æ’´ ’©’• ’π’ß, ’´’∂÷Ñ’∂ ’ß’¨ ’•’Ø’°’æ ’≥’°’Ø’°’ø’´’∂ ’°’Ω’ø’≤ ’∂’Ø’°÷Ä’°’Æ ’°’Ω’•÷Å ’∏÷Ä ’¢’∏’¨’∏÷Ä’´÷Å ’°’¥’•’∂’°’¨’°’æ’® ’∂’° ’ß ’∫’°’ø’°’Ω’≠’°’∂’•’¨ ’∏÷Ç’Ω’∏÷Ç÷Å’π’´ ’ø’æ’°’Æ ’∞’°’∂’•’¨’∏÷Ç’Ø’∂’•÷Ä’´’∂, ’§’• ’´’∞’°÷Ä’Ø’• ’¨’°’æ ’Ø’∫’°’ø’°’Ω’≠’°’∂’•÷Ä’ù ’°’¥’•’∂ ’£’´’∑’•÷Ä ’∞’•÷Ñ’´’°’© ’∫’°’ø’¥’•’¨’∏÷Ç÷Å ’°’º’°’ª ’¥’´’°’Ω’´’∂ ’ø’°÷Ä’¢’•÷Ä ’ø÷Ä’°’¥’°’¢’°’∂’°’Ø’°’∂ ’≠’∂’§’´÷Ä’∂’•÷Ä’´ ’ß’´’∂÷Ñ ÷Ñ’∂’∂’°÷Ä’Ø’∏÷Ç’¥ ’∞’´’∑’∏÷Ç’û’¥ ’•’Ω, ’∏’∂÷Å ’Ø’°÷Ä’°’´÷Ä ’§’∏÷Ç ’°’µ’Ω ’°’¥’•’∂’® ’°’æ’´÷Ä’•’´÷Ä, ’´’∂’π’∫’•’Ω ’Ø’°÷Ä’∏’≤ ’ß’´÷Ä ’´’∂’± ’°’Ω’•’¨ ’∞’°’∑’æ’•’¥ 13’´ ’°÷Ä’¥’°’ø’®, ’°’≠÷Ä ’§’∏÷Ç ’£’´’ø’•’Ω ’∏÷Ä ’•’Ω ’ß’§ ’©’´’æ’® ’π’•’¥ ’Ω’´÷Ä’∏÷Ç’¥, ’æ’Ω’ø’°’∞ ’•’≤’´÷Ä ’§’°’ø’°÷Ä’°’∂’® ’´’¥ ÷Ö’£’ø’´’∂ ’Ø’Ø’°’µ’°÷Å’∂’´ ’∏÷Ä’∏’∑’∏÷Ç’¥’®, ’•÷Ä’•’≠’°’∂’•÷Ä’® ’Ø’¥’∂’°’∂ ’´’∂’± ’∞’•’ø, ’´’∞’°÷Ä’Ø’• ’§’°’ø’°÷Ä’°’∂’® ’´’¥ ’Ø’∏’≤÷Ñ’´’∂ ’Ø’¨’´’∂’´, ’∏’æ ’ß’¨ ’¨’Ω’´ ’©’• ’´’∂’π ’•’Ω ’§’∏÷Ç ’°÷Ä’•’¨ ’¥’´’°’∂’£’°’¥’´÷Å ’Ø’∫’°’∑’ø’∫’°’∂’´ ’´’∂’±, ’°’Ω’•’¨ ’∞’°’∑’æ’´ 13’´ ’°÷Ä’¥’°’ø’®, ’´’∂’π’∫’•’Ω ’Ø’°÷Ä’∏’≤ ’•’Ω ÷Ñ’∏ ’•÷Ä’•’≠’°’∂’•÷Ä’´ ’¥’∏÷Ä’® ’°’µ’§’∫’´’Ω’´ ’¢’°’∂ ’°’Ω’•’¨, ’°’µ’∂ ’¢’∏’¨’∏÷Ä ’≠’∏’Ω’ø’∏÷Ç’¥’∂’•÷Ä’´÷Å ’∞’•’ø’∏, ’£’°’¥’°’Ø ’ß’´’∂÷Ñ ’£’∂’•’¨, ’°’Ω’∏÷Ç’¥ ’ß’´÷Ä ’•’Ω ’°’æ’•’¨’´ ’∑’°’ø ’£’°’¥’°’Ø’´ ’¥’•’ª ’•’¥ ’Ω’´÷Ä’∏÷Ç’¥ ÷Ñ’∂’•’¨, ’°÷Ä’´ ’¥’•’∂÷Ñ ’∏’π ’©’• ’¥’´ ’¢’°÷Ä’±’´ ’Æ’•÷Ä’°’∂’°’∂÷Ñ ’°’µ’¨ ’∂’∏÷Ç’µ’∂ ’£’°’¥’°’Ø’´ ’¥’•’ª, ’´’Ω’Ø ’∞’´’¥’°’ù ’ø’•’Ω ’©’• ’´’∂’π’´ ’•’∂÷Ñ ’∞’°’Ω’•’¨, ’Ω’° ’£÷Ä’•’¨’∏÷Ç’∂ ’¶’∏÷Ç’£’°’∞’•’º ’≠’°÷Ä’∏÷Ç’µ’Ø’´ ’¥’•’ª ’•’¥ ÷Ñ÷Å’∏÷Ç’¥ ’¥’•÷Ä ’¢’∏’¨’∏÷Ä ’¥’´’°’Ω’∂’°’Ø’°’∂ ’∂’Ø’°÷Ä’∂’•÷Ä’® ÷á ’•’∂ ’∂’æ’•÷Ä’® ’∏÷Ä’∂ ’´’∂’± ’°÷Ä’•÷Å’´÷Ä ’¥’•÷Ä ’°’º’°’ª’´’∂ ’ø’°÷Ä’•’¨’´÷Å’´’∂, ’°’µ’∂ 365’ß’ª’°’∂’∏÷Å ’™’∏’≤’∏’æ’°’Æ’∏÷Ç’∂ ’¢’°’∂’°’Ω’ø’•’≤’Æ’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä’´ ’∏÷Ä’∏’∂÷Ñ ’£÷Ä’∏÷Ç’¥ ’ß’´÷Ä ’°’¥’•’∂ ’£’´’∑’•÷Ä ’¥’•÷Ä ’°’µ’§ ÷Ö÷Ä’æ’° ÷á ’¥’•÷Ä ’Ω’´÷Ä’∏ ’¥’°’Ω’´’∂, ’¨’°’æ, ’¥’´ ’ø’•’Ω’°’Ø ’•’©’• ’Ω’•’∂÷Å ’∑’°÷Ä’∏÷Ç’∂’°’Ø’•’¥ ’¥’∂’°÷Å’°’Æ ’∂’µ’∏÷Ç’©’® ÷Å’´’Ø’¨’•÷Ä’´ ’π’•’¥ ’∞’°’Ω÷Å’∂’´ ’¥’´’∂’π÷á ’§’°’Ω’®, ’•’Ω ’°’µ’Ω÷Ö÷Ä ’©’∏’≤’∂’∏÷Ç’¥ ’•’¥ ÷Ñ’•’¶ ’´’¥ ’Ω’•÷Ä’∂ ’∏÷Ç ’∞’•’º’°’∂’∏÷Ç’¥, ’´’¥ ’Ω÷Ä’ø’´’∂ ’°’µ’Ω÷Ö÷Ä ’¥’´ ’∂’∏÷Ä ’æ’•÷Ä÷Ñ ’ß ’°’æ’•’¨’°’∂’∏÷Ç’¥ ’à÷Ç ’´’¥ ’Ω’•÷Ä’® ’∫’∏’Ø’æ’°’Æ ’≥’µ’∏÷Ç’≤’´, ’∫’∏’Ø’æ’°’Æ ’≥’µ’∏÷Ç’≤’´, ’≥’µ’∏÷Ç’≤’´ ’∂’¥’°’∂, ÷Ö÷Ä’∏÷Ä’æ’∏÷Ç’¥ ’ß ’°’∑’∂’°’∂ ÷Ñ’°’¥’∏÷Ç÷Å, ’°’∑’∂’°’∂ ÷Ñ’°’¥’∏÷Ç÷Å, ’°’∑’∂’°’∂ ÷Ñ’°’¥’∏÷Ç÷Å, ’∞’°’ª’∏’≤’∏÷Ç’©’µ’∏÷Ç’∂ ’Ω÷Ä’´’Ø’°",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>04 Loops: For, While, Break, Continue, Else</span>"
    ]
  },
  {
    "objectID": "python/04_Loops_for_while.html#else",
    "href": "python/04_Loops_for_while.html#else",
    "title": "6¬† 04 Loops: For, While, Break, Continue, Else",
    "section": "8.5 else",
    "text": "8.5 else\n‘ª’∂’π’´ ’° ’°’∂’∏÷Ç’∂’® ’∞’•’∂÷Å else -&gt; https://www.youtube.com/watch?v=6Im38sF-sjo\n‘ª’∂’π÷Ñ’°’∂ ’ß’¨ ’≠’°’º’∂’∏’≤ ’∏÷Ç ’ø’°÷Ä÷Ö÷Ä’´’∂’°’Ø ’π’¨’´’∂’´ ’¢’°’µ÷Å for-’∂ ’ß’¨ else ’∏÷Ç’∂’´,\n’Ø’°÷Ä’∏’≤ ’•’∂÷Ñ ’∫’°’ø’Ø’•÷Ä’°÷Å’∂’•’¨ ’Ω’•’∂÷Å, for ’•’∂÷Ñ ÷Ü’º’∏÷Ç’¥ ’∏÷Ä ’´’∂’π-’∏÷Ä ’∫’°’µ’¥’°’∂ ’Ø’°’ø’°÷Ä’æ’´’ù ’£’ø’∂’•’∂÷Ñ ’∂’°’Ω’Ø’∏÷Ç ’©’°’µ’® ÷Ö÷Ä’´’∂’°’Ø ’∏÷Ç break ’°’∂’•’∂÷Ñ, ’§’∏÷Ç÷Ä’Ω ’£’°’∂÷Ñ for-’´÷Å\n’•’©’• ’§’∏÷Ç÷Ä’Ω ’π’•’∂÷Ñ ’£’°’¨’´’Ω’ù ’∫’°’µ’¥’°’∂’® ’ø’•’≤’´ ’π’´ ’∏÷Ç’∂’•’∂’∏÷Ç’¥ ’∏÷Ä’∏’æ ’∫’•’ø÷Ñ’° ’§’∏÷Ç÷Ä’Ω ’£’°’∂÷Ñ ’∂’°÷á ’°’∑’≠’°’ø’∏÷Ç’¥’° else’´ ’Ø’ø’∏÷Ä’® ’æ’•÷Ä’ª’∏÷Ç’¥\n\nirer = ['’£÷Ä’´’π', \"’∫’°’∂’´÷Ä\",\"’∂’°’Ω’Ø’∏÷Ç ’©’°’µ\", \"’∞’°÷Ä’©’∏÷Ç’Ø\", \"’¥’°’Ø’°÷Ä’∏’∂\", \"’£’´÷Ä÷Ñ\",  \"’°’ø’°’¥’´ ’≠’∏’¶’°’∂’°’Ø\", \"÷É’´’≤\"]\n\n\nfor i in irer:\n    print(f'’§’°÷Ä’°’Ø’´ ’¥’•’ª ’§÷Ä’æ’°’Æ ’ß÷Ä {i}', end=\"  .....   \")\n    if i == '’∂’°’Ω’Ø’∏÷Ç ’©’°’µ':\n        print('’∏÷Ç’º’°’°’°, ’£’ø’°')        \n        break\n    print('’∑’°’∂’∏÷Ç’∂’°’Ø’∏÷Ç’¥ ’•’∂÷Ñ ’¥’°’∂ ’£’°’¨')\nelse: # ’Ø’°’∑’≠’°’ø’´ ’•’©’• break ’π’´ ’•’≤’•’¨\n    print(\"’π’£’ø’°\")\n\n’§’°÷Ä’°’Ø’´ ’¥’•’ª ’§÷Ä’æ’°’Æ ’ß÷Ä ’£÷Ä’´’π  .....   ’∑’°’∂’∏÷Ç’∂’°’Ø’∏÷Ç’¥ ’•’∂÷Ñ ’¥’°’∂ ’£’°’¨\n’§’°÷Ä’°’Ø’´ ’¥’•’ª ’§÷Ä’æ’°’Æ ’ß÷Ä ’∫’°’∂’´÷Ä  .....   ’∑’°’∂’∏÷Ç’∂’°’Ø’∏÷Ç’¥ ’•’∂÷Ñ ’¥’°’∂ ’£’°’¨\n’§’°÷Ä’°’Ø’´ ’¥’•’ª ’§÷Ä’æ’°’Æ ’ß÷Ä ’∂’°’Ω’Ø’∏÷Ç ’©’°’µ  .....   ’∏÷Ç’º’°’°’°, ’£’ø’°\n’∑’°’∂’∏÷Ç’∂’°’Ø’∏÷Ç’¥ ’•’∂÷Ñ ’¥’°’∂ ’£’°’¨\n’§’°÷Ä’°’Ø’´ ’¥’•’ª ’§÷Ä’æ’°’Æ ’ß÷Ä ’∞’°÷Ä’©’∏÷Ç’Ø  .....   ’∑’°’∂’∏÷Ç’∂’°’Ø’∏÷Ç’¥ ’•’∂÷Ñ ’¥’°’∂ ’£’°’¨\n’§’°÷Ä’°’Ø’´ ’¥’•’ª ’§÷Ä’æ’°’Æ ’ß÷Ä ’¥’°’Ø’°÷Ä’∏’∂  .....   ’∑’°’∂’∏÷Ç’∂’°’Ø’∏÷Ç’¥ ’•’∂÷Ñ ’¥’°’∂ ’£’°’¨\n’§’°÷Ä’°’Ø’´ ’¥’•’ª ’§÷Ä’æ’°’Æ ’ß÷Ä ’£’´÷Ä÷Ñ  .....   ’∑’°’∂’∏÷Ç’∂’°’Ø’∏÷Ç’¥ ’•’∂÷Ñ ’¥’°’∂ ’£’°’¨\n’§’°÷Ä’°’Ø’´ ’¥’•’ª ’§÷Ä’æ’°’Æ ’ß÷Ä ’°’ø’°’¥’´ ’≠’∏’¶’°’∂’°’Ø  .....   ’∑’°’∂’∏÷Ç’∂’°’Ø’∏÷Ç’¥ ’•’∂÷Ñ ’¥’°’∂ ’£’°’¨\n’§’°÷Ä’°’Ø’´ ’¥’•’ª ’§÷Ä’æ’°’Æ ’ß÷Ä ÷É’´’≤  .....   ’∑’°’∂’∏÷Ç’∂’°’Ø’∏÷Ç’¥ ’•’∂÷Ñ ’¥’°’∂ ’£’°’¨\n’π’£’ø’°\n\n\n\n8.5.1 (’¶’∏÷Ç’µ’£ ’Ø’°) ‘±’º’°’ª’°’§÷Ä’°’∂÷Ñ 1\n÷Å’∏÷Ç÷Å’°’Ø ’° ’ø’æ’°’Æ ’©’æ’•÷Ä’´’ù ’•’©’• ’¢’∏’¨’∏÷Ä’® ’Ø’•’∂’ø ’•’∂ ’ø’∫’•’¨ ’¢’∏’¨’∏÷Ä’® ’Ø’•’∂’ø ’•’∂, ’•’©’• ’π’ß ’ø’∫’•’¨ ’∏÷Ä ’Ø’° ’¶’∏÷Ç’µ÷Å ’©’´’æ\n\n# ÷Å’∏÷Ç÷Å’°’Ø ’° ’ø’æ’°’Æ ’©’æ’•÷Ä’´’ù ’•’©’• ’¢’∏’¨’∏÷Ä’® ’Ø’•’∂’ø ’•’∂ ’ø’∫’•’¨ ’¢’∏’¨’∏÷Ä’® ’Ø’•’∂’ø ’•’∂, ’•’©’• ’π’ß ’ø’∫’•’¨ ’∏÷Ä ’Ø’° ’¶’∏÷Ç’µ÷Å ’©’´’æ\n\ntver = [1, 1, 3, 4, 2, 5, 4]\n\nfor i in tver:\n    if i % 2 == 0:\n        print(\"’¶’∏÷Ç’µ’£ ’©’´’æ ’Ø’°\")\n        break\nelse:\n    print(\"‘≤’∏’¨’∏÷Ä’® ’Ø’•’∂’ø ’•’∂\")\n\n# if tver[0] % 2 == 0 or tver[1] % 2 == :\n#     print(\"’¶’∏÷Ç’µ’£ ’©’´’æ ’Ø’°\")\n# else:\n#     print(\"‘≤’∏’¨’∏÷Ä’® ’Ø’•’∂’ø ’•’∂\")\n\n’¶’∏÷Ç’µ’£ ’©’´’æ ’Ø’°\n\n\n\n\n8.5.2 (’∫’°÷Ä’¶ ’©’´’æ) ‘±’º’°’ª’°’§÷Ä’°’∂÷Ñ 2\n’ä’°÷Ä’¶’•’¨ ’©’´’æ’® ’∫’°÷Ä’¶ ’° ’©’• ’π’ß\n\nn = int(input())\n\nfor i in range(2, n):\n    if n % i == 0:\n        print(\"’∫’°÷Ä’¶ ’π’´\")\n        break\nelse:\n    print(\"’∫’°÷Ä’¶\")\n\n’∫’°÷Ä’¶ ’π’´",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>04 Loops: For, While, Break, Continue, Else</span>"
    ]
  },
  {
    "objectID": "python/04_Loops_for_while.html#while",
    "href": "python/04_Loops_for_while.html#while",
    "title": "6¬† 04 Loops: For, While, Break, Continue, Else",
    "section": "8.6 While",
    "text": "8.6 While\n‘±’∑’≠’°’ø’°÷Å’∂’•’¨ ’Æ÷Ä’°’£’´÷Ä’® ÷Ñ’°’∂’´ ’§’•’º ’´’∂’π-’∏÷Ä ’∫’°’µ’¥’°’∂ ’π’´ ’¢’°’æ’°÷Ä’°÷Ä’æ’•’¨\nwhile’® ’∞’´’¥’∂’°’Ø’°’∂’∏÷Ç’¥ ÷Ö’£’ø’°’£’∏÷Ä’Æ’∏÷Ç’¥ ’•’∂÷Ñ ’•÷Ä’¢ ’π’£’´’ø’•’∂÷Ñ ’©’• ’´’∂’π÷Ñ’°’∂ ’∫’•’ø÷Ñ’° ’°’∑’≠’°’ø’´ ’¥’•÷Ä ’Ø’∏’§’®, ’π’Ø’° ’∂’•’∂÷Å ’¢’°’∂ ’∏÷Ä ’ß’Ω ÷Å’∏÷Ç÷Å’°’Ø’´ ’ß’¨’•’∂’•’ø’∂’•÷Ä’∏’æ ’°’∂÷Å’´ ’∞’•÷Ä’´÷Ñ ’°, ’∫’•’ø÷Ñ ’° ’•’∂÷Ñ’°’∂ ’°’∑’≠’°’ø’´ ’¥’´’∂’π÷á ’´’∂’π-’∏÷Ä ’∫’°’µ’¥’°’∂ ’¢’°’æ’°÷Ä’°÷Ä’æ’´, ’§÷Ä’°’∂’∏’æ ’´÷Ä’°’∂÷Ñ ’°’æ’•’¨’´ ’≥’Ø’∏÷Ç’∂ ’•’∂ for ’´÷Å ’¢’°’µ÷Å ’∂’°÷á ’°’æ’•’¨’´ ’æ’ø’°’∂’£’°’æ’∏÷Ä’ù ’°’∂’æ’•÷Ä’ª ÷Å’´’Ø’¨’´ ’¥’•’ª ’®’∂’Ø’∂’•’¨’∏÷Ç ’º’´’Ω’Ø’´ ’∫’°’ø’≥’°’º’∏’æ\n\nwhile ’∫’°’µ’¥’°’∂ (bool):\n    ’°÷Ä’° ’ß’Ω-’ß’Ω ’¢’°’∂’®\n    \n\n\nwhile True:\n    print('’∫’°’∂’´÷Ä')\n\n\n8.6.1 For-’∏’æ ’°÷Ä’æ’∏’≤ ’°’¥’•’∂’´’∂’π ’Ø’°÷Ä’° ’°÷Ä’æ’´ while-’∏’æ, ’¢’°’µ÷Å ’∞’°’Ø’°’º’°’Ø ’∫’∂’§’∏÷Ç’¥’® ’≥’´’∑’ø ’π’´÷â\n1 4 ’©’æ’•÷Ä’´ ’£’∏÷Ç’¥’°÷Ä’®\n\ngumar = 0\n\nfor i in range(1,5):\n    gumar += i\n\nprint(gumar)\n\n10\n\n\n\ni = 1\ngumar = 0\nwhile i &lt; 5:\n    gumar += i\n    print(f'’£’∏÷Ç’¥’°÷Ä’® ’¥’•’Æ’°÷Å÷Ä’•÷Å’´’∂÷Ñ {i}’∏’æ')\n\n    i = i + 1\n    print(f'i-’∂ ’§’°÷Ä’±÷Ä’•÷Å’´’∂÷Ñ {i}')\n    print()\n\nprint(gumar)\n\n’£’∏÷Ç’¥’°÷Ä’® ’¥’•’Æ’°÷Å÷Ä’•÷Å’´’∂÷Ñ 1’∏’æ\ni-’∂ ’§’°÷Ä’±÷Ä’•÷Å’´’∂÷Ñ 2\n\n’£’∏÷Ç’¥’°÷Ä’® ’¥’•’Æ’°÷Å÷Ä’•÷Å’´’∂÷Ñ 2’∏’æ\ni-’∂ ’§’°÷Ä’±÷Ä’•÷Å’´’∂÷Ñ 3\n\n’£’∏÷Ç’¥’°÷Ä’® ’¥’•’Æ’°÷Å÷Ä’•÷Å’´’∂÷Ñ 3’∏’æ\ni-’∂ ’§’°÷Ä’±÷Ä’•÷Å’´’∂÷Ñ 4\n\n’£’∏÷Ç’¥’°÷Ä’® ’¥’•’Æ’°÷Å÷Ä’•÷Å’´’∂÷Ñ 4’∏’æ\ni-’∂ ’§’°÷Ä’±÷Ä’•÷Å’´’∂÷Ñ 5\n\n10\n\n\n\n\n8.6.2 (’©’´’æ ’£’∏÷Ç’∑’°’Ø’•’¨) ‘±’º’°’ª’°’§÷Ä’°’∂÷Ñ 1\n’©’´’æ ’£’∏÷Ç’∑’°’Ø’•’¨’∏÷Ç ’≠’∂’§’´÷Ä: ’Ñ’•’∂÷Ñ ’©’´’æ ’•’∂÷Ñ ’¥’ø’°’∫’°’∞’•’¨, ’¥’°÷Ä’§’® ÷É’∏÷Ä’±’∏÷Ç’¥ ’° ’£’∏÷Ç’∑’°’Ø’´\n\nmtapahac = '509'\n\nwhile True:\n    gushakac = input()\n\n    if gushakac == mtapahac:\n        print(\"‘≥’∏÷Ç’∑’°’Ø’•÷Å’´÷Ä\")\n        break\n    else:\n        print(\"’Ü’∏÷Ä’´÷Å ÷É’∏÷Ä’±’´÷Ä\")\n\n\n’Ü’∏÷Ä’´÷Å ÷É’∏÷Ä’±’´÷Ä\n’Ü’∏÷Ä’´÷Å ÷É’∏÷Ä’±’´÷Ä\n‘≥’∏÷Ç’∑’°’Ø’•÷Å’´÷Ä\n\n\n\nmtapahac = 7\ngushakel = False\n\nwhile not gushakel:\n    gushakutun = int(input('’Ñ’∏÷Ç’ø÷Ñ ’£’∏÷Ä’Æ’•÷Ñ ’Å’•÷Ä ’£’∏÷Ç’∑’°’Ø’∏÷Ç’©’µ’∏÷Ç’∂’®\\n'))\n    print(gushakutun)\n\n    if gushakutun == mtapahac:\n        print('’∞’°’≤’©’•÷Å’´÷Ä')\n        gushakel = True\n    else:\n        print(f'’∞’®’®’∂, ’´’¥ ’¥’ø’°’∫’°’∞’°’Æ ’©’´’æ’® {gushakutun} ’π’ß÷Ä\\n')\n\n6\n6\n\n\n\n\n8.6.3 break\n’¨÷Ä’´’æ ’∂’∏÷Ç’µ’∂ ’∫’°’ø’¥’∏÷Ç’©’µ’∏÷Ç’∂’∂ ’° ’´’∂’π for-’´ ’§’•’∫÷Ñ’∏÷Ç’¥÷â break, continue, else-’® ÷Å’´’Ø’¨’•÷Ä’´ ’£’°’≤’°÷É’°÷Ä’∂’•÷Ä’∂ ’•’∂, ’∏’π ’©’• ’∞’•’∂÷Å for-’´\n\n\n8.6.4 (’©’´’æ ’£’∏÷Ç’∑’°’Ø’•’¨, ÷É’∏÷Ä’±’•÷Ä) ‘±’º’°’ª’°’§÷Ä’°’∂÷Ñ 2\n’∂’∏÷Ç’µ’∂ ’£’∏÷Ç’∑’°’Ø’•’¨’∏÷Ç ’≠’∂’§’´÷Ä’® ’∏÷Ç’≤’≤’°’Ø’´ ’Ω’ø’•’≤ 3 ÷É’∏÷Ä’± ’∏÷Ç’∂’•’∂÷Ñ\n\nmtapahac = 7\ngushakel = False\npordzeri_qanak = 3\n\nwhile not gushakel:\n    if pordzeri_qanak == 0:\n        print(\"’ì’∏÷Ä’±’•÷Ä’® ’æ’•÷Ä’ª’°÷Å’°’∂\")\n        break\n\n    gushakutun = int(input('’Ñ’∏÷Ç’ø÷Ñ ’£’∏÷Ä’Æ’•÷Ñ ’Å’•÷Ä ’£’∏÷Ç’∑’°’Ø’∏÷Ç’©’µ’∏÷Ç’∂’®\\n'))\n    print(gushakutun)\n\n    if gushakutun == mtapahac:\n        print('’∞’°’≤’©’•÷Å’´÷Ä')\n        gushakel = True\n    else:\n        print(f'’∞’®’®’∂, ’´’¥ ’¥’ø’°’∫’°’∞’°’Æ ’©’´’æ’® {gushakutun} ’π’ß÷Ä\\n')\n\n    pordzeri_qanak -= 1\n\n\n\n’Ñ’∏÷Ç’ø÷Ñ ’£’∏÷Ä’Æ’•÷Ñ ’Å’•÷Ä ’£’∏÷Ç’∑’°’Ø’∏÷Ç’©’µ’∏÷Ç’∂’®\n7\n7\n’∞’°’≤’©’•÷Å’´÷Ä\n\n\n\n\n\nwhile meme.jpg",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>04 Loops: For, While, Break, Continue, Else</span>"
    ]
  },
  {
    "objectID": "python/04_Loops_for_while.html#while-else",
    "href": "python/04_Loops_for_while.html#while-else",
    "title": "6¬† 04 Loops: For, While, Break, Continue, Else",
    "section": "8.7 while else",
    "text": "8.7 while else\n\n8.7.1 (’©’æ’•÷Ä’® ’Ø’•’∂’ø) ‘±’º’°’ª’°’§÷Ä’°’∂÷Ñ 1\n’ä’°÷Ä’¶’•’¨ ’¥’∏÷Ç’ø÷Ñ’∏÷Ç’¥ ’ø÷Ä’æ’°’Æ ’¢’∏’¨’∏÷Ä ’©’æ’•÷Ä’® ’Ø’•’∂’ø ’•’∂ ’©’• ’¶’∏÷Ç’µ’£ ’©’´’æ ’ß’¨ ’Ø’°\n\nder_ashxatum_enq = True\n\nwhile der_ashxatum_enq:\n    mutq = input()\n    if mutq == \"x\":\n        der_ashxatum_enq = False\n    else:\n        mutq = int(mutq)\n\n        if mutq % 2 == 0:\n            print(\"’¶’∏÷Ç’µ’£ ’©’´’æ ’Ø’°\")\n            break\nelse:\n    print(\"‘≤’∏’¨’∏÷Ä’® ’Ø’•’∂’ø ’•’∂\")",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>04 Loops: For, While, Break, Continue, Else</span>"
    ]
  },
  {
    "objectID": "python/04_Loops_for_while.html#’∞’´’¥’∂’°’Ø’°’∂-’ø’∂’°’µ’´’∂",
    "href": "python/04_Loops_for_while.html#’∞’´’¥’∂’°’Ø’°’∂-’ø’∂’°’µ’´’∂",
    "title": "6¬† 04 Loops: For, While, Break, Continue, Else",
    "section": "9.1 ’Ä’´’¥’∂’°’Ø’°’∂ ’ø’∂’°’µ’´’∂",
    "text": "9.1 ’Ä’´’¥’∂’°’Ø’°’∂ ’ø’∂’°’µ’´’∂\n\nProfound ’¢’°’™’´’∂ 15 (for ÷Å’´’Ø’¨’•÷Ä) - ’¨÷Ä’´’æ\nProfound ’¢’°’™’´’∂ 17 (while ÷Å’´’Ø’¨’•÷Ä) - ’¨÷Ä’´’æ\nProfound ’¢’°’™’´’∂ 18 (break, continue, while/for else) - ’¨÷Ä’´’æ",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>04 Loops: For, While, Break, Continue, Else</span>"
    ]
  },
  {
    "objectID": "python/04_Loops_for_while.html#’∂’∑’∏÷Ç’¥’∂’•÷Ä",
    "href": "python/04_Loops_for_while.html#’∂’∑’∏÷Ç’¥’∂’•÷Ä",
    "title": "6¬† 04 Loops: For, While, Break, Continue, Else",
    "section": "9.2 ’Ü’∑’∏÷Ç’¥’∂’•÷Ä",
    "text": "9.2 ’Ü’∑’∏÷Ç’¥’∂’•÷Ä\n\n’á’∏÷Ç’ø ’•’¥ ’°’Ω’•’¨ ’¢’°’™’´’∂ 18-’∏÷Ç’¥ break, continue ÷Ö’£’ø’°’£’∏÷Ä’Æ’•’¨ ’π’Ø’°\n18.13-’® (’∞’°’∫’°’¨’°’Ω’´ ’°’µ’£’´) ’Ø’°÷Ä’∏’≤ ’° ’∑’°’ø ’¢’°÷Ä’§ ’¨’´’∂’´, ’•’©’• ’¢’°÷Å ’©’∏’≤’∂’•÷Ñ’ù ÷Ö÷Ñ’•’µ ’°",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>04 Loops: For, While, Break, Continue, Else</span>"
    ]
  },
  {
    "objectID": "python/04_Loops_for_while.html#’¨’∏÷Ç’Æ’∏÷Ç’¥’∂’•÷Ä",
    "href": "python/04_Loops_for_while.html#’¨’∏÷Ç’Æ’∏÷Ç’¥’∂’•÷Ä",
    "title": "6¬† 04 Loops: For, While, Break, Continue, Else",
    "section": "9.3 ‘º’∏÷Ç’Æ’∏÷Ç’¥’∂’•÷Ä",
    "text": "9.3 ‘º’∏÷Ç’Æ’∏÷Ç’¥’∂’•÷Ä\n\n’à÷Ä’∏’∑ ’≠’∂’§’´÷Ä’∂’•÷Ä’´ ’æ’´’§’•’∏’¨’∏÷Ç’Æ’∏÷Ç’¥’∂’•÷Ä (ToDo)\n‘≤’∏’¨’∏÷Ä ’≠’∂’§’´÷Ä’∂’•÷Ä’´ ’¨’∏÷Ç’Æ’∏÷Ç’¥’∂’•÷Ä / ’∂’∑’∏÷Ç’¥’∂’•÷Ä (ToDo)",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>04 Loops: For, While, Break, Continue, Else</span>"
    ]
  },
  {
    "objectID": "python/04_Loops_for_while.html#hangman-game",
    "href": "python/04_Loops_for_while.html#hangman-game",
    "title": "6¬† 04 Loops: For, While, Break, Continue, Else",
    "section": "10.1 Hangman game",
    "text": "10.1 Hangman game\nhttps://hangmanwordgame.com\n\nimport random\n\nmax_wrong_attempts = 2\ncount_mistakes = 0\n\nwords = [\"chesse\", \"bottle\", \"earphone\"]\nword = random.choice(words)\n\nprint(word)\n\npredicted = len(word)*[\"_\"]\n\nwhile count_mistakes &lt; max_wrong_attempts:\n    print(f\"{predicted} | Mistake attempts = {max_wrong_attempts - count_mistakes}\")\n    letter = input(\"Please input the letter\")\n    \n    if letter == \"quit\":\n        break\n    \n    if letter not in word:\n        count_mistakes += 1\n        continue\n    \n    for i in range(len(word)):\n        if word[i] == letter:\n            predicted[i] = letter\n\n    # winning case\n    if not (\"_\" in predicted): \n        print(\"You Won!!!\")\n        break\n\nearphone\n['_', '_', '_', '_', '_', '_', '_', '_'] | Mistake attempts = 2\n['e', '_', '_', '_', '_', '_', '_', 'e'] | Mistake attempts = 2\n['e', 'a', '_', '_', '_', '_', '_', 'e'] | Mistake attempts = 2\n['e', 'a', 'r', '_', '_', '_', '_', 'e'] | Mistake attempts = 2\n['e', 'a', 'r', 'p', '_', '_', '_', 'e'] | Mistake attempts = 2\n['e', 'a', 'r', 'p', 'h', '_', '_', 'e'] | Mistake attempts = 2\n['e', 'a', 'r', 'p', 'h', 'o', '_', 'e'] | Mistake attempts = 2\nYou Won!!!",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>04 Loops: For, While, Break, Continue, Else</span>"
    ]
  },
  {
    "objectID": "python/04_Loops_for_while.html#bubble-sort",
    "href": "python/04_Loops_for_while.html#bubble-sort",
    "title": "6¬† 04 Loops: For, While, Break, Continue, Else",
    "section": "10.2 Bubble sort",
    "text": "10.2 Bubble sort\nhttps://realpython.com/sorting-algorithms-python/\nhttps://en.wikipedia.org/wiki/Bubble_sort\n\nnums = [1, 100, 3, -123, 4, 509, 7]\n\nnum_len = len(nums)\n\nnum_operators = 0\n\nfor iter_num in range(num_len):\n    swap = False\n    for i in range(num_len - 1 - iter_num):\n        # print(f\"{nums[i]}, {nums[i+1]}\")\n        num_operators += 1\n\n        if nums[i] &gt; nums[i+1]:\n            swap = True\n            # print(\"swapping\")\n            nums[i], nums[i+1] = nums[i+1], nums[i]\n    \n    if not swap:\n        print(\"Done\")\n        break\n    print(nums)\n        # print()\nprint(num_operators)\n\n[1, 3, -123, 4, 100, 7, 509]\n[1, -123, 3, 4, 7, 100, 509]\n[-123, 1, 3, 4, 7, 100, 509]\nDone\n18",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>04 Loops: For, While, Break, Continue, Else</span>"
    ]
  },
  {
    "objectID": "python/04_Loops_for_while.html#tic-tac-toe-game",
    "href": "python/04_Loops_for_while.html#tic-tac-toe-game",
    "title": "6¬† 04 Loops: For, While, Break, Continue, Else",
    "section": "10.3 Tic-tac-toe game",
    "text": "10.3 Tic-tac-toe game",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>04 Loops: For, While, Break, Continue, Else</span>"
    ]
  },
  {
    "objectID": "python/04_Loops_for_while.html#rock-paper-scissors-game",
    "href": "python/04_Loops_for_while.html#rock-paper-scissors-game",
    "title": "6¬† 04 Loops: For, While, Break, Continue, Else",
    "section": "10.4 Rock, paper, scissors game",
    "text": "10.4 Rock, paper, scissors game\n\nimport random\n\ntarget = 2\n\ntarberakner = [\"q\", \"t\", \"m\"]\n\ncount_mard = 0\ncount_comp = 0\n\n# while (count_mard != target) and (count_comp != target):\nwhile True:\n    mard = input(\"’Ñ’∏÷Ç’∂÷Ñ’°’£÷Ä’•÷Ñ ’±’•÷Ä ’ø’°÷Ä’¢’•÷Ä’°’Ø’® (q/t/m)\")\n    \n    if not (mard in tarberakner):\n        print(f\"Wrong input, you inputted {mard}\")\n        continue\n\n    # compi input +   \n    comp = random.choice(tarberakner)\n    print(f\"{comp = }\")\n    \n    # stugel ov a krel\n    if comp == mard:\n        print(\"’∏’π ’∏÷Ñ’´\")\n    elif (comp == \"q\" and mard == \"t\") or \\\n         (comp == \"t\" and mard == \"m\") or \\\n         (comp == \"m\" and mard == \"q\"):\n        print(\"’Ñ’°÷Ä’§’® ’∞’°’≤’©’•÷Å\")\n        count_mard += 1\n    else:\n        print(\"‘ø’∏’¥’∫’® ’∞’°’≤’©’•÷Å\")\n        count_comp += 1\n    \n    # hashuvy tpel\n    print(f\"’Ñ’°÷Ä’§ {count_mard} - {count_comp} ‘ø’∏’¥’∫\")    \n        \n    if count_comp == target:\n        print(\"’á’∂’∏÷Ä’∞’°’æ’∏÷Ä ’Ø’∏’¥’∫\")\n        break\n    elif count_mard == target:\n        print(\"’á’∂’∏÷Ä’∞’°’æ’∏÷Ä ’¥’°÷Ä’§\")\n        break\n\ncomp = 't'\n‘ø’∏’¥’∫’® ’∞’°’≤’©’•÷Å\n’Ñ’°÷Ä’§ 0 - 1 ‘ø’∏’¥’∫\ncomp = 'm'\n’Ñ’°÷Ä’§’® ’∞’°’≤’©’•÷Å\n’Ñ’°÷Ä’§ 1 - 1 ‘ø’∏’¥’∫\ncomp = 'm'\n’Ñ’°÷Ä’§’® ’∞’°’≤’©’•÷Å\n’Ñ’°÷Ä’§ 2 - 1 ‘ø’∏’¥’∫\n’á’∂’∏÷Ä’∞’°’æ’∏÷Ä ’¥’°÷Ä’§",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>04 Loops: For, While, Break, Continue, Else</span>"
    ]
  },
  {
    "objectID": "python/04_Loops_for_while.html#bulls-and-cows-game",
    "href": "python/04_Loops_for_while.html#bulls-and-cows-game",
    "title": "6¬† 04 Loops: For, While, Break, Continue, Else",
    "section": "10.5 Bulls and cows game",
    "text": "10.5 Bulls and cows game\n\n# 1. generate random num\n# 2. take input\n# 2.5 input validation\n# 3. count bulls \n# 4. count cows \n# 5. check win\n\n    \nimport random \n\n# Todo - no duplicates\ntiv = random.randint(1000, 9999)\n\ncount_attempt = 0\n\nwhile True:\n    # 2\n    guess = input(\"’Ü’•÷Ä’¥’∏÷Ç’Æ’•÷Ñ ’©’´’æ’®÷â \")\n    \n    if guess == \"q\":\n        break\n\n    # 2.5\n    # ToDo validation\n    count_attempt += 1\n    \n    \n    # 3 \n    count_bulls = 0\n    count_cows = 0\n    for i in range(len(guess)):\n        if tiv[i] == guess[i]:\n            count_bulls += 1\n        if guess[i] in tiv:\n            count_cows += 1\n        \n    if guess == tiv:\n        print(f\"Win | Attempts = {count_attempt}\")\n        break            \n    print(f\"Bulls - {count_bulls} | Cows - {count_cows} | Guess - {guess}\")\n\n\ntiv = []\n\n\n\ntiv\n\n[]\n\n\n\nimport random\n\n# ToDo - check no duplicates\ntvanshaner = list(range(10))\nprint(tvanshaner)\n\ntiv = []\nfor i in range(4):\n    if i == 0:\n        index = random.randint(1, 9-i)\n    else:\n        index = random.randint(0,9-i)\n\n    nish = tvanshaner[index]\n    \n    tiv.append(nish)\n    del tvanshaner[index]\n    \n    \nprint(f\"{tiv = }\")\n\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\ntiv = [1, 6, 8, 7]",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>04 Loops: For, While, Break, Continue, Else</span>"
    ]
  },
  {
    "objectID": "python/05_Lst_str_methods_one_line_if_for.html",
    "href": "python/05_Lst_str_methods_one_line_if_for.html",
    "title": "7¬† 05 List/String Methods; Ternary Operators; List Comprehensions",
    "section": "",
    "text": "8 üé¶ ’è’•’Ω’°’§’°’Ω’•÷Ä + ’¨÷Ä’°÷Å’∏÷Ç÷Å’´’π\n‘±÷Ä’°’£’°’Æ’∏’ø’∂, ’¨’∏÷Ç’Ω’°’∂’Ø’°÷Ä’´ ’∞’≤’∏÷Ç’¥’®, ’Ä’•’≤’´’∂’°’Ø’ù Ani Adigyozalyan\n(ToDo)\nYou real me out when you string.cut()\n(c) Radiohead\n’Ü’∑’∏÷Ç’¥’∂’•÷Ä÷â ’ç’ø’•’≤ ’Ø’°÷Ä’∏’≤ ’•÷Ñ ’£÷Ä’•’¨ ’©’• profound-’´÷Å ’∏÷Ä ’≠’∂’§’´÷Ä’∂’•÷Ä’´ ’∞’°’¥’°÷Ä ’Ø’∏÷Ç’¶’•÷Ñ ’ø’•’Ω’∂’•’¨ ’æ’´’§’•’∏ ’¨’∏÷Ç’Æ’∏÷Ç’¥’∂’•÷Ä, ’Ø’°’¥ ’Ø’∏÷Ç’¶’•’´÷Ñ ’¥’•’∂÷Ñ ÷Ñ’∂’∂’°÷Ä’Ø’•’∂÷Ñ",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>7</span>¬† <span class='chapter-title'>05 List/String Methods; Ternary Operators; List Comprehensions</span>"
    ]
  },
  {
    "objectID": "python/05_Lst_str_methods_one_line_if_for.html#string-methods-’¨’´÷Ñ’®-’∏÷Ç÷Ä’´’∑-’¥’•’©’∏’§’∂’•÷Ä",
    "href": "python/05_Lst_str_methods_one_line_if_for.html#string-methods-’¨’´÷Ñ’®-’∏÷Ç÷Ä’´’∑-’¥’•’©’∏’§’∂’•÷Ä",
    "title": "7¬† 05 List/String Methods; Ternary Operators; List Comprehensions",
    "section": "9.1 String methods ’¨’´÷Ñ’® ’∏÷Ç÷Ä’´’∑ ’¥’•’©’∏’§’∂’•÷Ä",
    "text": "9.1 String methods ’¨’´÷Ñ’® ’∏÷Ç÷Ä’´’∑ ’¥’•’©’∏’§’∂’•÷Ä\n\n9.1.1 ’¥’•’Æ’°’ø’°’º / ÷É’∏÷Ñ÷Ä’°’ø’°’º\n\nanun = \"JoHn\"\nazganun = 'smith'\nmard = 'john smith'\n\n\nprint(anun)\nprint(anun.lower())\n\nJoHn\njohn\n\n\n\nprint(anun)\nprint(anun.upper()) # uppercase\n\nJoHn\nJOHN\n\n\n\nprint(mard)\nprint(mard.title())\n\njohn smith\nJohn Smith\n\n\n\nprint(mard)\nprint(mard.capitalize())\n\njohn smith\nJohn smith\n\n\n\nprint(anun)\nprint(anun.swapcase())\n\nJoHn\njOhN\n\n\n\n\n9.1.2 ’Ω’Ø’´’¶’¢/’æ’•÷Ä’ª’® ’Ω’ø’∏÷Ç’£’•’¨\n\na = 'panir.com'\nb = 'panir hamov'\n\n\nprint(a.startswith('panir')) # a[:5] == \"panir\"\n\n\n# ’∞’•’º’°÷Å’∂’•’¨\nprint(a.removeprefix('panir'))\n# ÷É’∏’≠’∏÷Ç’¥’°’û ’©’• ’π’ß\nprint(a)\n\n# a = a.removeprefix('panir')\n# print(a)\n\nTrue\n.com\npanir.com\n.com\n\n\n\nprint(a.endswith('.com'))\nprint(b.endswith('.com'))\n\n# ’∞’•’º’°÷Å’∂’•’¨\nprint(a.removesuffix('.com'))\n\nTrue\nFalse\npanir\n\n\n\nprint(a.startswith((\"www\", \"panir\", \"http\")))\n\n# ()-’∂ tuple ’Ω’ø’•’≤’Æ’•’¨’∏÷Ç ’∞’°’¥’°÷Ä ’°, ’§’° ’∞’°’ª’∏÷Ä’§\n# ’§’°’Ω’´’∂ ’•’∂÷Ñ ’°’∂÷Å’∂’•’¨’∏÷Ç\n\nTrue\n\n\n\n\n9.1.3 ’Ω’ø’∏÷Ç’£’•’¨ ’´’∂’π’•÷Ä’´÷Å ’° ’¢’°’≤’Ø’°÷Å’°’Æ\n\ntar_tiv = 'asdasdvAFASD122313'\nxary = 'mynhtgfe12312$%$%@asda'\ntarer = 'rfedsaasd'\ntver = '12350911509'\n\n\nprint(tar_tiv.isalnum()) # alphabetic, numeric\nprint(xary.isalnum())\n\nTrue\nFalse\n\n\n\nprint(tarer.isalpha())\nprint(tver.isalpha())\n\nTrue\nFalse\n\n\n\nprint(tver.isdigit())\nprint(tarer.isdigit())\n\nTrue\nFalse\n\n\n\n\n9.1.4 ’ø’•÷Ñ’Ω’ø’´÷Å ÷Å’∏÷Ç÷Å’°’Ø, ÷á ’∞’°’Ø’°’º’°’Ø’®\n\na = '’à’≤’ª’∏÷Ç’µ’∂ ’¢’∏’¨’∏÷Ä’´’∂, ’¢’°÷Ä÷á’∂’•÷Ä, ’∫÷Ä’´’æ’•’•’•’•’ø'\n\n\nlist(a)\n\n\na.split()\n\n['’à’≤’ª’∏÷Ç’µ’∂', '’¢’∏’¨’∏÷Ä’´’∂,', '’¢’°÷Ä÷á’∂’•÷Ä,', '’∫÷Ä’´’æ’•’•’•’•’ø']\n\n\n\na.split(', ')\n\n['’à’≤’ª’∏÷Ç’µ’∂ ’¢’∏’¨’∏÷Ä’´’∂', '’¢’°÷Ä÷á’∂’•÷Ä', '’∫÷Ä’´’æ’•’•’•’•’ø']\n\n\n\na = \"11 2 3     5     asd \\\n4 \\\n5\"\n\na.split()\n\n['11', '2', '3', '5', 'asd', '4', '5']\n\n\n’Ä’´’¥’° ’∞’°’Ø’°’º’°’Ø’®\n\nbarer = ['’à’≤’ª’∏÷Ç’µ’∂ ’¢’∏’¨’∏÷Ä’´’∂', '’¢’°÷Ä÷á’∂’•÷Ä', '’∫÷Ä’´’æ’•’•’•’•’ø']\n\n\nstr(barer)\n\n\"['’à’≤’ª’∏÷Ç’µ’∂ ’¢’∏’¨’∏÷Ä’´’∂', '’¢’°÷Ä÷á’∂’•÷Ä', '’∫÷Ä’´’æ’•’•’•’•’ø']\"\n\n\n\nprint(\" \".join(barer))\nprint('’à’≤’ª’∏÷Ç’µ’∂ ’¢’∏’¨’∏÷Ä’´’∂', '’¢’°÷Ä÷á’∂’•÷Ä', '’∫÷Ä’´’æ’•’•’•’•’ø', sep=\" \")\n\n’à’≤’ª’∏÷Ç’µ’∂ ’¢’∏’¨’∏÷Ä’´’∂ ’¢’°÷Ä÷á’∂’•÷Ä ’∫÷Ä’´’æ’•’•’•’•’ø\n’à’≤’ª’∏÷Ç’µ’∂ ’¢’∏’¨’∏÷Ä’´’∂ ’¢’°÷Ä÷á’∂’•÷Ä ’∫÷Ä’´’æ’•’•’•’•’ø\n\n\n\n\", \".join(barer)\n\n'’à’≤’ª’∏÷Ç’µ’∂ ’¢’∏’¨’∏÷Ä’´’∂, ’¢’°÷Ä÷á’∂’•÷Ä, ’∫÷Ä’´’æ’•’•’•’•’ø'\n\n\n\n\"&&&\".join(barer)\n\n'’à’≤’ª’∏÷Ç’µ’∂ ’¢’∏’¨’∏÷Ä’´’∂&&&’¢’°÷Ä÷á’∂’•÷Ä&&&’∫÷Ä’´’æ’•’•’•’•’ø'\n\n\n\n\n9.1.5 ’∞’°’∑’æ’•’¨, ’£’ø’∂’•’¨, ÷É’∏’≠’•’¨\n\ns = 'abc bc a a aaa'\n\n\nprint(s.count('a'))\nprint(s.count('bc'))\n\n6\n2\n\n\n\nprint(s.find('bc')) # ’°’º’°’ª’´’∂ ’∞’°’∂’§’´’∫’°’Æ’∂ ’° ’æ’•÷Ä’°’§’°÷Ä’±’∂’∏÷Ç’¥\nprint(s.index('bc'))\n\n1\n1\n\n\n\nprint(s.find('d'))\n\n-1\n\n\n\nprint(s.index('d'))\n\n\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\nInput In [32], in &lt;cell line: 1&gt;()\n----&gt; 1 print(s.index('d'))\n\nValueError: substring not found\n\n\n\nReplace\n\ns = '’¢’°’º÷á, ’•’º’¢ ’•’Ω ’£’°’¨’∏÷Ç, ’∏÷Ç’û’º ’•’Ω'\n\n\ns.replace('’º', '÷Ä')\n\n'’¢’°÷Ä÷á, ’•÷Ä’¢ ’•’Ω ’£’°’¨’∏÷Ç, ’∏÷Ç’û÷Ä ’•’Ω'\n\n\n\nprint(s)\n\ns = s.replace('’º', '÷Ä')\n\nprint(s)\n\n’¢’°’º÷á, ’•’º’¢ ’•’Ω ’£’°’¨’∏÷Ç, ’∏÷Ç’û’º ’•’Ω\n’¢’°÷Ä÷á, ’•÷Ä’¢ ’•’Ω ’£’°’¨’∏÷Ç, ’∏÷Ç’û÷Ä ’•’Ω\n\n\n\n\n9.1.6 ’¢’°÷Å’°’ø’°’¶’•÷Ä’Æ’•’¨\n\ns = '         ’°’Ω’§’°’Ω’§’°’§÷Ç’®’µ’®’ø’º’ø’•’º÷Ü ’ø’£’ø’º,,, ’•,         ’§’£÷Ü’°’°’°   '\n\nprint(s.strip())\n\ns = '--------         ’°’Ω’§’°’Ω’§’°’§÷Ç’®’µ’®’ø’º’ø’•’º÷Ü ’ø’£’ø’º,,, ’•,         ’§’£÷Ü   ---'\n\nprint(s.strip(\"-\"))\n\n’°’Ω’§’°’Ω’§’°’§÷Ç’®’µ’®’ø’º’ø’•’º÷Ü ’ø’£’ø’º,,, ’•,         ’§’£÷Ü’°’°’°\n         ’°’Ω’§’°’Ω’§’°’§÷Ç’®’µ’®’ø’º’ø’•’º÷Ü ’ø’£’ø’º,,, ’•,         ’§’£÷Ü’°’°’°   \n\n\n\ns = '         ’°’Ω’§’°’Ω’§’°’§÷Ç’®’µ’®’ø’º’ø’•’º÷Ü ’ø’£’ø’º,,, ’•,         ’§’£÷Ü’°’°’°   '\n\nprint(s.lstrip()) # left strip\nprint(s.rstrip())\n\n’°’Ω’§’°’Ω’§’°’§÷Ç’®’µ’®’ø’º’ø’•’º÷Ü ’ø’£’ø’º,,, ’•,         ’§’£÷Ü’°’°’°   \n         ’°’Ω’§’°’Ω’§’°’§÷Ç’®’µ’®’ø’º’ø’•’º÷Ü ’ø’£’ø’º,,, ’•,         ’§’£÷Ü’°’°’°\n\n\n\nmaqrac_s = \"\"\nfor i in s:\n    if i != \"’°\":\n        maqrac_s += i\nprint(maqrac_s)\n\n         ’Ω’§’Ω’§’§÷Ç’®’µ’®’ø’º’ø’•’º÷Ü ’ø’£’ø’º,,, ’•,         ’§’£÷Ü",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>7</span>¬† <span class='chapter-title'>05 List/String Methods; Ternary Operators; List Comprehensions</span>"
    ]
  },
  {
    "objectID": "python/05_Lst_str_methods_one_line_if_for.html#list-methods",
    "href": "python/05_Lst_str_methods_one_line_if_for.html#list-methods",
    "title": "7¬† 05 List/String Methods; Ternary Operators; List Comprehensions",
    "section": "9.2 List methods",
    "text": "9.2 List methods\n\n9.2.1 ’¥’´’°’æ’∏÷Ä’∏÷Ç’¥\n\nmrger_1 = ['’≠’∂’±’∏÷Ä', '’¢’°’∂’°’∂']\n\nmrger_1.append(\"sjadad\")\n\nprint(mrger_1)\n\nmrger_1.append(1,2,3)\n\n['’≠’∂’±’∏÷Ä', '’¢’°’∂’°’∂', 'sjadad']\n\n\n\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\nInput In [44], in &lt;cell line: 7&gt;()\n      3 mrger_1.append(\"sjadad\")\n      5 print(mrger_1)\n----&gt; 7 mrger_1.append(1,2,3)\n\nTypeError: list.append() takes exactly one argument (3 given)\n\n\n\n\nmrger_1 = ['’≠’∂’±’∏÷Ä', '’¢’°’∂’°’∂']\nmrger_2 = ['’Ω’´’¥’´÷Ä’•’∂’Ø’∏', '’£’∏’¨’§’•’∂', '’∞’°’¥’∏’æ ’¢’°’∂’°’∂']\n\nmrger_1.extend(mrger_2)\nprint(mrger_1)\nbolor_mrger = mrger_1 + mrger_2\n\nprint(mrger_1)\nprint(bolor_mrger)\n\n['’≠’∂’±’∏÷Ä', '’¢’°’∂’°’∂', '’Ω’´’¥’´÷Ä’•’∂’Ø’∏', '’£’∏’¨’§’•’∂', '’∞’°’¥’∏’æ ’¢’°’∂’°’∂']\n['’≠’∂’±’∏÷Ä', '’¢’°’∂’°’∂', '’Ω’´’¥’´÷Ä’•’∂’Ø’∏', '’£’∏’¨’§’•’∂', '’∞’°’¥’∏’æ ’¢’°’∂’°’∂']\n['’≠’∂’±’∏÷Ä', '’¢’°’∂’°’∂', '’Ω’´’¥’´÷Ä’•’∂’Ø’∏', '’£’∏’¨’§’•’∂', '’∞’°’¥’∏’æ ’¢’°’∂’°’∂', '’Ω’´’¥’´÷Ä’•’∂’Ø’∏', '’£’∏’¨’§’•’∂', '’∞’°’¥’∏’æ ’¢’°’∂’°’∂']\n\n\n\n\n9.2.2 ’ª’∂’ª’•’¨\n\nmrger = ['’Ω’´’¥’´÷Ä’•’∂’Ø’∏', '’£’∏’¨’§’•’∂', '’∞’°’¥’∏’æ ’¢’°’∂’°’∂']\n\nmrger.clear()\n\nprint(mrger)\n\n[]\n\n\n\n\n9.2.3 ’Ω’∏÷Ä’ø’°’æ’∏÷Ä’•’¨\n\n# ’æ’•÷Ä’ª’°’∫’•’Ω\na = [1, 2, 23, 2, 3, 0, -3, 4, -6]\n\na.sort()\n\nprint(a)\n\n# a.sort(reverse=True)\n\n[-6, -3, 0, 1, 2, 2, 3, 4, 23]\n[1, 2, 23, 2, 3, 0, -3, 4, -6]\n\n\n\n# ’æ’•÷Ä’ª’°’∫’•’Ω\na = ['’°’µ’¢', \"’£’´’¥\", \"’¢’•’∂\"] \n\na.sort()\n\nprint(a)\n\n['’°’µ’¢', '’¢’•’∂', '’£’´’¥']\n\n\nASCII table\n\n\n9.2.4 ’∑÷Ä’ª’•’¨\n\na = [1,2,3]\na.reverse()\nprint(a)\n\n[3, 2, 1]\n\n\n\nprint(\"’¢’°÷Ä÷á\".reverse())\nprint(\"’¢’°÷Ä÷á\"[::-1])\n\n\n---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\nInput In [59], in &lt;cell line: 1&gt;()\n----&gt; 1 print(\"’¢’°÷Ä÷á\".reverse())\n      2 print(\"’¢’°÷Ä÷á\"[::-1])\n\nAttributeError: 'str' object has no attribute 'reverse'\n\n\n\n\n\n9.2.5 ’ß’¨’•’¥’•’∂’ø ’∞’•’º’°÷Å’∂’•’¨\n\ndel a[0]\n\n\na = ['’°’µ’¢', \"’£’´’¥\", \"’¢’•’∂\", '’°’µ’¢', '’∫’°’∂’´÷Ä']\n\na.remove('’°’µ’¢')\nprint(a)\n\na.remove('’∫’°’∂’´÷Ä')\nprint(a)\n\n['’£’´’¥', '’¢’•’∂', '’°’µ’¢', '’∫’°’∂’´÷Ä']\n['’£’´’¥', '’¢’•’∂', '’°’µ’¢']\n\n\n\njnjac = a.remove(a[0])\n\nprint(a)\nprint(jnjac)\n\n['’¢’•’∂', '’°’µ’¢']\nNone\n\n\n\na = ['’°’µ’¢', \"’£’´’¥\", \"’¢’•’∂\", '’°’µ’¢', '’∫’°’∂’´÷Ä']\n\njnjac = a.pop()\n\nprint(a)\nprint(jnjac)\n\n['’°’µ’¢', '’£’´’¥', '’¢’•’∂', '’°’µ’¢']\n’∫’°’∂’´÷Ä\n\n\n\n\n9.2.6 ’ß’¨’•’¥’•’∂’ø ’ø’•’≤’°’§÷Ä’•’¨\n\nmrger = ['’≠’∂’±’∏÷Ä', \"’ø’°’∂’±\", \"’¢’°’∂’°’∂\"]\nmrger.append('’°÷Ä÷Ñ’°’µ’°’≠’∂’±’∏÷Ä')\n\nprint(mrger)\n\n['’≠’∂’±’∏÷Ä', '’ø’°’∂’±', '’¢’°’∂’°’∂', '’°÷Ä÷Ñ’°’µ’°’≠’∂’±’∏÷Ä']\n\n\n\nmrger = ['’≠’∂’±’∏÷Ä', \"’ø’°’∂’±\", \"’¢’°’∂’°’∂\"]\nmrger.insert(1, '’°÷Ä÷Ñ’°’µ’°’≠’∂’±’∏÷Ä')\nmrger.insert(123123, '’°÷Ä÷Ñ’°’µ’°’≠’∂’±’∏÷Ä')\n\nprint(mrger)\n\n['’≠’∂’±’∏÷Ä', '’°÷Ä÷Ñ’°’µ’°’≠’∂’±’∏÷Ä', '’ø’°’∂’±', '’¢’°’∂’°’∂', '’°÷Ä÷Ñ’°’µ’°’≠’∂’±’∏÷Ä']\n\n\n\n\n9.2.7 ’£’ø’∂’•’¨ ’ß’¨’•’¥’•’∂’ø\n\nprint(mrger.index('’°÷Ä÷Ñ’°’µ’°’≠’∂’±’∏÷Ä'))\nprint(mrger.index('’©’°’£’∏÷Ç’∞’´’°’≠’∂’±’∏÷Ä'))\n# ’π’∏÷Ç’∂’•’∂÷Ñ mrger.find()\n\n1\n\n\n\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\nInput In [71], in &lt;cell line: 2&gt;()\n      1 print(mrger.index('’°÷Ä÷Ñ’°’µ’°’≠’∂’±’∏÷Ä')) #\n----&gt; 2 print(mrger.index('’©’°’£’∏÷Ç’∞’´’°’≠’∂’±’∏÷Ä'))\n      3 # ’π’∏÷Ç’∂’•’∂÷Ñ mrger.find()\n\nValueError: '’©’°’£’∏÷Ç’∞’´’°’≠’∂’±’∏÷Ä' is not in list\n\n\n\n\nhelp(mrger)",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>7</span>¬† <span class='chapter-title'>05 List/String Methods; Ternary Operators; List Comprehensions</span>"
    ]
  },
  {
    "objectID": "python/05_Lst_str_methods_one_line_if_for.html#’°’º’°’ª’°’§÷Ä’°’∂÷Ñ",
    "href": "python/05_Lst_str_methods_one_line_if_for.html#’°’º’°’ª’°’§÷Ä’°’∂÷Ñ",
    "title": "7¬† 05 List/String Methods; Ternary Operators; List Comprehensions",
    "section": "9.3 ‘±’º’°’ª’°’§÷Ä’°’∂÷Ñ",
    "text": "9.3 ‘±’º’°’ª’°’§÷Ä’°’∂÷Ñ\n‘ø’°÷Ä’£’´’∂’´ ’∑÷Ä’ª’∏÷Ä’´ ’≠’∂’§’´÷Ä - ’é’´’§’•’∏ ’¨’∏÷Ç’Æ’∏÷Ç’¥ - ‘ø’°÷Ä’£’´’∂’®\n\ntext = \"‘≤’°÷Ä÷á ’Å’•’¶ ’ã÷Ä’∞’∏÷Ä\"\n\nlst = text.split()\n\nlst.reverse()\n\nprint(lst)\n\nreversed_text = \" \".join(lst)\n\nprint(reversed_text)\n\n['’ã÷Ä’∞’∏÷Ä', '’Å’•’¶', '‘≤’°÷Ä÷á']\n’ã÷Ä’∞’∏÷Ä ’Å’•’¶ ‘≤’°÷Ä÷á",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>7</span>¬† <span class='chapter-title'>05 List/String Methods; Ternary Operators; List Comprehensions</span>"
    ]
  },
  {
    "objectID": "python/05_Lst_str_methods_one_line_if_for.html#ternary-conditional-operators",
    "href": "python/05_Lst_str_methods_one_line_if_for.html#ternary-conditional-operators",
    "title": "7¬† 05 List/String Methods; Ternary Operators; List Comprehensions",
    "section": "9.4 Ternary (conditional) operators",
    "text": "9.4 Ternary (conditional) operators\n(ternary ’∏÷Ä’∏’æ’∞’•’ø÷á 3 ’¢’°’∂’´÷Å’° ’¢’°’≤’Ø’°÷Å’°’Æ)\n\"Fear\" if ternary_set==\"Cantor\" else None\n(c) Jonathan Coulton\n\nUnconditional Love\n(c) Jah Cure\n\nnum = 7 # 1\n# '’¶’∏÷Ç’µ’£' # 2\n# '’Ø’•’∂’ø' # 3 ’¢’°’∂ ’° ÷Ö’£’ø’°’£’∏÷Ä’Æ’∏÷Ç’¥\n\nif num % 2 == 0:\n    zueg_te_kent = '’¶’∏÷Ç’µ’£'\nelse:\n    zueg_te_kent = '’Ø’•’∂’ø'\nprint(zueg_te_kent)\n\n’Ø’•’∂’ø\n\n\n\nzueg_te_kent = \"’¶’∏÷Ç’µ’£\" if num % 2 == 0 else \"’Ø’•’∂’ø\"\nprint(zueg_te_kent)\n\n’Ø’•’∂’ø\n\n\n‘∏’∂’§’∞’°’∂’∏÷Ç÷Ä ’Ø’°’º’∏÷Ç÷Å’æ’°’Æ÷Ñ’∂’°’ù\nvalue_if_true if condition else value_if_false",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>7</span>¬† <span class='chapter-title'>05 List/String Methods; Ternary Operators; List Comprehensions</span>"
    ]
  },
  {
    "objectID": "python/05_Lst_str_methods_one_line_if_for.html#’°’º’°’ª’°’§÷Ä’°’∂÷Ñ-1",
    "href": "python/05_Lst_str_methods_one_line_if_for.html#’°’º’°’ª’°’§÷Ä’°’∂÷Ñ-1",
    "title": "7¬† 05 List/String Methods; Ternary Operators; List Comprehensions",
    "section": "9.5 ‘±’º’°’ª’°’§÷Ä’°’∂÷Ñ 1",
    "text": "9.5 ‘±’º’°’ª’°’§÷Ä’°’∂÷Ñ 1\n’π’°÷É’°’∞’°’Ω ’©’• ’π’π’°÷É’°’∞’°’Ω\n\nage = 17\n\nadult_or_not = \"’â’°÷É’°’∞’°’Ω\" if age &gt;= 18 else \"’°’∂’π’°÷É’°’∞’°’Ω\"\n\nprint(adult_or_not)\n\n# adult_or_not = \"’â’°÷É’°’∞’°’Ω\" if age &gt;= 18\n\n\n  Input In [81]\n    adult_or_not = \"’â’°÷É’°’∞’°’Ω\" if age &gt;= 18\n                   ^\nSyntaxError: expected 'else' after 'if' expression\n\n\n\n\n\n9.5.1 ’Ü’•÷Ä’§÷Ä’æ’°’Æ (nested) ternary operator\n! ’â’°÷Ä’™’´ ÷Ö’£’ø’°’£’∏÷Ä’Æ’•’¨, ’°’∂’®’∂’©’•’º’∂’•’¨’´ ’°\n’©’´’æ’® ’§÷Ä’°’Ø’°’∂ ’°, ’¢’°÷Å’°’Ω’°’Ø’°’∂ ’©’• ’¶÷Ä’∏\n\nnum = 509\n\nif num &gt; 0:\n    sign = \"positive\"\nelse:\n    # if num == 0:\n    #     sign = \"zero\"\n    # else:\n    #     sign = \"negative\"\n    sign = \"zero\" if num == 0 else \"negative\"\n    \nsign = \"positive\" if num &gt; 0 else (\"zero\" if num == 0 else \"negative\")\nprint(sign)\n# &lt;’°÷Ä’ø’°’∞’°’µ’ø’∏÷Ç’©’µ’∏÷Ç’∂ ’•’©’• ’∫’°’µ’¥’°’∂’® ’≥’∑’¥’°÷Ä’´’ø’°&gt; if &lt;’∫’°’µ’¥’°’∂&gt; else &lt;’°÷Ä’ø’°’∞’°’µ’ø’∏÷Ç’©’µ’∏÷Ç’∂ ’•’©’• ’Ω’≠’°’¨’°&gt;\n\npositive\n\n\n’Ø’°÷Ä’°’∂÷Ñ ’°’º’°’∂÷Å ÷É’°’Ø’°’£’´’Æ ’ß’¨\n\nsign = \"positive\" if num &gt; 0 else (\"zero\" if num == 0 else \"negative\")\n# ’Ø’°÷Ä’°’∂÷Ñ ’°’º’°’∂÷Å ÷É’°’Ø’°’£’´’Æ ’ß’¨\nsign = \"positive\" if num &gt; 0 else \"zero\" if num == 0 else \"negative\"\n\n\n\n9.5.2 ‘±÷Ä’°’£’°’£’∏÷Ä’Æ’∏÷Ç’©’µ’∏÷Ç’∂\nstackoverflow\n\n%%timeit\nnum = 509\nx = \"’§÷Ä’°’Ø’°’∂\" if num &gt; 0 else (\"zero\" if num == 0 else \"’¢’°÷Å’°’Ω’°’Ø’°’∂\")\n\n282 ns ¬± 23.2 ns per loop (mean ¬± std. dev. of 7 runs, 10,000,000 loops each)\n\n\n\n%%timeit\nnum = 509\n\nif num &gt; 0:\n    x = '’§÷Ä’°’Ø’°’∂'\nelse:\n    if num == 0:\n        x = '’¶÷Ä’∏'\n    else:\n        x = '’¢’°÷Å’°’Ω’°’Ø’°’∂'\n\n362 ns ¬± 89.7 ns per loop (mean ¬± std. dev. of 7 runs, 1,000,000 loops each)\n\n\n\n&gt;&gt;&gt; def f():\n...   return a if b else c\n...\n&gt;&gt;&gt; dis.dis(f)\n  2           0 LOAD_GLOBAL              0 (b)\n              2 POP_JUMP_IF_FALSE        8\n              4 LOAD_GLOBAL              1 (a)\n              6 RETURN_VALUE\n        &gt;&gt;    8 LOAD_GLOBAL              2 (c)\n             10 RETURN_VALUE\n&gt;&gt;&gt; def g():\n...   if b:\n...     return a\n...   else:\n...     return c\n...\n&gt;&gt;&gt; dis.dis(g)\n  2           0 LOAD_GLOBAL              0 (b)\n              2 POP_JUMP_IF_FALSE        8\n\n  3           4 LOAD_GLOBAL              1 (a)\n              6 RETURN_VALUE\n\n  5     &gt;&gt;    8 LOAD_GLOBAL              2 (c)\n             10 RETURN_VALUE\n             12 LOAD_CONST               0 (None)",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>7</span>¬† <span class='chapter-title'>05 List/String Methods; Ternary Operators; List Comprehensions</span>"
    ]
  },
  {
    "objectID": "python/05_Lst_str_methods_one_line_if_for.html#list-comprehensions",
    "href": "python/05_Lst_str_methods_one_line_if_for.html#list-comprehensions",
    "title": "7¬† 05 List/String Methods; Ternary Operators; List Comprehensions",
    "section": "9.6 list comprehensions",
    "text": "9.6 list comprehensions\ncomprehension - ’∞’°’Ω’Ø’°’∂’°’¨’∏÷Ç ’Ø’°÷Ä’∏’≤’∏÷Ç’©’µ’∏÷Ç’∂\n\n9.6.1 ’ç’∏’æ’∏÷Ä’°’Ø’°’∂\n\n9.6.1.1 ’ï÷Ä’´’∂’°’Ø 1 | ÷Ñ’°’º’°’Ø’∏÷Ç’Ω’´ ’¢’°÷Ä’±÷Ä’°÷Å’∂’•’¨ ’ß’¨’•’¥’•’∂’ø’´ ’ø’°÷Ä÷Ä’•÷Ä’®\n\n# ’ï÷Ä’´’∂’°’Ø 1 | ÷Ñ’°’º’°’Ø’∏÷Ç’Ω’´ ’¢’°÷Ä’±÷Ä’°÷Å’∂’•’¨ ’ß’¨’•’¥’•’∂’ø’´ ’ø’°÷Ä÷Ä’•÷Ä’®\nlst = [3, 4, 1, 0, 12, 509, 88]\n\nqarakusiner = []\nfor x in lst:\n    qarakusiner.append(x**2)\n\nprint(qarakusiner)\n\n[9, 16, 1, 0, 144, 259081, 7744]\n\n\n\nqarakusiner = [x**2 for x in lst]\nprint(qarakusiner)\n\n[9, 16, 1, 0, 144, 259081, 7744]\n\n\n‘∏’∂’§’∞’°’∂’∏÷Ç÷Ä ’Ø’°’º’∏÷Ç÷Å’æ’°’Æ÷Ñ’®’ù\n[expression for item in list]\n\n\n9.6.1.2 ’ï÷Ä’´’∂’°’Ø 2 | ’¥’•’Ø’´÷Å ’ø’°’Ω ’©’æ’•÷Ä’´ ÷Ñ’°’º’°’Ø’∏÷Ç’Ω’´’∂’•÷Ä\n\n# ’ï÷Ä’´’∂’°’Ø 2 | ’¥’•’Ø’´÷Å ’ø’°’Ω ’©’æ’•÷Ä’´ ÷Ñ’°’º’°’Ø’∏÷Ç’Ω’´’∂’•÷Ä\nqarakusiner_mekic_tas = []\n\nfor x in range(1,11):\n    qarakusiner_mekic_tas.append(x**2)\n\nprint(qarakusiner_mekic_tas)\n\n[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]\n\n\n\nqarakusiner_mekic_tas = [x**2 for x in range(1, 11)]\nprint(qarakusiner_mekic_tas)\n\n[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]\n\n\n\n\n9.6.1.3 ’ï÷Ä’´’∂’°’Ø 3 (filter) | ÷Å’∏÷Ç÷Å’°’Ø’∏÷Ç’¥ ’¶’∏÷Ç’µ’£ ’©’æ’•÷Ä’® ’∫’°’∞’•’∂÷Ñ ’¥’•’Ø ’°’µ’¨ ÷Å’∏÷Ç÷Å’°’Ø’´ ’¥’•’ª\n\nlst = [3, 4, 1, 0, 11, 509, 88]\n\nzueger = []\nfor i in lst:\n    if i % 2 == 0:\n        zueger.append(i)\n\nprint(zueger)\n\n[16, 0, 7744]\n\n\n\nzueger = [i for i in lst if i % 2 == 0]\n\n\nbolor = [i for i in lst]\nprint(bolor)\n\nzueger = [i for i in lst if i % 2 == 0]\nprint(zueger)\n\n[3, 4, 1, 0, 11, 509, 88]\n[4, 0, 88]\n\n\n\nzueger = [i for i in lst if i % 2 == 0]\nprint(zueger)\n\n[4, 0, 88]\n\n\n\n# ’•’©’• ’∏÷Ç’¶’•’∂÷Ñ ’¶’∏÷Ç’µ’£ ’©’æ’•÷Ä’´ ÷Ñ’°’∂’°’Ø’∏÷Ç’Ω’´’∂’•÷Ä’® ’Ø’°÷Ä’°’∂÷Ñ ’£÷Ä’•’∂÷Ñ’ù\nzuegeri_qarakusiner = [i**2 for i in lst if i % 2 == 0]\nprint(zuegeri_qarakusiner)\n\n[16, 0, 7744]\n\n\n\n\n9.6.1.4 ’ï÷Ä’´’∂’°’Ø 4 (list comprehensions for filtering)\n\n# ’ï÷Ä’´’∂’°’Ø 4 | ’∞’•’º’°÷Å’∂’•’¨ ÷Å’∏÷Ç÷Å’°’Ø’´÷Å ’º ’∫’°÷Ä’∏÷Ç’∂’°’Ø’∏’≤’∂’•÷Ä’®\nbarer = ['’º’∏’¢’∏’ø', '’º’∂’£’•’≤’ª’∏÷Ç÷Ä', \"’º’∏÷Ç’¥’¢’°\", \"’Ω’°’¨’Ω’°\", \"’¥’´’°’•’≤’ª’∏÷Ç÷Ä\", \"’∫’°’∂’´÷Ä\"]\n\n\nbarer_aranc_r = []\n\nfor i in barer:\n    if not ('’º' in i):\n        barer_aranc_r.append(i)\n\nprint(barer_aranc_r)\n\n['’Ω’°’¨’Ω’°', '’¥’´’°’•’≤’ª’∏÷Ç÷Ä', '’∫’°’∂’´÷Ä']\n\n\n\nbarer_aranc_r = [i for i in barer if not ('’º' in i)]\nprint(barer_aranc_r)\n\n['’Ω’°’¨’Ω’°', '’¥’´’°’•’≤’ª’∏÷Ç÷Ä', '’∫’°’∂’´÷Ä']\n\n\n\n\n9.6.1.5 print + list comprehensions\n’ç’° ’¶’∏÷Ç’ø profound-’∏÷Ç’¥ ’Ø’°÷Ä’° ÷Ö’£’∂’´, ’∫÷Ä’°’Ø’ø’´’Ø’°’µ’∏÷Ç’¥ ’≠’∏÷Ä’∞’∏÷Ç÷Ä’§ ’π’•’¥ ’ø’° ÷Ö’£’ø’°’£’∏÷Ä’Æ’•’¨\n\nbarer_aranc_r = [i for i in barer if not '’º' in i]\n\nfor i in barer_aranc_r:\n    print(i)\n    \n\n’Ω’°’¨’Ω’°\n’¥’´’°’•’≤’ª’∏÷Ç÷Ä\n’∫’°’∂’´÷Ä\n’Ω’°’¨’Ω’° ’¥’´’°’•’≤’ª’∏÷Ç÷Ä ’∫’°’∂’´÷Ä\n\n\n\n# ’•’©’• ’∏÷Ç’¶’•’∂’°’∂÷Ñ ’ø’∫’•’¨ ’Ω’° ’Ø’°÷Ä’∏’≤ ’•’∂÷Ñ ’£÷Ä’•’¨\na = [print(i) for i in barer if not '’º' in i]\nprint(a)\na = [print(i, end=\" \") for i in barer if not '’º' in i]\n\n’Ω’°’¨’Ω’°\n’¥’´’°’•’≤’ª’∏÷Ç÷Ä\n’∫’°’∂’´÷Ä\n[None, None, None]\n’Ω’°’¨’Ω’° ’¥’´’°’•’≤’ª’∏÷Ç÷Ä ’∫’°’∂’´÷Ä \n\n\n\n\n\n9.6.2 ‘±÷Ä’°’£’°’£’∏÷Ä’Æ’∏÷Ç’©’µ’∏÷Ç’∂\n’Ü’µ’∏÷Ç’© (5 ÷Ä’∏’∫’•’°’∂’∏÷Å ’æ’´’§’•’∏ ’° ’®’∂’§’°’¥’•’∂’®)\n\n\n\nimage.png\n\n\n\n%%timeit\nbarer_aranc_r = []\n\n\nfor i in barer:\n    if not '’º' in i:\n        barer_aranc_r.append(i)\n\n2.31 ¬µs ¬± 400 ns per loop (mean ¬± std. dev. of 7 runs, 1,000,000 loops each)\n\n\n\n%%timeit\nbarer_aranc_r = [i for i in barer if not '’º' in i]\n\n2.89 ¬µs ¬± 359 ns per loop (mean ¬± std. dev. of 7 runs, 1,000,000 loops each)\n\n\n\n\n9.6.3 ‘±’º’°’ª’°’§÷Ä’°’∂÷Ñ: ’°’æ’•’¨’´ ’¥’•’Æ ÷Ñ’°’∂ ’∂’°’≠’∏÷Ä’§’® (profound)\n\nlst = [10, 40, 23, 509, 4]\n\n\nlav_videoner = []\n\nfor i in range(len(lst)-1):\n    if lst[i+1] &gt; lst[i]:\n        lav_videoner.append(lst[i+1])\n\n\nlav_videoner = [lst[i+1] for i in range(len(lst)-1) if lst[i+1] &gt; lst[i]]\nlav_videoner\n\n[40, 509]\n\n\n\n9.6.3.1 ‘±’º’°’ª’°’§÷Ä’°’∂÷Ñ (2 ’∞’°’ø if)\n1 - 100 6-’´ ’¢’°’™’°’∂’æ’∏’≤ ’©’æ’•÷Ä’®, ’∏÷Ä’∏’∂÷Ñ ’æ’•÷Ä’ª’°’∂’∏÷Ç’¥ ’•’∂ 2-’∏’æ\n\nnums = []\n\nfor i in range(1, 101):\n    if i % 6 == 0 and i % 10 == 2:\n        nums.append(i)\n\nprint(nums)\n\n[12, 42, 72]\n\n\n\nnums = [i for i in range(1, 101) if i % 6 == 0 and i % 10 == 2]\nprint(nums)\n# ’ß’¨’´ ’°’∂’®’∂’©’•’º’∂’•’¨’´ ’°, ’°’æ’•’¨’´ ’¨’°’æ ’° ’¢’°÷Å’æ’°’Æ ’ø’•’Ω÷Ñ’∏’æ ’£÷Ä’•’¨\n\n[12, 42, 72]\n\n\n\n\n\n9.6.4 Ternary operator + List comprehension\n÷Å’∏÷Ç÷Å’°’Ø’´ ’¥’•’ª ’∫’°’∞’•’¨ 1-’´÷Å 5 ’©’æ’•÷Ä’´ ’¶’∏÷Ç’µ’£’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä’® (’¶’∏÷Ç’µ’£/’Ø’•’∂’ø)\n\nlst = [1,2,3,4,5]\n\n# [\"’Ø’•’∂’ø\", \"’¶’∏÷Ç’µ’£\", \"’Ø’•’∂’ø\", \"’¶’∏÷Ç’µ’£\", \"’Ø’•’∂’ø\"]\nzuegutunner = ['’¶’∏÷Ç’µ’£' if i % 2 == 0 else \"’Ø’•’∂’ø\" for i in lst]\nprint(zuegutunner)\n\n['’Ø’•’∂’ø', '’¶’∏÷Ç’µ’£', '’Ø’•’∂’ø', '’¶’∏÷Ç’µ’£', '’Ø’•’∂’ø']\n\n\n\nlst = []\nfor i in lst:\n    if i % 2 == 0:\n        lst.append(\"’¶’∏÷Ç’µ’£\")\n    else:\n        lst.append('’Ø’•’∂’ø')\n\nprint(lst)\n\n['’Ø’•’∂’ø', '’¶’∏÷Ç’µ’£', '’Ø’•’∂’ø', '’¶’∏÷Ç’µ’£', '’Ø’•’∂’ø']\n\n\n\nlst = []\nfor i in range(1, 6):\n    lst.append(\"’¶’∏÷Ç’µ’£\" if i % 2 == 0 else \"’Ø’•’∂’ø\")\n\nprint(lst)\n\n['’Ø’•’∂’ø', '’¶’∏÷Ç’µ’£', '’Ø’•’∂’ø', '’¶’∏÷Ç’µ’£', '’Ø’•’∂’ø']\n\n\n\n\nlst = [\"’¶’∏÷Ç’µ’£\" if tiv % 2 == 0 else \"’Ø’•’∂’ø\" for tiv in range(1, 6)]\nprint(lst)\n\n\n['’Ø’•’∂’ø', '’¶’∏÷Ç’µ’£', '’Ø’•’∂’ø', '’¶’∏÷Ç’µ’£', '’Ø’•’∂’ø']\n\n\n\n\n9.6.5 Nested list comprehensions (’¨÷Ä’°÷Å’∏÷Ç÷Å’´’π)\n’à÷Ç’≤’≤’°’Ø’´ ’æ’°÷Ä’™’æ’•’¨’∏÷Ç ’∞’°’¥’°÷Ä ’°, ’∫÷Ä’°’Ø’ø’´’Ø’°’µ’∏÷Ç’¥ ’°’æ’•’¨’´ ’¨’°’æ ’° ’∏÷Ç’≤’≤’°’Ø’´ ’¢’°÷Å’æ’°’Æ ’ø’•’Ω÷Ñ’∏’æ ’£÷Ä’•’¨,\n’•’∂ ’∏÷Ä ’Ø’°÷Ä’°’∂÷Ñ ’¨’´÷Ñ’® ’¢’°’∂ ’¥’´ ’ø’∏’≤’∏’æ ’£÷Ä’•’∂÷Ñ, ’∞’•’π ’π’´ ’∂’∑’°’∂’°’Ø’∏÷Ç’¥ ’∏÷Ä ’∫’•’ø÷Ñ ’°\n\n9.6.5.1 ÷Ñ’°’º’°’Ø’∏÷Ç’Ω’´’∂’•÷Ä’´ ÷Ö÷Ä’´’∂’°’Ø\n\na = [\n    [1, 0, 3],\n    [4, 5, 6]\n    ]\na\n\n[[1, 0, 3], [4, 5, 6]]\n\n\n\nqarakusiner = []\n\nfor tox in a:\n    tox_qarakusiner = []\n    for j in tox:\n        tox_qarakusiner.append(j**2)\n    # print(tox_qarakusiner)\n    qarakusiner.append(tox_qarakusiner)\n\nqarakusiner\n\n[[1, 0, 9], [16, 25, 36]]\n\n\n\ntox_qarakusiner = []\nfor j in tox:\n    tox_qarakusiner.append(j**2)\n\ntox_qarakusiner = [j**2 for j in tox]\n\n# ’Ω’° ’§’°’º’∂’∏÷Ç’¥’°\ntox = a[0]\ntox_qarakusiner = [j**2 for j in tox]\ntox_qarakusiner\n\n[1, 0, 9]\n\n\n\nqarakusiner = []\nfor tox in a:\n    tox_qarakusiner = [j**2 for j in tox]\n    qarakusiner.append(tox_qarakusiner)\n\nqarakusiner\n\n[[1, 0, 9], [16, 25, 36]]\n\n\n\nqarakusiner = [tox_parakusiner for tox in a]\n\n\nqarakusiner = [[j**2 for j in tox] for tox in a]\nqarakusiner\n\n[[1, 0, 9], [16, 25, 36]]\n\n\n\n\n9.6.5.2 ’Ñ’°’ø÷Ä’´÷Å’´ ÷Ö÷Ä’´’∂’°’Ø\n\n# ’ç’°÷Ä÷Ñ’•’¨ ’Ω’•’∂÷Å ’¥’°’ø÷Ä’´÷Å\nmatrix = [[0, 1, 2, 3, 4, ..., n],\n          [0, 1, 2, 3, 4, ..., n],\n          [0, 1, 2, 3, 4, ..., n],\n          [0, 1, 2, 3, 4, ..., n],\n          [0, 1, 2, 3, 4, ..., n]]\n\nn = 5\n\n\nmatrix = [list(range(n+1)) for i in range(n+1)]\nmatrix # ’Ω’•’∂÷Å ’°’æ’•’¨’´ ’®’∂’©’•’º’∂’•’¨’´ ’° ’ø’∫’∏÷Ç’¥\n\n[[0, 1, 2, 3, 4, 5],\n [0, 1, 2, 3, 4, 5],\n [0, 1, 2, 3, 4, 5],\n [0, 1, 2, 3, 4, 5],\n [0, 1, 2, 3, 4, 5],\n [0, 1, 2, 3, 4, 5]]\n\n\n\ntox = []\nfor i in range(n+1):\n    tox.append(i)\nprint(tox)\n\n\n[0, 1, 2, 3, 4, 5]\n\n\n\ntox = [j for j in range(n)]\ntox\n\n[0, 1, 2, 3, 4]\n\n\n\nmatrix = []\nfor r in range(n):\n    tox = [i for i in range(n)]\n    matrix.append(tox)\nmatrix\n\n[[0, 1, 2, 3, 4],\n [0, 1, 2, 3, 4],\n [0, 1, 2, 3, 4],\n [0, 1, 2, 3, 4],\n [0, 1, 2, 3, 4]]\n\n\n\nmatrix = [[i for i in range(n)] for r in range(n)]\nmatrix\n\n[[0, 1, 2, 3, 4],\n [0, 1, 2, 3, 4],\n [0, 1, 2, 3, 4],\n [0, 1, 2, 3, 4],\n [0, 1, 2, 3, 4]]\n\n\n\n\n9.6.5.3 ’ë’∏÷Ç÷Å’°’Ø’´ ’¥’•’ª ÷Å’∏÷Ç÷Å’°’Ø’® ’ø’°÷É’°’Ø’•÷Å’∂’•’¨\n\n\nnested_list = [[1, 2], [3, 4], [5, 6]]\nprint(nested_list)\n\nnested_list = [1,2,3,4,5,6]\n\n[[1, 2], [3, 4], [5, 6]]\n\n\n\nnested_list = [[1, 2], [3, 4], [5, 6]]\n\ntapakacrac = []\n\nfor entalist in nested_list:\n    for i in entalist:\n        tapakacrac.append(i)\ntapakacrac\n\n[1, 2, 3, 4, 5, 6]\n\n\n\n# ’Ω’ø’•’≤ ’∫’•’ø÷Ñ’° ’¶’£’∏÷Ç’µ’∑ ’¨’´’∂’•’∂÷Ñ\ntapakacrac = [i for entalist in nested_list for i in entalist]\nprint(tapakacrac)\n\n[1, 2, 3, 4, 5, 6]",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>7</span>¬† <span class='chapter-title'>05 List/String Methods; Ternary Operators; List Comprehensions</span>"
    ]
  },
  {
    "objectID": "python/05_Lst_str_methods_one_line_if_for.html#’∞’´’¥’∂’°’Ø’°’∂-’ø’∂’°’µ’´’∂",
    "href": "python/05_Lst_str_methods_one_line_if_for.html#’∞’´’¥’∂’°’Ø’°’∂-’ø’∂’°’µ’´’∂",
    "title": "7¬† 05 List/String Methods; Ternary Operators; List Comprehensions",
    "section": "10.1 ’Ä’´’¥’∂’°’Ø’°’∂ ’ø’∂’°’µ’´’∂",
    "text": "10.1 ’Ä’´’¥’∂’°’Ø’°’∂ ’ø’∂’°’µ’´’∂\n\nProfound ’¢’°’™’´’∂ 19 (’è’∏’≤’•÷Ä’´ ÷á ’¶’°’∂’£’æ’°’Æ’∂’•÷Ä’´ ’¥’•’©’∏’§’∂’•÷Ä) - ’¨÷Ä’´’æ\nProfound ’¢’°’™’´’∂ 22 (List Comprehensions) - 1 - 7 (’∂’•÷Ä’°’º’µ’°’¨)",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>7</span>¬† <span class='chapter-title'>05 List/String Methods; Ternary Operators; List Comprehensions</span>"
    ]
  },
  {
    "objectID": "python/05_Lst_str_methods_one_line_if_for.html#’∂’∑’∏÷Ç’¥’∂’•÷Ä",
    "href": "python/05_Lst_str_methods_one_line_if_for.html#’∂’∑’∏÷Ç’¥’∂’•÷Ä",
    "title": "7¬† 05 List/String Methods; Ternary Operators; List Comprehensions",
    "section": "10.2 ’Ü’∑’∏÷Ç’¥’∂’•÷Ä",
    "text": "10.2 ’Ü’∑’∏÷Ç’¥’∂’•÷Ä\n\n‘µ’©’• ’Ø’∏÷Ç’¶’•÷Ñ ’Ø’°÷Ä’°÷Ñ ’Ü’•÷Ä’§÷Ä’æ’°’Æ ÷Å’´’Ø’¨’•÷Ä (’¢’°’™’´’∂ 20)’® ’°’∂’•÷Ñ, ’∏÷Ä’∏’∑’∂’•÷Ä’® ’°’æ’•’¨’´ ’∑’°’ø ’¢’°’µ÷Å ’∞’•’∂÷Å ’Æ÷Ä’°’£÷Ä’°’æ’∏÷Ä’¥’°’∂ ’ø’•’Ω’°’∂’Ø’µ’∏÷Ç’∂’´÷Å ’•’∂ ’∞’•’ø’°÷Ñ÷Ä÷Ñ’´÷Ä, ’∏’π ’©’• Python-’´\n‘ø’°÷Ä’∏’≤ ’•÷Ñ ’∂’°÷á ’∂’•÷Ä’§÷Ä’æ’°’Æ list comprehension-’∂’•÷Ä’´ ’≠’∂’§’´÷Ä’∂’•÷Ä’® ’∂’°’µ’•’¨, ’¢’°’µ÷Å ’∏÷Ç’≤’≤’°’Ø’´ ’∏÷Ä’∫’•’Ω ’æ’°÷Ä’™’°’∂÷Ñ ’∂’°’µ’•÷Ñ ’§÷Ä’°’∂÷Å, ’∫÷Ä’°’Ø’ø’´’Ø’°’µ’∏÷Ç’¥ ’°’æ’•’¨’´ ’¨’°’æ ’° ’®’∂’§’°÷Ä’±’°’Ø ’ø’•’Ω÷Ñ’∏’æ ’£÷Ä’•÷Ñ ’Ø’∏’§’®",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>7</span>¬† <span class='chapter-title'>05 List/String Methods; Ternary Operators; List Comprehensions</span>"
    ]
  },
  {
    "objectID": "python/05_Lst_str_methods_one_line_if_for.html#’¨’∏÷Ç’Æ’∏÷Ç’¥’∂’•÷Ä",
    "href": "python/05_Lst_str_methods_one_line_if_for.html#’¨’∏÷Ç’Æ’∏÷Ç’¥’∂’•÷Ä",
    "title": "7¬† 05 List/String Methods; Ternary Operators; List Comprehensions",
    "section": "10.3 ‘º’∏÷Ç’Æ’∏÷Ç’¥’∂’•÷Ä",
    "text": "10.3 ‘º’∏÷Ç’Æ’∏÷Ç’¥’∂’•÷Ä\n\n’à÷Ä’∏’∑ ’≠’∂’§’´÷Ä’∂’•÷Ä’´ ’æ’´’§’•’∏’¨’∏÷Ç’Æ’∏÷Ç’¥’∂’•÷Ä (ToDo)\n‘≤’∏’¨’∏÷Ä ’≠’∂’§’´÷Ä’∂’•÷Ä’´ ’¨’∏÷Ç’Æ’∏÷Ç’¥’∂’•÷Ä / ’∂’∑’∏÷Ç’¥’∂’•÷Ä (ToDo)",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>7</span>¬† <span class='chapter-title'>05 List/String Methods; Ternary Operators; List Comprehensions</span>"
    ]
  },
  {
    "objectID": "python/06_Tuple_set_dictionary.html",
    "href": "python/06_Tuple_set_dictionary.html",
    "title": "8¬† 06 Tuple, Set, Dictionary",
    "section": "",
    "text": "9 üé¶ ’è’•’Ω’°’§’°’Ω’•÷Ä + ’¨÷Ä’°÷Å’∏÷Ç÷Å’´’π\n’¨’∏÷Ç’Ω’°’∂’Ø’°÷Ä’´ ’∞’≤’∏÷Ç’¥’®, ’Ä’•’≤’´’∂’°’Ø’ù Naira Babayan\n(ToDo)\nSet the Controls for the Heart of the Sun\n(c) Pink Floyd\nToDo 1. ’è’•’Ω’∏÷Ç’©’µ’∏÷Ç’∂ 2025\n2. ’è’•’Ω’∏÷Ç’©’µ’∏÷Ç’∂ 2023 (ToDo)\n3. ‘≥’∏÷Ä’Æ’∂’°’Ø’°’∂ 2025 (ToDo)\n4. ‘≥’∏÷Ä’Æ’∂’°’Ø’°’∂ 2023 (ToDo)\n5. ’à÷Ä’∏’∑ ’ø’∂’°’µ’´’∂’∂’•÷Ä’´ ’¨’∏÷Ç’Æ’∏÷Ç’¥’∂’•÷Ä (ToDo)\nGoogle Forms ToDo",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>8</span>¬† <span class='chapter-title'>06 Tuple, Set, Dictionary</span>"
    ]
  },
  {
    "objectID": "python/06_Tuple_set_dictionary.html#tuple-’∂’•÷Ä",
    "href": "python/06_Tuple_set_dictionary.html#tuple-’∂’•÷Ä",
    "title": "8¬† 06 Tuple, Set, Dictionary",
    "section": "10.1 Tuple-’∂’•÷Ä",
    "text": "10.1 Tuple-’∂’•÷Ä\n‘∏’Ω’ø ’ß’∏÷Ç’©’µ’°’∂ tuple’® ’∂’∏÷Ç’µ’∂ list’∂’°, ’∏÷Ä’´’∂ ’∏÷Ä ’π’´ ’Ø’°÷Ä’•’¨’´ ÷É’∏÷É’∏’≠’•’¨ (immutable ’•’∂)\n\n10.1.1 tuple-’´ ’Ω’ø’•’≤’Æ’∏÷Ç’¥\n\n# ’§’°’ø’°÷Ä’Ø tuple ’Ω’ø’•’≤’Æ’•’¨\ntup = ()\n# ’Ø’°’¥\ntup = tuple()\n\nprint(tup)\n\n()\n\n\n\n# ’ß’¨’•’¥’•’∂’ø’∂’•÷Ä’∏’æ tuple ’Ω’ø’•’≤’Æ’•’¨\ntup = (1, \"’∏’≤’ª’∏÷Ç’µ’∂\", True)\ntup = 1, \"’∏’≤’ª’∏÷Ç’µ’∂\", True\n\n\nprint(tup)\n\n(1, '’∏’≤’ª’∏÷Ç’µ’∂', True)\n\n\n\n# ’•’©’• ’¨’´’Ω’ø ’∏÷Ç’∂’•’∂÷Ñ ’Ø’°÷Ä’°’∂÷Ñ ’§’°÷Ä’±’∂’•’∂÷Ñ ’´÷Ä’°’∂ tuple, ’•÷Ä÷á’´ ’£’∏÷Ç’∑’°’Ø’∏÷Ç’¥ ’•÷Ñ ’©’• ’∏’∂÷Å’ù\nlst = [1, \"’∏’≤’ª’∏÷Ç’µ’∂\", True]\ntup = tuple(lst)\nprint(tup)\n\n(1, '’∏’≤’ª’∏÷Ç’µ’∂', True)\n\n\n\n# ’•’©’• ’∏÷Ç’¶’∏÷Ç’¥ ’•’∂÷Ñ tuple’´ ’ß’¨’•’¥’•’∂’ø’∂’•÷Ä’® ’¢’°’™’°’∂’•’∂÷Ñ ’ø’°÷Ä’¢’•÷Ä ÷É’∏÷É’∏’≠’°’Ø’°’∂’∂’•÷Ä’´ ’¥’•’ª, ’Ø’°÷Ä’°’∂÷Ñ ’°’∂’•’∂÷Ñ’ù\nprint(tup)\n\na, b = 15, 509\n\na, b, c = tup\nprint(a, b, c, sep=\"\\n\")\n\n(1, '’∏’≤’ª’∏÷Ç’µ’∂', True)\n1\n’∏’≤’ª’∏÷Ç’µ’∂\nTrue\n\n\n\ntuple(i**2 for i in range(10))\n\n\n\n\n# ’•’©’• ’¶’∏÷Ç’ø (i**2 for i in range(10)) ’£÷Ä’•’∂÷Ñ ’Ø’Ω’°÷Ä÷Ñ’•’∂÷Ñ generator ’Ø’∏’π’æ’∏’≤ ’¢’°’∂, ’∏÷Ä’® ’∞’•’ø’∏ ’•’∂÷Ñ ’°’∂÷Å’∂’•’¨’∏÷Ç\n\n(0, 1, 4, 9, 16, 25, 36, 49, 64, 81)\n\n\n\n\n10.1.2 Tuple’´’∂ ’ß’¨’•’¥’•’∂’ø ’°’æ’•’¨’°÷Å’∂’•’¨\n\ntup.append(1)\n\n\n---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\nInput In [8], in &lt;cell line: 1&gt;()\n----&gt; 1 tup.append(1)\n\nAttributeError: 'tuple' object has no attribute 'append'\n\n\n\n\n\"asdas\"[0] = \"A\"\n\n\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\nInput In [11], in &lt;cell line: 1&gt;()\n----&gt; 1 \"asdas\"[0] = \"A\"\n\nTypeError: 'str' object does not support item assignment\n\n\n\n\n# tup.append(\"’∫’°’∂’´÷Ä\")\n\ntup = (15, 508)\nprint(tup[0])\n\ntup[0] = 12\nprint(tup)\n\n15\n\n\n\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\nInput In [12], in &lt;cell line: 13&gt;()\n     10 tup = (15, 508)\n     11 print(tup[0])\n---&gt; 13 tup[0] = 12\n     14 print(tup)\n\nTypeError: 'tuple' object does not support item assignment\n\n\n\n\nimmutable - string, tuple\nmutable - list\n\n\ntup[0] = 0 #  TypeError\n\n\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\nInput In [13], in &lt;cell line: 1&gt;()\n----&gt; 1 tup[0] = 0 #  TypeError\n\nTypeError: 'tuple' object does not support item assignment\n\n\n\n’≥’°÷Ä’∂’•÷Ä’Ω ’´’∂’π, ’∫’•’ø÷Ñ’° ’∂’∏÷Ä tuple ’Ω’°÷Ä÷Ñ’•’∂÷Ñ\n\nnew_tuple = tup + (\"’™’°÷Ä’´’ø\", 509)\nprint(new_tuple)\n\n(15, 508, '’™’°÷Ä’´’ø', 509)\n\n\n\n\n10.1.3 indexing / slicing (’∂’∏÷Ç’µ’∂ ’±÷á ’∏’∂÷Å list’®)\n\nprint(new_tuple[1]) # prints: \"’∏’≤’ª’∏÷Ç’µ’∂\"\n\nprint(new_tuple[1:4]) # prints: ('’∏’≤’ª’∏÷Ç’µ’∂', True, '’™’°÷Ä’´’ø')\n\nprint(new_tuple[-1]) # Output: 509\n\n508\n(508, '’™’°÷Ä’´’ø', 509)\n509\n\n\n\n\n10.1.4 ÷Å’´’Ø’¨ ’∫’ø’ø’æ’•’¨’® (’¨÷Ä’´’æ ’∂’∏÷Ç’µ’∂ ’±÷á)\n\nfor element in new_tuple:\n    print(element)\n\n\n15\n508\n’™’°÷Ä’´’ø\n509\n\n\n\nmax((1,2,3))\n\n3\n\n\n\ntuple(i**2 for i in range(10))\n\n(0, 1, 4, 9, 16, 25, 36, 49, 64, 81)\n\n\n\n\n10.1.5 ‘±’º’°’æ’•’¨’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä\n\ntuple-’∂’•÷Ä’´ ’∞’•’ø ’°’æ’•’¨’´ ’°’∫’°’∞’∏’æ’°, ’∏÷Ä’∏’æ’∞’•’ø÷á ’Ø’°÷Ä’°’∂÷Ñ ’æ’Ω’ø’°’∞ ’¨’´’∂’•’∂÷Ñ ’∏÷Ä ’∏’π ’¥’•’Ø ’¥’•÷Ä tuple-’® ’π’´ ÷É’∏’≠’´\n’∞’´’∑’∏’≤’∏÷Ç’©’µ’°’∂ ’ø’•’Ω’°’∂’Ø’µ’∏÷Ç’∂’´÷Å ’°’æ’•’¨’´ ÷Ö’∫’ø’´’¥’°’¨ ’•’∂",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>8</span>¬† <span class='chapter-title'>06 Tuple, Set, Dictionary</span>"
    ]
  },
  {
    "objectID": "python/06_Tuple_set_dictionary.html#set-’•÷Ä-’¢’°’¶’¥’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä",
    "href": "python/06_Tuple_set_dictionary.html#set-’•÷Ä-’¢’°’¶’¥’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä",
    "title": "8¬† 06 Tuple, Set, Dictionary",
    "section": "10.2 set-’•÷Ä (’¢’°’¶’¥’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä)",
    "text": "10.2 set-’•÷Ä (’¢’°’¶’¥’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä)\n\nmy_set = set() # my_set = {}\n\nprint(type(my_set))\n\n# my_set = {}\n# print(type(my_set))\n\n&lt;class 'set'&gt;\n\n\n\nmy_set = {4, 3, 3, 2}\nprint(my_set)\n\n{2, 3, 4}\n{2, 3, 'ybgrvewq32r4fr', 10, 'asdasdas', 'asdasda'}\n\n\n\nmy_set = set()\n\nfor _ in range(5):\n    my_set.add(input()) # append-’´ ÷É’∏’≠’°÷Ä’•’∂ add\n    print(my_set)\n\n{'1'}\n{'1', '123asdwqee131'}\n{'1', '123asdwqee131', 'sdfsd'}\n{'1', '123asdwqee131', 'sdfsd'}\n{'4', '1', '123asdwqee131', 'sdfsd'}\n\n\n\nfor i in my_set:\n    print(i)\n\n4\n1\n123asdwqee131\nsdfsd\n\n\n\nmy_set1 = {}\nprint(type(my_set1)) # ’¶’£’∏÷Ç’µ’∑ ’•’∂÷Ñ ’¨’´’∂’∏÷Ç’¥\n\n&lt;class 'dict'&gt;\n\n\n\n10.2.1 ’ß’¨’¥’•’∂’ø ’°’æ’•’¨’°÷Å’∂’•’¨ / ’∞’•’º’°÷Å’∂’•’¨\n\nmy_set = {4, 3, 3, 2}\nprint(my_set)\n\nprint(my_set)\n\n# my_set.append()\nmy_set.add(5) # ’∏’π ’©’• ’£÷Ä’∏÷Ç’¥ ’•’∂÷Ñ my_set = my_set.add(4)\nprint(my_set)\n\nmy_set.remove(3)\nprint(my_set)\nprint(my_set.pop())\nprint(my_set)\n\n{2, 3, 4}\n{2, 3, 4}\n{2, 3, 4, 5}\n{2, 4, 5}\n2\n{4, 5}\n\n\n\nfor i in my_set:\n    print(i)\n\n4\n5\n\n\n\n\n10.2.2 ‘≤’°’¶’¥’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä’´ ’∞’•’ø ’£’∏÷Ä’Æ’∏’≤’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä\n\n\n\nimage.png\n\n\n\nset1 = {1, 2, 3, 4}\nset2 = {3, 4, 5, 6}\n\n# ’Ñ’´’°’æ’∏÷Ä’∏÷Ç’¥\nprint(set1.union(set2)) # Output: {1, 2, 3, 4, 5, 6}\n# ’Ø’°’¥ ’ß’¨\n# set1 | set2 (’Ø’°’¥) # caps lock + right shift-’´ ’Ø’∏’≤÷Ñ’® 6\n\n# ’Ä’°’ø’∏÷Ç’¥\nprint(set1.intersection(set2)) # Output: {3, 4}\n# ’Ø’°’¥ ’ß’¨\n# set1 & set2 (÷á) # uppercase 6\n\n# ’è’°÷Ä’¢’•÷Ä’∏÷Ç’©’µ’∏÷Ç’∂\nprint(set1.difference(set2)) # Output: {1, 2}\n# ’Ø’°’¥ ’ß’¨\n# print(set1 - set2)\n\n# ’ç’´’¥’•’ø÷Ä’´’Ø ’ø’°÷Ä’¢’•÷Ä’∏÷Ç’©’µ’∏÷Ç’∂\nprint(set1.symmetric_difference(set2)) # Output: {1, 2, 5, 6}\n# ’Ø’°’¥ ’ß’¨\n# set1 ^ set2 # uppercase 6\n\n{1, 2, 3, 4, 5, 6}\n{3, 4}\n{1, 2}\n{1, 2, 5, 6}\n\n\n\n\n10.2.3 Set comparison\n\na = {1, 2, 3, \"a\", \"b\"}\nb = {2, 1, 3, \"b\"}\n\nprint(a &gt;= b)\n\n# &gt;, &gt;=, &lt;, &lt;=\n\nTrue\n\n\n\n\n10.2.4 ’Ä’•÷Ä’©’°’Ø’°’∂’∏÷Ç’©’µ’∏÷Ç’∂\nforum-’∏÷Ç’¥ ÷Ñ’∂’∂’°÷Ä’Ø’∏÷Ç’¥ set-’•÷Ä’´ ’∞’•÷Ä’©’°’Ø’°’∂’∏÷Ç’©’µ’°’∂ ’æ’•÷Ä’°’¢’•÷Ä’µ’°’¨\n\na = ['’∫’°’∂’´÷Ä', '÷É’´’≤', 11, 12]\nprint(a)\nprint(set(a))\n\n['’∫’°’∂’´÷Ä', '÷É’´’≤', 11, 12]\n{'’∫’°’∂’´÷Ä', 11, 12, '÷É’´’≤'}\n\n\n\nset(a)[0]\n\n\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\nInput In [36], in &lt;cell line: 1&gt;()\n----&gt; 1 set(a)[0]\n\nTypeError: 'set' object is not subscriptable\n\n\n\n\nprint(a)\n# print(set(a)[0])\n\nprint()\nprint(list(set(a)))\nprint(list(set(a))[0])\n\n['’∫’°’∂’´÷Ä', '÷É’´’≤', 11, 12]\n\n['’∫’°’∂’´÷Ä', 11, 12, '÷É’´’≤']\n’∫’°’∂’´÷Ä\n\n\n\nmy_set = {1, 4, 4, 3, 2}\n\nfor element in my_set:\n    print(element)\n\n1\n2\n3\n4\n\n\n\n\n10.2.5 set comprehension\n-5, 6 ’©’æ’•÷Ä’´ ÷Ñ’°’º’°’Ø’∏÷Ç’Ω’´’∂’•÷Ä’´ ’¢’°’¶’¥’∏÷Ç’©’µ’∏÷Ç’∂’® ’Ω’ø’•’≤’Æ’•’¨\n\nlst = []\n\nfor i in range(-5, 6):\n    lst.append(i**2)\nprint(lst)\n\nlst = [i**2 for i in range(-5,6)]\nprint(lst)\n\n[25, 16, 9, 4, 1, 0, 1, 4, 9, 16, 25]\n[25, 16, 9, 4, 1, 0, 1, 4, 9, 16, 25]\n\n\n\ns = set() # s = {}\n\nfor i in range(-5, 6):\n    s.add(i**2)\n    # print(s)\n\nprint(s)\n\n{0, 1, 4, 9, 16, 25}\n\n\n\n[] - list\n() - tuple\n{} - set\n\n\ns = [i**2 for i in range(-5,6)]\nprint(s)\n\ns = tuple(i**2 for i in range(-5,6))\nprint(s)\n\ns = {i**2 for i in range(-5,6)}\nprint(s)\n\n[25, 16, 9, 4, 1, 0, 1, 4, 9, 16, 25]\n(25, 16, 9, 4, 1, 0, 1, 4, 9, 16, 25)\n{0, 1, 4, 9, 16, 25}\n\n\n\n\n10.2.6 ‘ø’°÷Ä’°’∂÷Ñ ’∞’°’∂’£’´’Ω’ø in, sum len ‚Ä§‚Ä§ ÷Ö’£’ø’°’£’∏÷Ä’Æ’•’∂÷Ñ\n\nprint(s)\n\nprint(f\"{4 in s = }\")\nprint(f\"{len(s) = }\")\nprint(f\"{sum(s) = }\")\n\n{0, 1, 4, 9, 16, 25}\n4 in s = True\nlen(s) = 6\nsum(s) = 55",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>8</span>¬† <span class='chapter-title'>06 Tuple, Set, Dictionary</span>"
    ]
  },
  {
    "objectID": "python/06_Tuple_set_dictionary.html#dictionary-’¢’°’º’°÷Ä’°’∂",
    "href": "python/06_Tuple_set_dictionary.html#dictionary-’¢’°’º’°÷Ä’°’∂",
    "title": "8¬† 06 Tuple, Set, Dictionary",
    "section": "10.3 Dictionary (’¢’°’º’°÷Ä’°’∂)",
    "text": "10.3 Dictionary (’¢’°’º’°÷Ä’°’∂)\nJson\n\nanun = [\"aik\", \"bik\"]\nhamarner = [\"+1\", \"+2\"]\n\ncontacts = [[\"aik\", \"+1\"], [\"bik\", \"+2\"]]\n\nAlice-’®’ù 25 ’ø’°÷Ä’•’Ø’°’∂ ’°, Bob-’®’ù 30, Charlie-’∂ 35: Python-’∏’æ ’∫’°’∞’•÷Ñ ’ß’§ ’´’∂÷Ü’∏÷Ä’¥’°÷Å’´’°’∂\n\n10.3.1 ’Ü’•÷Ä’°’Æ’∏÷Ç’©’µ’∏÷Ç’∂\n\nd = {}\nd = dict()\n\nprint(type(d))\n\n&lt;class 'dict'&gt;\n\n\n\ntariqner = {\"Alice\": 25, \"Bob\": 30,\n            \"Charlie\": 35}\n\nprint(type(tariqner))\nprint(tariqner)\n\n&lt;class 'dict'&gt;\n{'Alice': 25, 'Bob': 30, 'Charlie': 35}\n\n\n\nprint(tariqner[\"Alice\"]) # [0]\n\n25\n\n\n\n# ’Ü’∏÷Ä ’¥’°÷Ä’§ ’°’æ’•’¨’°÷Å’∂’•’¨\ntariqner[\"Dumbledore\"] = 40\nprint(tariqner)\n\n{'Alice': 25, 'Bob': 30, 'Charlie': 35, 'Dumbledore': 40}\n\n\n\n# ÷É’∏÷É’∏’≠’•’¨ ’°÷Ä’™’•÷Ñ’®\ntariqner[\"Dumbledore\"] += 1\nprint(tariqner)\n\n{'Alice': 25, 'Bob': 30, 'Dumbledore': 42}\n\n\n\n# ’ª’∂’ª’•’¨ ’¥’°÷Ä’§’∏÷Ç\ndel tariqner[\"Charlie\"] # delete\n\n\nprint(tariqner)\n\n{'Alice': 25, 'Bob': 30, 'Dumbledore': 41}\n\n\n\nprint(tariqner.keys())\nprint(tariqner.values())\n\ndict_keys(['Alice', 'Bob', 'Dumbledore'])\ndict_values([25, 30, 41])\n\n\n\nprint(tariqner.keys()[0])\n\n\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\nInput In [63], in &lt;cell line: 1&gt;()\n----&gt; 1 print(tariqner.keys()[0])\n\nTypeError: 'dict_keys' object is not subscriptable\n\n\n\n\nprint(list(tariqner.keys()))\n\nprint(list(tariqner.keys())[0])\n\n['Alice', 'Bob', 'Dumbledore']\nAlice\n\n\n\ntariqner[1] = \"12312\"\n\n\nprint(tariqner)\n\n12312\n\n\n\ntariqner[False] = \"Barevner\"\n\nprint(tariqner)\n\n{'Alice': 25, 'Bob': 30, 'Dumbledore': 42, 1: 'Barevner', False: 'Barevner'}\n\n\n\ntariqner[False]\n\n'Barevner'\n\n\n\ntariqner[3.14] = \"pi\"\n\n\ntariqner[[1,2]] = 12312\n\n\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\nInput In [79], in &lt;cell line: 1&gt;()\n----&gt; 1 tariqner[[1,2]] = 12312\n\nTypeError: unhashable type: 'list'\n\n\n\n\nfor mard in tariqner: # ’Ø’°’¥ tariqner.keys()\n    print(mard)\n\nAlice\nBob\nDumbledore\n1\nFalse\n3.14\n\n\n\nfor t in tariqner.values():\n    print(t)\n\n25\n30\n42\nBarevner\nBarevner\npi\n\n\n\nprint(tariqner.items())\n\ndict_items([('Alice', 25), ('Bob', 30), ('Dumbledore', 42), (1, 'Barevner'), (False, 'Barevner'), (3.14, 'pi')])\n\n\n\nfor i in tariqner.items():\n    print(i, type(i))\n    \n\n('Alice', 25) &lt;class 'tuple'&gt;\n('Bob', 30) &lt;class 'tuple'&gt;\n('Dumbledore', 42) &lt;class 'tuple'&gt;\n(1, 'Barevner') &lt;class 'tuple'&gt;\n(False, 'Barevner') &lt;class 'tuple'&gt;\n(3.14, 'pi') &lt;class 'tuple'&gt;\n\n\n\nfor i in tariqner.items():\n    name, age = i # i[0], i[1]\n    print(name, age)\n\nAlice 25\nBob 30\nDumbledore 42\n1 Barevner\nFalse Barevner\n3.14 pi\n\n\n\nfor name, age in tariqner.items():\n    print(name, age)\n\nAlice 25\nBob 30\nDumbledore 42\n1 Barevner\nFalse Barevner\n3.14 pi\n\n\n\n\n10.3.2 Methods\n\nprint(len(tariqner))\n\n6\n\n\n\n10.3.2.1 key, value, items\n\nprint(tariqner.keys())\n\ndict_keys(['Alice', 'Bob', 'Dumbledore'])\n\n\n\nprint(list(tariqner.keys()))\n\n['Alice', 'Bob', 'Dumbledore']\n\n\n\nprint(tariqner.values())\nprint(list(tariqner.values()))\n\ndict_values([25, 30, 41])\n[25, 30, 41]\n\n\n\nprint(tariqner.items())\nprint(list(tariqner.items()))\n\ndict_items([('Alice', 25), ('Bob', 30), ('Dumbledore', 41)])\n[('Alice', 25), ('Bob', 30), ('Dumbledore', 41)]\n\n\n\n\n10.3.2.2 ‘±÷Ä’™’•÷Ñ ’Ω’ø’°’∂’°’¨ (get)\n\ntariqner['’™’∏÷Ç’¨’´’•’∂']\n\n\n---------------------------------------------------------------------------\nKeyError                                  Traceback (most recent call last)\nInput In [89], in &lt;cell line: 1&gt;()\n----&gt; 1 tariqner['’™’∏÷Ç’¨’´’•’∂']\n\nKeyError: '’™’∏÷Ç’¨’´’•’∂'\n\n\n\n\ntariqner.get('Alice')\n# ’£÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’¢’°’∂’°’¨’´’∂, ’∏÷Ç ’©’• ’´’∂’π ’∫’•’ø÷Ñ ’° ’æ’•÷Ä’°’§’°÷Ä’±’∂’´ ’•’©’• ’π’Ø’° ’ß’§ ’¢’°’∂’°’¨’´’∂\n\n25\n\n\n\nprint(tariqner.get('’™’∏÷Ç’¨’´’•’∂'))\n\nNone\n\n\n\nprint(tariqner.get('’™’∏÷Ç’¨’´’•’∂', \"’â’Ø’°\"))\nprint(tariqner.get('Alice', \"’â’Ø’°\"))\n\n’â’Ø’°\n25\n\n\n\n\n10.3.2.3 update\n\nprint(tariqner)\nurish_dict = {\"John\": 32, \"Smith\": 32, \"Alice\": 27}\n\ntariqner.update(urish_dict)\n\n\n{'Alice': 32, 'Bob': 30, 'Dumbledore': 42, 1: 'Barevner', False: 'Barevner', 3.14: 'pi', 'John': 32, 'Smith': 32}\n{'Alice': 27, 'Bob': 30, 'Dumbledore': 42, 1: 'Barevner', False: 'Barevner', 3.14: 'pi', 'John': 32, 'Smith': 32, 'Alice Aliceyan': 32}\n\n\n\nprint(tariqner)\n\n{'Alice': 27, 'Bob': 30, 'Dumbledore': 42, 1: 'Barevner', False: 'Barevner', 3.14: 'pi', 'John': 32, 'Smith': 32}\n\n\n\n\n\n10.3.3 Dict comprehension\n\n{i for i in range(-5,6)}\n\n{-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5}\n\n\n\n{i:i**2 for i in range(-5,6)}\n\n{-5: 25, -4: 16, -3: 9, -2: 4, -1: 1, 0: 0, 1: 1, 2: 4, 3: 9, 4: 16, 5: 25}\n\n\n\n{key:value for ...}\n\n\n\n10.3.4 Nested (’∂’•÷Ä’§÷Ä’æ’°’Æ) dictionaries\n\ncontacts = {\n    \"Alice\": {\"phone\": \"123-456-7890\", \"email\": \"alice@gmail.com\"},\n    \"Bob\": {\"phone\": \"098-78-88-78\", \"address\": \"Bobastan\"}\n}\n\n\nprint(contacts.keys())\n\ndict_keys(['Alice', 'Bob'])\n\n\n\nprint(contacts['Bob'].keys())\n\ndict_keys(['phone', 'address'])\n\n\n\nprint(contacts[\"Bob\"][\"phone\"])\n\n098-78-88-78\n\n\n\ncontacts['Bob']['email'] = \"123123@..$\"\nprint(contacts['Bob'])\n\n{'phone': '098-78-88-78', 'address': 'Bobastan', 'email': '123123@..$'}",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>8</span>¬† <span class='chapter-title'>06 Tuple, Set, Dictionary</span>"
    ]
  },
  {
    "objectID": "python/06_Tuple_set_dictionary.html#’∞’´’¥’∂’°’Ø’°’∂-’ø’∂’°’µ’´’∂",
    "href": "python/06_Tuple_set_dictionary.html#’∞’´’¥’∂’°’Ø’°’∂-’ø’∂’°’µ’´’∂",
    "title": "8¬† 06 Tuple, Set, Dictionary",
    "section": "13.1 ’Ä’´’¥’∂’°’Ø’°’∂ ’ø’∂’°’µ’´’∂",
    "text": "13.1 ’Ä’´’¥’∂’°’Ø’°’∂ ’ø’∂’°’µ’´’∂\n\nProfound ’¢’°’™’´’∂ 24 (tuple-’∂’•÷Ä ÷á set-’•÷Ä) - ’¨÷Ä’´’æ\nProfound ’¢’°’™’´’∂ 25 (dictionary) - ’¨÷Ä’´’æ",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>8</span>¬† <span class='chapter-title'>06 Tuple, Set, Dictionary</span>"
    ]
  },
  {
    "objectID": "python/06_Tuple_set_dictionary.html#’¨’∏÷Ç’Æ’∏÷Ç’¥’∂’•÷Ä",
    "href": "python/06_Tuple_set_dictionary.html#’¨’∏÷Ç’Æ’∏÷Ç’¥’∂’•÷Ä",
    "title": "8¬† 06 Tuple, Set, Dictionary",
    "section": "13.2 ‘º’∏÷Ç’Æ’∏÷Ç’¥’∂’•÷Ä",
    "text": "13.2 ‘º’∏÷Ç’Æ’∏÷Ç’¥’∂’•÷Ä\n\n’à÷Ä’∏’∑ ’≠’∂’§’´÷Ä’∂’•÷Ä’´ ’æ’´’§’•’∏’¨’∏÷Ç’Æ’∏÷Ç’¥’∂’•÷Ä (ToDo)\n‘≤’∏’¨’∏÷Ä ’≠’∂’§’´÷Ä’∂’•÷Ä’´ ’¨’∏÷Ç’Æ’∏÷Ç’¥’∂’•÷Ä / ’∂’∑’∏÷Ç’¥’∂’•÷Ä (ToDo)",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>8</span>¬† <span class='chapter-title'>06 Tuple, Set, Dictionary</span>"
    ]
  },
  {
    "objectID": "python/07_Functions_1.html",
    "href": "python/07_Functions_1.html",
    "title": "9¬† 07 Functions 1",
    "section": "",
    "text": "9.1 ’Ñ’∏’ø’´’æ’°÷Å’´’∏’∂ ÷Ö÷Ä’´’∂’°’Ø\n’ä’°’ø’Ø’•÷Ä’°÷Å÷Ä’•÷Ñ ’ø’°’∂’® ’°’∞’°’æ’∏÷Ä ÷É’∏÷Ñ÷Ä ’π’°’µ’∂’´’Ø ’∏÷Ç’∂’•’∂÷Ñ’ù ’¥’´ ’∞’∏’£’°’∂’∏÷Å, ’¨’´÷Ñ’® ’∞’µ’∏÷Ç÷Ä’° ’•’Ø’•’¨ ’¥’•’∂÷Ñ ’∫’•’ø÷Ñ’° ’π’°’µ’•÷Ä’® ’Ω’°÷Ä÷Ñ’•’∂÷Ñ, ’∏÷Ä’∂’° ’¨’´’∂’•’¨’∏÷Ç ’¥’•÷Ä ’¥’∏’ø’•÷Å’∏÷Ç’¥’®\n’Ä’°÷Ä÷Å’∂’•’¨ 1. ’ç÷á/’Ø’°’∂’°’π/’¥÷Ä’£’°’µ’´’∂ ‚Ä§‚Ä§‚Ä§ 2. ‘ª’∂’π÷Ñ’°’û’∂ ÷Ñ’°’≤÷Å÷Ä 3. ‘º’´’¥’∏’∂ ÷Ñ÷Å’∏÷Ç’û’¥ ’•’¥\n’Ä’°÷Ä÷Å’∂’•’¨’∏÷Ç÷Å ’∞’•’ø’∏ \\ ’ã’∏÷Ç÷Ä’® ’§’∂’•’¨ ’•’º’° \\ ‚Ä§‚Ä§‚Ä§ \\ ÷á ’´’∞’°÷Ä’Ø’•, ’¥’°’ø’∏÷Ç÷Å’∏÷Ç’¥ ’•’∂÷Ñ ’Ω’´÷Ä’∏’æ\n’Ñ’•’µ’¨ ’£÷Ä’•’¨’∏÷Ç÷Å ’∏÷Ç’≤’≤’°’Ø’´ ’°’∂’∏÷Ç’∂’∂ ’•÷Ñ ÷É’∏’≠’∏÷Ç’¥ ’∏’π ’©’• ’°’¥’•’∂’´’∂’π’®\nmard1_tesak = input('’Ω÷á/’Ø’°’∂’°’π/’¥÷Ä’£’°’µ’´’∂')\nmard1_qaxcr = float(input('‘ª’∂’π÷Ñ’°’û’∂ ÷Ñ’°’≤÷Å÷Ä'))\nmard1_limon = bool(input('‘º’´’¥’∏’∂ ’Ø’∏÷Ç’¶’•’û÷Ñ'))\n\nprint('’ª’∏÷Ç÷Ä’® ’§÷Ä’•÷Å’´ ’•’º’°')\nprint(\"’∞’°’¥’°’∫’°’ø’°’Ω’≠’°’∂ ÷Ñ’°’∂’°’Ø’´ ÷Ñ’°’≤÷Å÷Ä ’°’æ’•’¨’°÷Å’∂’•’¨\")\nprint(\"’¨’´’¥’∏’∂ ’°’æ’•’¨’°÷Å’∂’•’¨ ’®’Ω’ø ÷Å’°’∂’Ø’∏÷Ç’©’µ’°’∂\")\nprint('’¥’°’ø’∏÷Ç÷Å’•’¨ ’Ω’´÷Ä’∏’æ')\n\n\n’Ω÷á/’Ø’°’∂’°’π/’¥÷Ä’£’°’µ’´’∂’Ω÷á\n‘ª’∂’π÷Ñ’°’û’∂ ÷Ñ’°’≤÷Å÷Ä2\n‘º’´’¥’∏’∂ ’Ø’∏÷Ç’¶’•’û÷ÑTrue\n’ª’∏÷Ç÷Ä’® ’§’∂’•÷Å’´ ’•’º’°\n’∞’°’¥’°’∫’°’ø’°’Ω’≠’°’∂ ÷Ñ’°’∂’°’Ø’´ ÷Ñ’°’≤÷Å÷Ä ’°’æ’•’¨’°÷Å’∂’•’¨\n’¨’´’¥’∏’∂ ’°’æ’•’¨’°÷Å’∂’•’¨ ’®’Ω’ø ÷Å’°’∂’Ø’∏÷Ç’©’µ’°’∂\n’¥’°’ø’∏÷Ç÷Å’•’¨ ’Ω’´÷Ä’∏’æ\nmard1_tesak = input('’Ω÷á/’Ø’°’∂’°’π/’¥÷Ä’£’°’µ’´’∂')\nmard1_qaxcr = float(input('‘ª’∂’π÷Ñ’°’û’∂ ÷Ñ’°’≤÷Å÷Ä'))\nmard1_limon = bool(input('‘º’´’¥’∏’∂ ’Ø’∏÷Ç’¶’•’û÷Ñ'))\n\n\nprint('’ª’∏÷Ç÷Ä’® ’§’∂’•÷Å’´ ’•’º’°')\nprint(\"’∞’°’¥’°’∫’°’ø’°’Ω’≠’°’∂ ÷Ñ’°’∂’°’Ø’´ ÷Ñ’°’≤÷Å÷Ä ’°’æ’•’¨’°÷Å’∂’•’¨\")\nprint(\"’¨’´’¥’∏’∂ ’°’æ’•’¨’°÷Å’∂’•’¨ ’®’Ω’ø ÷Å’°’∂’Ø’∏÷Ç’©’µ’°’∂\")\nprint('’¥’°’ø’∏÷Ç÷Å’•’¨ ’Ω’´÷Ä’∏’æ')\n\nmarda2_tesak = input('’Ω÷á/’Ø’°’∂’°’π/’¥÷Ä’£’°’µ’´’∂')\nmarda2_qaxcr = float(input('‘ª’∂’π÷Ñ’°’û’∂ ÷Ñ’°’≤÷Å÷Ä'))\nmarda2_limon = bool(input('‘º’´’¥’∏’∂ ’Ø’∏÷Ç’¶’•’û÷Ñ'))\n\n\nprint('’ª’∏÷Ç÷Ä’® ’§’∂’•÷Å’´ ’•’º’°')\nprint(\"’∞’°’¥’°’∫’°’ø’°’Ω’≠’°’∂ ÷Ñ’°’∂’°’Ø’´ ÷Ñ’°’≤÷Å÷Ä ’°’æ’•’¨’°÷Å’∂’•’¨\")\nprint(\"’¨’´’¥’∏’∂ ’°’æ’•’¨’°÷Å’∂’•’¨ ’®’Ω’ø ÷Å’°’∂’Ø’∏÷Ç’©’µ’°’∂\")\nprint('’¥’°’ø’∏÷Ç÷Å’•’¨ ’Ω’´÷Ä’∏’æ')\n\n\n---------------------------------------------------------------------------\nKeyboardInterrupt                         Traceback (most recent call last)\n&lt;ipython-input-2-4e41ed5b2806&gt; in &lt;cell line: 1&gt;()\n----&gt; 1 mard1_tesak = input('’Ω÷á/’Ø’°’∂’°’π/’¥÷Ä’£’°’µ’´’∂')\n      2 mard1_qaxcr = float(input('‘ª’∂’π÷Ñ’°’û’∂ ÷Ñ’°’≤÷Å÷Ä'))\n      3 mard1_limon = bool(input('‘º’´’¥’∏’∂ ’Ø’∏÷Ç’¶’•’û÷Ñ'))\n      4 \n      5 \n\n/usr/local/lib/python3.10/dist-packages/ipykernel/kernelbase.py in raw_input(self, prompt)\n    849                 \"raw_input was called, but this frontend does not support input requests.\"\n    850             )\n--&gt; 851         return self._input_request(str(prompt),\n    852             self._parent_ident,\n    853             self._parent_header,\n\n/usr/local/lib/python3.10/dist-packages/ipykernel/kernelbase.py in _input_request(self, prompt, ident, parent, password)\n    893             except KeyboardInterrupt:\n    894                 # re-raise KeyboardInterrupt, to truncate traceback\n--&gt; 895                 raise KeyboardInterrupt(\"Interrupted by user\") from None\n    896             except Exception as e:\n    897                 self.log.warning(\"Invalid Message:\", exc_info=True)\n\nKeyboardInterrupt: Interrupted by user\n’©’•’µ_’Ω’°÷Ä÷Ñ’•’¨(\"’ç÷á\", 2, True)\n’©’•’µ_’Ω’°÷Ä÷Ñ’•’¨(\"’Ñ÷Ä’£’°’µ’´’∂\", 0, False)\n’•’Ø’•÷Ñ ÷É’°’µ’©’∂’∏÷Ç’¥ ’ø’•’Ω’∂’•’∂÷Ñ ’∏’∂÷Å ’•’∂÷Ñ ’Ω’°÷Ä÷Ñ’∏÷Ç’¥ ’Ω’•’∂÷Å ’©’•’µ’´ ’°’∫’°÷Ä’°’ø’∂’•÷Ä ÷á ’∏’π ’¥’´’°’µ’∂",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>9</span>¬† <span class='chapter-title'>07 Functions 1</span>"
    ]
  },
  {
    "objectID": "python/07_Functions_1.html#’¥’∏’ø’´’æ’°÷Å’´’∏’∂-÷Ö÷Ä’´’∂’°’Ø",
    "href": "python/07_Functions_1.html#’¥’∏’ø’´’æ’°÷Å’´’∏’∂-÷Ö÷Ä’´’∂’°’Ø",
    "title": "9¬† 07 Functions 1",
    "section": "",
    "text": "’©’•’µ_’Ω’°÷Ä÷Ñ’•’¨(tesak, qaxcr, limon):\n    ’Ω’°÷Ä÷Ñ’•’¨ ’©’•’µ’®\n    ’æ’•÷Ä’°’§’°÷Ä’±’∂’•’¨",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>9</span>¬† <span class='chapter-title'>07 Functions 1</span>"
    ]
  },
  {
    "objectID": "python/07_Functions_1.html#÷Ü’∏÷Ç’∂’Ø÷Å’´’°’∂’•÷Ä-’Ω’Ø’´’¶’¢",
    "href": "python/07_Functions_1.html#÷Ü’∏÷Ç’∂’Ø÷Å’´’°’∂’•÷Ä-’Ω’Ø’´’¶’¢",
    "title": "9¬† 07 Functions 1",
    "section": "9.2 ’ñ’∏÷Ç’∂’Ø÷Å’´’°’∂’•÷Ä, ’Ω’Ø’´’¶’¢",
    "text": "9.2 ’ñ’∏÷Ç’∂’Ø÷Å’´’°’∂’•÷Ä, ’Ω’Ø’´’¶’¢\n\nmard1 = input()\nprint(f'‘≤’°÷Ä÷á {mard1}')\nprint(\"\"\"’à’û’∂÷Å ’•’Ω,\n         ’ø’∂’•÷Å’´÷Ñ ’¨’°’û’æ ’•’∂,\n         ’ß’¨’´’û ’•’∂ ’∞’´’∂ ’ø’∂’•÷Ä’∂ ’•÷Ñ ’¥’∂’∏÷Ç’¥,\n         ’©’∏÷Ç’©’® ’©’°’û÷É ’•÷Ñ ’ø’°’¨’´’Ω,\n         ’ß’Ω ’∂’´’∞’°÷Ä’•’û’¨ ’•’Ω ’∞’° ’∏’∂÷Å-’∏÷Ä,\n         ’¢’° ’π’•’û’Ω ’∫’Ω’°’Ø’æ’∏÷Ç’¥,\n         ’æ’°’≠’ø’∂’° ’ß ’°÷Ä’§’•’∂,\n         ’¥’•’∂÷Ñ ’ß’¨ ’•’∂÷Ñ ’π’ß ’©’∏’º ’∏÷Ç’¶’∏÷Ç’¥\n         \"\"\")\n\nmard2 = input()\nprint(f'‘≤’°÷Ä÷á {mard2}')\nprint(\"\"\"’à’û’∂÷Å ’•’Ω,\n         ’ø’∂’•÷Å’´÷Ñ ’¨’°’û’æ ’•’∂,\n         ’ß’¨’´’û ’•’∂ ’∞’´’∂ ’ø’∂’•÷Ä’∂ ’•÷Ñ ’¥’∂’∏÷Ç’¥,\n         ’©’∏÷Ç’©’® ’©’°’û÷É ’•÷Ñ ’ø’°’¨’´’Ω,\n         ’ß’Ω ’∂’´’∞’°÷Ä’•’û’¨ ’•’Ω ’∞’° ’∏’∂÷Å-’∏÷Ä,\n         ’¢’° ’π’•’û’Ω ’∫’Ω’°’Ø’æ’∏÷Ç’¥,\n         ’æ’°’≠’ø’∂’° ’ß ’°÷Ä’§’•’∂,\n         ’¥’•’∂÷Ñ ’ß’¨ ’•’∂÷Ñ ’π’ß ’©’∏’º ’∏÷Ç’¶’∏÷Ç’¥\n         \"\"\")\n\nmard3 = input()\nprint(f'‘≤’°÷Ä÷á {mard3}')\nprint(\"\"\"’à’û’∂÷Å ’•’Ω,\n         ’ø’∂’•÷Å’´÷Ñ ’¨’°’û’æ ’•’∂,\n         ’ß’¨’´’û ’•’∂ ’∞’´’∂ ’ø’∂’•÷Ä’∂ ’•÷Ñ ’¥’∂’∏÷Ç’¥,\n         ’©’∏÷Ç’©’® ’©’°’û÷É ’•÷Ñ ’ø’°’¨’´’Ω,\n         ’ß’Ω ’∂’´’∞’°÷Ä’•’û’¨ ’•’Ω ’∞’° ’∏’∂÷Å-’∏÷Ä,\n         ’¢’° ’π’•’û’Ω ’∫’Ω’°’Ø’æ’∏÷Ç’¥,\n         ’æ’°’≠’ø’∂’° ’ß ’°÷Ä’§’•’∂,\n         ’¥’•’∂÷Ñ ’ß’¨ ’•’∂÷Ñ ’π’ß ’©’∏’º ’∏÷Ç’¶’∏÷Ç’¥\n         \"\"\")\n\nmard4 = input()\nprint(f'‘≤’°÷Ä÷á {mard4}')\nprint(\"\"\"’à’û’∂÷Å ’•’Ω,\n         ’ø’∂’•÷Å’´÷Ñ ’¨’°’û’æ ’•’∂,\n         ’ß’¨’´’û ’•’∂ ’∞’´’∂ ’ø’∂’•÷Ä’∂ ’•÷Ñ ’¥’∂’∏÷Ç’¥,\n         ’©’∏÷Ç’©’® ’©’°’û÷É ’•÷Ñ ’ø’°’¨’´’Ω,\n         ’ß’Ω ’∂’´’∞’°÷Ä’•’û’¨ ’•’Ω ’∞’° ’∏’∂÷Å-’∏÷Ä,\n         ’¢’° ’π’•’û’Ω ’∫’Ω’°’Ø’æ’∏÷Ç’¥,\n         ’æ’°’≠’ø’∂’° ’ß ’°÷Ä’§’•’∂,\n         ’¥’•’∂÷Ñ ’ß’¨ ’•’∂÷Ñ ’π’ß ’©’∏’º ’∏÷Ç’¶’∏÷Ç’¥\n         \"\"\")\n\n‘≤’°÷Ä÷á qwefdbg\n’à’û’∂÷Å ’•’Ω,\n         ’ø’∂’•÷Å’´÷Ñ ’¨’°’û’æ ’•’∂,\n         ’ß’¨’´’û ’•’∂ ’∞’´’∂ ’ø’∂’•÷Ä’∂ ’•÷Ñ ’¥’∂’∏÷Ç’¥,\n         ’©’∏÷Ç’©’® ’©’°’û÷É ’•÷Ñ ’ø’°’¨’´’Ω,\n         ’ß’Ω ’∂’´’∞’°÷Ä’•’û’¨ ’•’Ω ’∞’° ’∏’∂÷Å-’∏÷Ä,\n         ’¢’° ’π’•’û’Ω ’∫’Ω’°’Ø’æ’∏÷Ç’¥,\n         ’æ’°’≠’ø’∂’° ’ß ’°÷Ä’§’•’∂,\n         ’¥’•’∂÷Ñ ’ß’¨ ’•’∂÷Ñ ’π’ß ’©’∏’º ’∏÷Ç’¶’∏÷Ç’¥\n         \n‘≤’°÷Ä÷á dsvfbg\n’à’û’∂÷Å ’•’Ω,\n         ’ø’∂’•÷Å’´÷Ñ ’¨’°’û’æ ’•’∂,\n         ’ß’¨’´’û ’•’∂ ’∞’´’∂ ’ø’∂’•÷Ä’∂ ’•÷Ñ ’¥’∂’∏÷Ç’¥,\n         ’©’∏÷Ç’©’® ’©’°’û÷É ’•÷Ñ ’ø’°’¨’´’Ω,\n         ’ß’Ω ’∂’´’∞’°÷Ä’•’û’¨ ’•’Ω ’∞’° ’∏’∂÷Å-’∏÷Ä,\n         ’¢’° ’π’•’û’Ω ’∫’Ω’°’Ø’æ’∏÷Ç’¥,\n         ’æ’°’≠’ø’∂’° ’ß ’°÷Ä’§’•’∂,\n         ’¥’•’∂÷Ñ ’ß’¨ ’•’∂÷Ñ ’π’ß ’©’∏’º ’∏÷Ç’¶’∏÷Ç’¥\n         \n‘≤’°÷Ä÷á dsfg\n’à’û’∂÷Å ’•’Ω,\n         ’ø’∂’•÷Å’´÷Ñ ’¨’°’û’æ ’•’∂,\n         ’ß’¨’´’û ’•’∂ ’∞’´’∂ ’ø’∂’•÷Ä’∂ ’•÷Ñ ’¥’∂’∏÷Ç’¥,\n         ’©’∏÷Ç’©’® ’©’°’û÷É ’•÷Ñ ’ø’°’¨’´’Ω,\n         ’ß’Ω ’∂’´’∞’°÷Ä’•’û’¨ ’•’Ω ’∞’° ’∏’∂÷Å-’∏÷Ä,\n         ’¢’° ’π’•’û’Ω ’∫’Ω’°’Ø’æ’∏÷Ç’¥,\n         ’æ’°’≠’ø’∂’° ’ß ’°÷Ä’§’•’∂,\n         ’¥’•’∂÷Ñ ’ß’¨ ’•’∂÷Ñ ’π’ß ’©’∏’º ’∏÷Ç’¶’∏÷Ç’¥\n         \n‘≤’°÷Ä÷á dgf\n’à’û’∂÷Å ’•’Ω,\n         ’ø’∂’•÷Å’´÷Ñ ’¨’°’û’æ ’•’∂,\n         ’ß’¨’´’û ’•’∂ ’∞’´’∂ ’ø’∂’•÷Ä’∂ ’•÷Ñ ’¥’∂’∏÷Ç’¥,\n         ’©’∏÷Ç’©’® ’©’°’û÷É ’•÷Ñ ’ø’°’¨’´’Ω,\n         ’ß’Ω ’∂’´’∞’°÷Ä’•’û’¨ ’•’Ω ’∞’° ’∏’∂÷Å-’∏÷Ä,\n         ’¢’° ’π’•’û’Ω ’∫’Ω’°’Ø’æ’∏÷Ç’¥,\n         ’æ’°’≠’ø’∂’° ’ß ’°÷Ä’§’•’∂,\n         ’¥’•’∂÷Ñ ’ß’¨ ’•’∂÷Ñ ’π’ß ’©’∏’º ’∏÷Ç’¶’∏÷Ç’¥",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>9</span>¬† <span class='chapter-title'>07 Functions 1</span>"
    ]
  },
  {
    "objectID": "python/07_Functions_1.html#’°’º’°’∂÷Å-’∏’π-’¥’´-’¢’°’∂-÷Ü’∏÷Ç’∂÷Å’Ø’´’°",
    "href": "python/07_Functions_1.html#’°’º’°’∂÷Å-’∏’π-’¥’´-’¢’°’∂-÷Ü’∏÷Ç’∂÷Å’Ø’´’°",
    "title": "9¬† 07 Functions 1",
    "section": "9.3 ‘±’º’°’∂÷Å ’∏’π ’¥’´ ’¢’°’∂ ÷Ü’∏÷Ç’∂÷Å’Ø’´’°",
    "text": "9.3 ‘±’º’°’∂÷Å ’∏’π ’¥’´ ’¢’°’∂ ÷Ü’∏÷Ç’∂÷Å’Ø’´’°\n\ndef harcupordz_anel(): # define (’Ω’°’∞’¥’°’∂’∏÷Ç’¥)\n    print(\"\"\"’à’û’∂÷Å ’•’Ω,\n         ’ø’∂’•÷Å’´÷Ñ ’¨’°’û’æ ’•’∂,\n         ’ß’¨’´’û ’•’∂ ’∞’´’∂ ’ø’∂’•÷Ä’∂ ’•÷Ñ ’¥’∂’∏÷Ç’¥,\n         ’©’∏÷Ç’©’® ’©’°’û÷É ’•÷Ñ ’ø’°’¨’´’Ω,\n         ’ß’Ω ’∂’´’∞’°÷Ä’•’û’¨ ’•’Ω ’∞’° ’∏’∂÷Å-’∏÷Ä,\n         ’¢’° ’π’•’û’Ω ’∫’Ω’°’Ø’æ’∏÷Ç’¥,\n         ’æ’°’≠’ø’∂’° ’ß ’°÷Ä’§’•’∂,\n         ’¥’•’∂÷Ñ ’ß’¨ ’•’∂÷Ñ ’π’ß ’©’∏’º ’∏÷Ç’¶’∏÷Ç’¥\n         \"\"\")\n    # return 1\n\n\nmard1 = input()\nprint(f'‘≤’°÷Ä÷á {mard1}')\na = harcupordz_anel()\nprint(a)\n\nmard2 = input()\nprint(f'‘≤’°÷Ä÷á {mard2}')\nharcupordz_anel()\n\n‘≤’°÷Ä÷á saasda\n’à’û’∂÷Å ’•’Ω,\n         ’ø’∂’•÷Å’´÷Ñ ’¨’°’û’æ ’•’∂,\n         ’ß’¨’´’û ’•’∂ ’∞’´’∂ ’ø’∂’•÷Ä’∂ ’•÷Ñ ’¥’∂’∏÷Ç’¥,\n         ’©’∏÷Ç’©’® ’©’°’û÷É ’•÷Ñ ’ø’°’¨’´’Ω,\n         ’ß’Ω ’∂’´’∞’°÷Ä’•’û’¨ ’•’Ω ’∞’° ’∏’∂÷Å-’∏÷Ä,\n         ’¢’° ’π’•’û’Ω ’∫’Ω’°’Ø’æ’∏÷Ç’¥,\n         ’æ’°’≠’ø’∂’° ’ß ’°÷Ä’§’•’∂,\n         ’¥’•’∂÷Ñ ’ß’¨ ’•’∂÷Ñ ’π’ß ’©’∏’º ’∏÷Ç’¶’∏÷Ç’¥\n         \nNone\n‘≤’°÷Ä÷á \n’à’û’∂÷Å ’•’Ω,\n         ’ø’∂’•÷Å’´÷Ñ ’¨’°’û’æ ’•’∂,\n         ’ß’¨’´’û ’•’∂ ’∞’´’∂ ’ø’∂’•÷Ä’∂ ’•÷Ñ ’¥’∂’∏÷Ç’¥,\n         ’©’∏÷Ç’©’® ’©’°’û÷É ’•÷Ñ ’ø’°’¨’´’Ω,\n         ’ß’Ω ’∂’´’∞’°÷Ä’•’û’¨ ’•’Ω ’∞’° ’∏’∂÷Å-’∏÷Ä,\n         ’¢’° ’π’•’û’Ω ’∫’Ω’°’Ø’æ’∏÷Ç’¥,\n         ’æ’°’≠’ø’∂’° ’ß ’°÷Ä’§’•’∂,\n         ’¥’•’∂÷Ñ ’ß’¨ ’•’∂÷Ñ ’π’ß ’©’∏’º ’∏÷Ç’¶’∏÷Ç’¥",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>9</span>¬† <span class='chapter-title'>07 Functions 1</span>"
    ]
  },
  {
    "objectID": "python/07_Functions_1.html#’∫’°÷Ä’°’¥’•’ø÷Ä’∏’æ-÷Ü’∏÷Ç’∂÷Å’Ø’´’°",
    "href": "python/07_Functions_1.html#’∫’°÷Ä’°’¥’•’ø÷Ä’∏’æ-÷Ü’∏÷Ç’∂÷Å’Ø’´’°",
    "title": "9¬† 07 Functions 1",
    "section": "9.4 ’ä’°÷Ä’°’¥’•’ø÷Ä’∏’æ ÷Ü’∏÷Ç’∂÷Å’Ø’´’°",
    "text": "9.4 ’ä’°÷Ä’°’¥’•’ø÷Ä’∏’æ ÷Ü’∏÷Ç’∂÷Å’Ø’´’°\n\nhelp(round)\n\nHelp on built-in function round in module builtins:\n\nround(number, ndigits=None)\n    Round a number to a given precision in decimal digits.\n    \n    The return value is an integer if ndigits is omitted or None.  Otherwise\n    the return value has the same type as the number.  ndigits may be negative.\n\n\n\n\nprint(round(3.5))\n\n4\n\n\n\ndef harcupordz_anel(name):\n    print(f'‘≤’°÷Ä÷á {name}')\n    print(\"\"\"’à’û’∂÷Å ’•’Ω,\n         ’ø’∂’•÷Å’´÷Ñ ’¨’°’û’æ ’•’∂,\n         ’ß’¨’´’û ’•’∂ ’∞’´’∂ ’ø’∂’•÷Ä’∂ ’•÷Ñ ’¥’∂’∏÷Ç’¥,\n         ’©’∏÷Ç’©’® ’©’°’û÷É ’•÷Ñ ’ø’°’¨’´’Ω,\n         ’ß’Ω ’∂’´’∞’°÷Ä’•’û’¨ ’•’Ω ’∞’° ’∏’∂÷Å-’∏÷Ä,\n         ’¢’° ’π’•’û’Ω ’∫’Ω’°’Ø’æ’∏÷Ç’¥,\n         ’æ’°’≠’ø’∂’° ’ß ’°÷Ä’§’•’∂,\n         ’¥’•’∂÷Ñ ’ß’¨ ’•’∂÷Ñ ’π’ß ’©’∏’º ’∏÷Ç’¶’∏÷Ç’¥\n         \"\"\")\n\n\nmard1 = input()\n\nname = \"A\"\nharcupordz_anel(mard1)\n\n‘≤’°÷Ä÷á sdadas\n’à’û’∂÷Å ’•’Ω,\n         ’ø’∂’•÷Å’´÷Ñ ’¨’°’û’æ ’•’∂,\n         ’ß’¨’´’û ’•’∂ ’∞’´’∂ ’ø’∂’•÷Ä’∂ ’•÷Ñ ’¥’∂’∏÷Ç’¥,\n         ’©’∏÷Ç’©’® ’©’°’û÷É ’•÷Ñ ’ø’°’¨’´’Ω,\n         ’ß’Ω ’∂’´’∞’°÷Ä’•’û’¨ ’•’Ω ’∞’° ’∏’∂÷Å-’∏÷Ä,\n         ’¢’° ’π’•’û’Ω ’∫’Ω’°’Ø’æ’∏÷Ç’¥,\n         ’æ’°’≠’ø’∂’° ’ß ’°÷Ä’§’•’∂,\n         ’¥’•’∂÷Ñ ’ß’¨ ’•’∂÷Ñ ’π’ß ’©’∏’º ’∏÷Ç’¶’∏÷Ç’¥\n         \n\n\n‘ø’°÷Ä’°’∂÷Ñ ’∂’∏÷Ç’µ’∂’´’Ω’Ø ’Ω’•’∂÷Å ’°’∂’•’∂÷Ñ’ù\n\ndef hacupordz_anel():\n    anun = input()\n    print(f'‘≤’°÷Ä÷á {anun}')\n    print(\"\"\"’à’û’∂÷Å ’•’Ω,\n         ’ø’∂’•÷Å’´÷Ñ ’¨’°’û’æ ’•’∂,\n         ’ß’¨’´’û ’•’∂ ’∞’´’∂ ’ø’∂’•÷Ä’∂ ’•÷Ñ ’¥’∂’∏÷Ç’¥,\n         ’©’∏÷Ç’©’® ’©’°’û÷É ’•÷Ñ ’ø’°’¨’´’Ω,\n         ’ß’Ω ’∂’´’∞’°÷Ä’•’û’¨ ’•’Ω ’∞’° ’∏’∂÷Å-’∏÷Ä,\n         ’¢’° ’π’•’û’Ω ’∫’Ω’°’Ø’æ’∏÷Ç’¥,\n         ’æ’°’≠’ø’∂’° ’ß ’°÷Ä’§’•’∂,\n         ’¥’•’∂÷Ñ ’ß’¨ ’•’∂÷Ñ ’π’ß ’©’∏’º ’∏÷Ç’¶’∏÷Ç’¥\n         \"\"\")\n\n\nprint(anun)\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\n&lt;ipython-input-16-cdee89ff6ea4&gt; in &lt;cell line: 1&gt;()\n----&gt; 1 print(anun)\n\nNameError: name 'anun' is not defined\n\n\n\n\nhacupordz_anel()\n\n1234\n‘≤’°÷Ä÷á 1234\n’à’û’∂÷Å ’•’Ω,\n         ’ø’∂’•÷Å’´÷Ñ ’¨’°’û’æ ’•’∂,\n         ’ß’¨’´’û ’•’∂ ’∞’´’∂ ’ø’∂’•÷Ä’∂ ’•÷Ñ ’¥’∂’∏÷Ç’¥,\n         ’©’∏÷Ç’©’® ’©’°’û÷É ’•÷Ñ ’ø’°’¨’´’Ω,\n         ’ß’Ω ’∂’´’∞’°÷Ä’•’û’¨ ’•’Ω ’∞’° ’∏’∂÷Å-’∏÷Ä,\n         ’¢’° ’π’•’û’Ω ’∫’Ω’°’Ø’æ’∏÷Ç’¥,\n         ’æ’°’≠’ø’∂’° ’ß ’°÷Ä’§’•’∂,\n         ’¥’•’∂÷Ñ ’ß’¨ ’•’∂÷Ñ ’π’ß ’©’∏’º ’∏÷Ç’¶’∏÷Ç’¥\n         \nNone\n\n\n\n9.4.1 ‘ø’°÷Ä’° ’∂’°÷á ’¥’´ ÷Ñ’°’∂’´ ’°÷Ä’£’∏÷Ç’¥’•’∂’ø ’∏÷Ç’∂’•’∂’°\n\ndef hashvel_caxsy(poncikneri_qanak, ponchikneri_gin):\n    print(poncikneri_qanak * ponchikneri_gin)\n\n\nhashvel_caxsy(3, 150)\n\n450\n\n\n\na = hashvel_caxsy(3, 150)\nprint(a)\n\nif a &gt; 300:\n    print(\"shat\")\n\n450\nNone\n\n\n\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\nInput In [16], in &lt;cell line: 4&gt;()\n      1 a = hashvel_caxsy(3, 150)\n      2 print(a)\n----&gt; 4 if a &gt; 300:\n      5     print(\"shat\")\n\nTypeError: '&gt;' not supported between instances of 'NoneType' and 'int'\n\n\n\n\ngin\n\n330",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>9</span>¬† <span class='chapter-title'>07 Functions 1</span>"
    ]
  },
  {
    "objectID": "python/07_Functions_1.html#’Ø’°’º’∏÷Ç÷Å’æ’°’Æ÷Ñ’®",
    "href": "python/07_Functions_1.html#’Ø’°’º’∏÷Ç÷Å’æ’°’Æ÷Ñ’®",
    "title": "9¬† 07 Functions 1",
    "section": "9.5 ‘ø’°’º’∏÷Ç÷Å’æ’°’Æ÷Ñ’®",
    "text": "9.5 ‘ø’°’º’∏÷Ç÷Å’æ’°’Æ÷Ñ’®\ndef funkciai_anun(argument1, argument2): # def -&gt; define (’Ω’°’∞’¥’°’∂’•’¨) ’¢’°’º’´÷Å\n    \"\"\"’ñ’∏÷Ç’∂’Ø÷Å’´’°’µ’´ ’∂’Ø’°÷Ä’°’£’´÷Ä, ’Ω÷Ä’° ’¥’°’Ω’´’∂ ’∞’•’ø’∏ # ’Ø’°÷Ä’° ’Ω’° ’π’¨’´’∂’´\n    \"\"\"\n    # ’°÷Ä’° ’ß’Ω-’ß’Ω ’¢’°’∂’®\n    return inch_vor_arjeq # ’Ø’°÷Ä’° ’Ω’° ’π’¨’´’∂’´",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>9</span>¬† <span class='chapter-title'>07 Functions 1</span>"
    ]
  },
  {
    "objectID": "python/07_Functions_1.html#return-’∏’æ-÷Ü’∏÷Ç’∂’Ø÷Å’´’°’∂’•÷Ä",
    "href": "python/07_Functions_1.html#return-’∏’æ-÷Ü’∏÷Ç’∂’Ø÷Å’´’°’∂’•÷Ä",
    "title": "9¬† 07 Functions 1",
    "section": "9.6 return-’∏’æ ÷Ü’∏÷Ç’∂’Ø÷Å’´’°’∂’•÷Ä",
    "text": "9.6 return-’∏’æ ÷Ü’∏÷Ç’∂’Ø÷Å’´’°’∂’•÷Ä\n\ndef hashvel_caxsy(poncikneri_qanak, ponchikneri_gin):\n\n    print(poncikneri_qanak * ponchikneri_gin)\n\n\nunenq = 500\n\nif unenq &gt; hashvel_caxsy(3, 110):\n    print(\"uraa\")\n\n330\n\n\n\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n&lt;ipython-input-21-c7277ca65811&gt; in &lt;cell line: 3&gt;()\n      1 unenq = 500\n      2 \n----&gt; 3 if unenq &gt; hashvel_caxsy(3, 110):\n      4     print(\"uraa\")\n\nTypeError: '&gt;' not supported between instances of 'int' and 'NoneType'\n\n\n\n’´’Ω’Ø ’´’∂’π ’•’©’• ’∏÷Ç’¶’∏÷Ç’¥ ’•’∂÷Ñ ’´’∂’π-’∏÷Ä ’±÷á ÷Ö’£’ø’°’£’∏÷Ä’Æ’•’¨ ’ß’§ ’°÷Ä’™’•÷Ñ’®\n\ndef hashvel_caxsy(poncikneri_qanak, ponchikneri_gin):\n    return poncikneri_qanak * ponchikneri_gin\n\n\ngin = hashvel_caxsy(3, 110)\nprint(gin)\n\n330\n\n\n\nunenq = 500\n\ncaxs = hashvel_caxsy(3, 110)\nprint(caxs)\nif unenq &lt; caxs:\n    print('’ø’≠÷Ä’•’¨')\nelse:\n    print('’°’¥ ’∂’µ’°’¥ ’∂’µ’°’¥')\n\n330\n’°’¥ ’∂’µ’°’¥ ’∂’µ’°’¥\n\n\n\n9.6.1 ’¥’´ ÷Ñ’°’∂’´ ’°÷Ä’™’•÷Ñ’∂’•÷Ä’´ return\n\n\n# print(\"barev\")\ndef ponchikneri_calculator(exac_gumar, ponchikneri_qanak, ponchikneri_gin):\n    # anhrajesht_gumar = ponchikneri_qanak * ponchikneri_gin\n    anhrajesht_gumar = hashvel_caxsy(ponchikneri_qanak, ponchikneri_gin)\n\n    print(f\"’Å’•’¶ ’∫’•’ø÷Ñ ’ß {anhrajesht_gumar}’§÷Ä’°’¥\")\n\n    karox_enq_gnel = exac_gumar // ponchikneri_gin\n\n    if exac_gumar &lt; anhrajesht_gumar:\n        print(f\"‘ø’∂’•÷Ä’•÷Ñ ’¢’°’µ÷Å ’Å’•÷Ä ’£’∏÷Ç’¥’°÷Ä’® ’π’´ ’∞’•÷Ä’´÷Ñ’∏÷Ç’¥, ’Ø’°÷Ä’∏’≤ ’•÷Ñ ’£’∂’•’¨ {karox_enq_gnel} ’∞’°’ø\")\n    else:\n        print(f\"‘±’∂’∏÷Ç’∑ ’°÷Ä’•÷Ñ, ’Å’•÷Ä ’¥’°’∂÷Ä’∂ ’ß {exac_gumar - anhrajesht_gumar} ’§÷Ä’°’¥\")\n\n    return anhrajesht_gumar, karox_enq_gnel\n\n# print(type(ponchikneri_calculator(1000, 5, 110)))\ngumar, karanq_arnenq = ponchikneri_calculator(1000, 5, 110)\n\n’Å’•’¶ ’∫’•’ø÷Ñ ’ß 550’§÷Ä’°’¥\n‘±’∂’∏÷Ç’∑ ’°÷Ä’•÷Ñ, ’Å’•÷Ä ’¥’°’∂÷Ä’∂ ’ß 450 ’§÷Ä’°’¥\n&lt;class 'tuple'&gt;\n\n\n\ngumar, karanq_arnenq = ponchikneri_calculator(1000, 5, 110)\n\n’Å’•’¶ ’∫’•’ø÷Ñ ’ß 550’§÷Ä’°’¥\n‘±’∂’∏÷Ç’∑ ’°÷Ä’•÷Ñ, ’Å’•÷Ä ’¥’°’∂÷Ä’∂ ’ß 450 ’§÷Ä’°’¥\n\n\n\nprint(gumar)\nprint(karanq_arnenq)\nprint(ponchikneri_calculator(1000, 5, 110))\n\n550\n9\n’Å’•’¶ ’∫’•’ø÷Ñ ’ß 550’§÷Ä’°’¥\n‘±’∂’∏÷Ç’∑ ’°÷Ä’•÷Ñ, ’Å’•÷Ä ’¥’°’∂÷Ä’∂ ’ß 450 ’§÷Ä’°’¥\n(550, 9)",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>9</span>¬† <span class='chapter-title'>07 Functions 1</span>"
    ]
  },
  {
    "objectID": "python/07_Functions_1.html#return’´÷Å-’∞’•’ø’∏-’°’¥’•’∂’´’∂’π-’°’∂’ø’•’Ω’æ’∏÷Ç’¥’°",
    "href": "python/07_Functions_1.html#return’´÷Å-’∞’•’ø’∏-’°’¥’•’∂’´’∂’π-’°’∂’ø’•’Ω’æ’∏÷Ç’¥’°",
    "title": "9¬† 07 Functions 1",
    "section": "9.7 return’´÷Å ’∞’•’ø’∏ ’°’¥’•’∂’´’∂’π ’°’∂’ø’•’Ω’æ’∏÷Ç’¥’°",
    "text": "9.7 return’´÷Å ’∞’•’ø’∏ ’°’¥’•’∂’´’∂’π ’°’∂’ø’•’Ω’æ’∏÷Ç’¥’°\n\ndef panirner_tpel():\n    print('’∫’°’∂’´÷Ä')\n    print('’∫’°’∂’´÷Ä')\n    return '’∞’°’¥’∏’æ ’∫’°’∂’´÷Ä'\n    print(509)\n    a = 0\n    print(a)\n\na = panirner_tpel()\nprint(a)\n\n’∫’°’∂’´÷Ä\n’∫’°’∂’´÷Ä\n’∞’°’¥’∏’æ ’∫’°’∂’´÷Ä\n\n\n\nround(4.512)\n\n5",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>9</span>¬† <span class='chapter-title'>07 Functions 1</span>"
    ]
  },
  {
    "objectID": "python/07_Functions_1.html#args-kwargs",
    "href": "python/07_Functions_1.html#args-kwargs",
    "title": "9¬† 07 Functions 1",
    "section": "10.1 Args, kwargs",
    "text": "10.1 Args, kwargs\n‘º’°’æ ’∂’µ’∏÷Ç’©’ù https://realpython.com/python-kwargs-and-args/\n\n10.1.1 *Args\n\nprint(\"a\", \"b\", \"c\")\n\na b c\n\n\n’´’∂’π-’∏÷Ä ’¥’•’Ø’§ ’∞’°÷Ä÷Å÷Ä’•÷Ñ ‚Äú’¢’°’µ÷Å ’¥’´ ÷Ä’∏’∫’•, ’¥’•’∂÷Ñ print’´’∂ ’Ø’°÷Ä’°’´’∂÷Ñ ’¨’´÷Ñ’® ’°÷Ä’£’∏÷Ç’¥’•’∂’ø ’ø’°’´’∂÷Ñ ’∏÷Ç ’∂’∏÷Ä’¥’°’¨ ’°’∑’≠’°’ø’∏÷Ç’¥ ’ß÷Ä, ’Ø’°’∫ ’π’∏÷Ç’∂’´ ’¥’´ ’∞’°’ø ’Ø’ø’°’´’∂÷Ñ ’©’• 509 ’∞’°’ø, ’ß’§ ’∏’∂÷Å’°’û ’¨’´’∂’∏÷Ç’¥\n\nhelp(print)\n\nHelp on built-in function print in module builtins:\n\nprint(...)\n    print(value, ..., sep=' ', end='\\n', file=sys.stdout, flush=False)\n    \n    Prints the values to a stream, or to sys.stdout by default.\n    Optional keyword arguments:\n    file:  a file-like object (stream); defaults to the current sys.stdout.\n    sep:   string inserted between values, default a space.\n    end:   string appended after the last value, default a newline.\n    flush: whether to forcibly flush the stream.\n\n\n\n\ndef barevel(mard1, mard2, mard3):\n    print(f'‘≤’°÷Ä÷á {mard1}')\n    print(f'‘≤’°÷Ä÷á {mard2}')\n    print(f'‘≤’°÷Ä÷á {mard3}')\n\n\nbarevel('’Ä’°’¨’°’¨', \"‘∂’∏÷Ç’¨’°’¨\", \"‘±÷Ä’°’¥’´’Ø\")\n\n\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n&lt;ipython-input-116-05e80582297c&gt; in &lt;cell line: 1&gt;()\n----&gt; 1 barevel('’Ä’°’¨’°’¨', \"‘∂’∏÷Ç’¨’°’¨\", \"‘±÷Ä’°’¥’´’Ø\", \"a\")\n\nTypeError: barevel() takes 3 positional arguments but 4 were given\n\n\n\n\n# ’§’• ’Ø’°÷Ä’°’∂÷Ñ tuple ’Ω’°÷Ä÷Ñ’•’∂÷Ñ ’´’∂’π ’ø’°’∂, ’∏÷Ç ’Ø’∏’§’® ’£÷Ä’•’∂÷Ñ tuple ’ø÷Ä’°’¥’°’¢’°’∂’∏÷Ç’©’µ’°’∂’® ’∞’°’¥’°’∫’°’ø’°’Ω’≠’°’∂\ndef barevel(mardkanc_tuple):\n    print(mardkanc_tuple)\n    for m in mardkanc_tuple:\n        print(f'‘≤’°÷Ä÷á {m}')\n\n\nbarevel('’Ä’°’¨’°’¨', \"‘∂’∏÷Ç’¨’°’¨\", \"‘±÷Ä’°’¥’´’Ø\", \"2232343\")\n\n('’Ä’°’¨’°’¨', '‘∂’∏÷Ç’¨’°’¨', '‘±÷Ä’°’¥’´’Ø', '2232343')\n‘≤’°÷Ä÷á ’Ä’°’¨’°’¨\n‘≤’°÷Ä÷á ‘∂’∏÷Ç’¨’°’¨\n‘≤’°÷Ä÷á ‘±÷Ä’°’¥’´’Ø\n‘≤’°÷Ä÷á 2232343\n\n\n\nbarevel('’Ä’°’¨’°’¨', \"‘∂’∏÷Ç’¨’°’¨\", \"‘±÷Ä’°’¥’´’Ø\", \"2232343\")\n\n\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n&lt;ipython-input-123-c2c92fbbe7d2&gt; in &lt;cell line: 1&gt;()\n----&gt; 1 barevel('’Ä’°’¨’°’¨', \"‘∂’∏÷Ç’¨’°’¨\", \"‘±÷Ä’°’¥’´’Ø\", \"2232343\")\n\nTypeError: barevel() takes 1 positional argument but 4 were given\n\n\n\n\nprint(1,2,3,4)\n\n’°’æ’•’¨’´ ’¨’°’æ ’®’∂’©’•’º’∂’•’¨’´ ’∏÷Ç ’∞’´’∑’∏’≤’∏÷Ç’©’µ’°’∂ ’ø’•’Ω’°’∂’Ø’µ’∏÷Ç’∂’´÷Å ÷Ö’∫’ø’¥’°’¨ ’±÷á ’Ø’°,\n(’Ø’°÷Ä’°’∂÷Ñ ’∫÷Ä’´’∂’ø’´ ÷Ö÷Ä’´’∂’°’Ø’´÷Å ’£’∏÷Ç’∑’°’Ø’•’∂÷Ñ ’∏÷Ä ’∏÷Ç÷Ä’´’∑ ’¥’•’©’∏’§ ’Ø’°, ’¥’•’∂÷Ñ ’∫÷Ä’´’∂’ø’´’∂ ÷Å’∏÷Ç÷Å’°’Ø ’π’•’∂÷Ñ ’π’ß’û ’ø’°’¨’´’Ω)\n\ndef barevel(*mardanc_tuple):\n    print(mardanc_tuple)\n    for m in mardanc_tuple:\n        print(f'‘≤’°÷Ä÷á {m}')\n\n\nbarevel('’∂’´÷Ü-’∂’´÷Ü', \"1\")\n\n('’∂’´÷Ü-’∂’´÷Ü', '1')\n‘≤’°÷Ä÷á ’∂’´÷Ü-’∂’´÷Ü\n‘≤’°÷Ä÷á 1\n\n\n\nbarevel('’∂’´÷Ü-’∂’´÷Ü', \"’∂’°÷Ü-’∂’°÷Ü\", \"’∂’∏÷Ç÷Ü-’∂’∏÷Ç÷Ü\")\n\n('’∂’´÷Ü-’∂’´÷Ü', '’∂’°÷Ü-’∂’°÷Ü', '’∂’∏÷Ç÷Ü-’∂’∏÷Ç÷Ü')\n‘≤’°÷Ä÷á ’∂’´÷Ü-’∂’´÷Ü\n‘≤’°÷Ä÷á ’∂’°÷Ü-’∂’°÷Ü\n‘≤’°÷Ä÷á ’∂’∏÷Ç÷Ü-’∂’∏÷Ç÷Ü\n\n\n’Ø’°÷Ä’°’∂÷Ñ ’∂’°÷á unpacking operator (*)’® ÷Ö’£’ø’°’£’∏÷Ä’Æ’•’∂÷Ñ ’Ω’•’∂÷Å’ù\n\ncucak = ['’∂’´÷Ü-’∂’´÷Ü', \"’∂’°÷Ü-’∂’°÷Ü\", \"’∂’∏÷Ç÷Ü-’∂’∏÷Ç÷Ü\"]\n\nprint(cucak)\nprint(cucak[0], cucak[1], cucak[2])\nprint(*cucak)\n\n['’∂’´÷Ü-’∂’´÷Ü', '’∂’°÷Ü-’∂’°÷Ü', '’∂’∏÷Ç÷Ü-’∂’∏÷Ç÷Ü']\n’∂’´÷Ü-’∂’´÷Ü ’∂’°÷Ü-’∂’°÷Ü ’∂’∏÷Ç÷Ü-’∂’∏÷Ç÷Ü\n’∂’´÷Ü-’∂’´÷Ü ’∂’°÷Ü-’∂’°÷Ü ’∂’∏÷Ç÷Ü-’∂’∏÷Ç÷Ü\n\n\n\nbarevel(*cucak)\n\n('’∂’´÷Ü-’∂’´÷Ü', '’∂’°÷Ü-’∂’°÷Ü', '’∂’∏÷Ç÷Ü-’∂’∏÷Ç÷Ü')\n‘≤’°÷Ä÷á ’∂’´÷Ü-’∂’´÷Ü\n‘≤’°÷Ä÷á ’∂’°÷Ü-’∂’°÷Ü\n‘≤’°÷Ä÷á ’∂’∏÷Ç÷Ü-’∂’∏÷Ç÷Ü\n\n\n\n\n10.1.2 **Kwargs\nKwargs’® args-’´ ’∂’¥’°’∂’°, ’¢’°’µ÷Å ’®’∂’§’∏÷Ç’∂’∏÷Ç’¥’° ’°÷Ä’§’•’∂ keyword argument-’∂’•÷Ä\n\ndef tpel_mardu_infon(**mardik):\n    print(mardik)\n    for key, value in mardik.items():\n        print(key, \"=\", value)\n\ntpel_mardu_infon(anun=\"’Ä’•’∂’§’∏\", tariq=30, erkir=\"‘¥’°’£’•’Ω’ø’°’∂\")\n\n\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n&lt;ipython-input-142-4be00c6e3486&gt; in &lt;cell line: 6&gt;()\n      4         print(key, \"=\", value)\n      5 \n----&gt; 6 tpel_mardu_infon(1, anun=\"’Ä’•’∂’§’∏\", tariq=30, erkir=\"‘¥’°’£’•’Ω’ø’°’∂\")\n\nTypeError: tpel_mardu_infon() takes 0 positional arguments but 1 was given\n\n\n\n\ndef tpel_mardu_infon(anun, tariq, erkir):\n    print(f\"Anun =  {anun}\")\n    print(f\"Tariq = {tariq}\")\n    print(f\"Erkir = {erkir}\")\n\nmard = {\"anun\": \"Alice\", \"tariq\": 25, \"erkir\": \"New York\"}\n# tpel_mardu_infon(anun = mard[\"anun\"], tariq=mard[\"tariq\"], erkir=\"New York\")\n\ntpel_mardu_infon(**mard)\n# tpel_mardu_infon(anun = \"Alice\", tariq = 25, erkir= \"New York\")\n\nAnun =  Alice\nTariq = 25\nErkir = New York\n\n\n\n\n10.1.3 unpacking ,  *\n\ncucak = {1, 2, 3, 4, 5, 6}\n\n*skizbinner, naxa_last, last = cucak\n# *skizbinner, naxa_last, *last = cucak\n\nprint(skizbinner)\nprint(naxa_last)\nprint(last)\n\n# skizbinner, *naxa_last, last = cucak\n\n# print(skizbinner)\n# print(naxa_last)\n# print(last)\n\n\n  File \"&lt;ipython-input-150-77410d1f43d1&gt;\", line 3\n    *skizbinner, naxa_last, *last = cucak\n    ^\nSyntaxError: multiple starred expressions in assignment\n\n\n\n\n\n\n10.1.4 ‘±÷Ä’£’∏÷Ç’¥’•’∂’ø’∂’•÷Ä’´ ’∞’•÷Ä’©’°’Ø’°’∂’∏÷Ç’©’µ’∏÷Ç’∂\n\ndef tpel(a, b, *args, d=3, **kwargs):\n    print(f\"a: {a}\")\n    print(f\"b: {b}\")\n    print(f\"args: {args}\")\n    print(f\"d: {d}\")\n    print(f\"kwargs: {kwargs}\")\n\n\ntpel(1,2,3,4,5,6, e=2, f=3)\n\na: 1\nb: 2\nargs: (3, 4, 5, 6)\nd: 3\nkwargs: {'e': 2, 'f': 3}\n\n\n\ntpel(1,2, 3,4,5,6, d=4, e=2, f=3)\n\na: 1\nb: 2\nargs: (3, 4, 5, 6)\nd: 4\nkwargs: {'e': 2, 'f': 3}\n\n\n\ntpel(1,2, 3,4,5,6, d=2, e=3, 3)\n\n\n  File \"&lt;ipython-input-154-0858daaefe7a&gt;\", line 1\n    tpel(1,2, 3,4,5,6, d=2, e=3, 3)\n                                  ^\nSyntaxError: positional argument follows keyword argument\n\n\n\n\n’∞’•÷Ä’©’°’Ø’°’∂’∏÷Ç’©’µ’∏÷Ç’∂’∂’° 1. ’ç’∏’æ’∏÷Ä’°’Ø’°’∂ positional ’°÷Ä’£’∏÷Ç’¥’•’∂’ø’∂’•÷Ä 2. *args 3. ’ç’∏’æ’∏÷Ä’°’Ø’°’∂ keyword ’°÷Ä’£’∏÷Ç’¥’•’∂’ø’∂’•÷Ä 4. **kwargs\n\n\n10.1.5 zip\n\nqanakner = [1, 3, 50, 2]\narjuetner = [450, 460, 1]\n\ngumar = 0 \n\nfor i in range(min(len(qanakner), len(arjuetner))):\n    c = qanakner[i] * arjuetner[i] \n    \n    gumar += c\nprint(gumar)\n\nfor qanak, arjuet in zip(qanakner, arjuetner, strict=True):\n    print(qanak, arjuet)\n\n1880\n1 450\n3 460\n50 1\n\n\n\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\nInput In [46], in &lt;cell line: 12&gt;()\n      9     gumar += c\n     10 print(gumar)\n---&gt; 12 for qanak, arjuet in zip(qanakner, arjuetner, strict=True):\n     13     print(qanak, arjuet)\n\nValueError: zip() argument 2 is shorter than argument 1\n\n\n\n\n# $ -1 evro -3, dram - 50, funt\n# 450, 460, 1\nqanakner = [1, 3, 50, 1, 3, 4]\narjuetner = [450, 460, 1]\ntokosner = [10, 20, 30]\n\ngumar = 0\n\nfor i in range(min(len(qanakner), len(arjuetner))):\n    gumar += qanakner[i] * arjuetner[i]\n\nprint(gumar)\n\nirar_kpcrac = ([1,450], [3, 460], [50, 1])\ngumar = 0\n\nfor qanak, arjuet in irar_kpcrac:\n    gumar += qanak * arjuet\n\nprint(gumar)\n\ngumar = 0\n\nfor qanak, arjuet, tokos in zip(qanakner, arjuetner, tokosner, strict=False):\n    gumar += qanak * arjuet\n\nprint(gumar)\n\nlist(zip(qanakner, arjuetner))\n\n# gumar = 0\n# for i in range(min(len(qanakner), len(arjuetner))):\n#     gumar += qanakner[i] * arjuetner[i]\n# gumar = 0\n# for q, a, t in zip(qanakner, arjuetner):\n#     gumar += q * a * t / 100\n# print(gumar)\n# i, j = (1, 450)\n\n1880\n1880\n1880\n\n\n[(1, 450), (3, 460), (50, 1)]\n\n\n\n\n10.1.6 enumerate\n\nlst = [1, 3, 4, 0, 0, 2, 4]\n\nfor i in range(len(lst)):\n    print(i + 1, lst[i])\n\nfor ind, val in enumerate(lst):\n    print(ind + 1, val)\n\nenumerate = zip(range(lst), lst)\n\ntype(zip)\n\n1 1\n2 3\n3 4\n4 0\n5 0\n6 2\n7 4\n1 1\n2 3\n3 4\n4 0\n5 0\n6 2\n7 4\n\n\n\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\nInput In [50], in &lt;cell line: 9&gt;()\n      6 for ind, val in enumerate(lst):\n      7     print(ind + 1, val)\n----&gt; 9 enumerate = zip(range(lst), lst)\n     11 type(zip)\n\nTypeError: 'list' object cannot be interpreted as an integer\n\n\n\n\nprint(type(zip))\n\n&lt;class 'type'&gt;\n\n\n\nprint(type(enumerate))\n\n&lt;class 'type'&gt;\n\n\n\nprint(type(3))\n\n&lt;class 'int'&gt;\n\n\n\nlist(zip([10,230,40], [1,2,3])\n\n&lt;zip at 0x1dd7658b840&gt;",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>9</span>¬† <span class='chapter-title'>07 Functions 1</span>"
    ]
  },
  {
    "objectID": "python/08_Functions_2.html",
    "href": "python/08_Functions_2.html",
    "title": "10¬† 08 Functions 2",
    "section": "",
    "text": "11 Docstrings\nhelp(sum)\n\nHelp on built-in function sum in module builtins:\n\nsum(iterable, /, start=0)\n    Return the sum of a 'start' value (default: 0) plus an iterable of numbers\n    \n    When the iterable is empty, return the start value.\n    This function is intended specifically for use with numeric values and may\n    reject non-numeric types.\na = 3\n\nprint(help(a))\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.values.html\n\nhttps://github.com/pandas-dev/pandas/blob/v2.0.0/pandas/core/series.py#L681-L721\ndef calculate_square_root(x): # documentation string -&gt; docstring\n    \"\"\"Function calculates the square root of an input\n\n    Note:\n        If the input is a negative number, will return a warning message\n\n    Args:\n        x (float): Number to calculate the square root of\n\n    Returns:\n        sqrt_x (float or str): if applicable will return square root of the input\n                               otherwise will return an error message\n\n    Examples:\n        &gt;&gt;&gt;calculate_square_root(4)\n        2\n    \"\"\"\n    if x &lt; 0:\n        sqrt_x = '’∂’∏ ’∂’∏ ’∂’∏, ’π’´ ’Ø’°÷Ä’•’¨’´'\n    else:\n        sqrt_x = x**0.5\n\n    return sqrt_x\ncalculate_square_root(1)\n\n1.0\nhelp(calculate_square_root)\n\nHelp on function calculate_square_root in module __main__:\n\ncalculate_square_root(x)\n    Function calculates the square root of an input\n    \n    Note:\n        If the input is a negative number, will return a warning message\n    \n    Args:\n        x (float): Number to calculate the square root of\n    \n    Returns:\n        sqrt_x (float or str): if applicable will return square root of the input\n                               otherwise will return an error message\n    \n    Examples:\n        &gt;&gt;&gt;calculate_square_root(4)\n        2\ncalculate_square_root.__doc__\n\n'Function calculates the square root of an input\\n\\n    Note:\\n        If the input is a negative number, will return a warning message\\n\\n    Args:\\n        x (float): Number to calculate the square root of\\n\\n    Returns:\\n        sqrt_x (float or str): if applicable will return square root of the input\\n                               otherwise will return an error message\\n\\n    Examples:\\n        &gt;&gt;&gt;calculate_square_root(4)\\n        2\\n    '\ntype(calculate_square_root)\n\nfunction\nimport random\nrandom # hover on random\n\n&lt;module 'random' from '/usr/lib/python3.10/random.py'&gt;\nprint(help(random))\n\nHelp on module random:\n\nNAME\n    random - Random variable generators.\n\nMODULE REFERENCE\n    https://docs.python.org/3.10/library/random.html\n    \n    The following documentation is automatically generated from the Python\n    source files.  It may be incomplete, incorrect or include features that\n    are considered implementation detail and may vary between Python\n    implementations.  When in doubt, consult the module reference at the\n    location listed above.\n\nDESCRIPTION\n        bytes\n        -----\n               uniform bytes (values between 0 and 255)\n    \n        integers\n        --------\n               uniform within range\n    \n        sequences\n        ---------\n               pick random element\n               pick random sample\n               pick weighted random sample\n               generate random permutation\n    \n        distributions on the real line:\n        ------------------------------\n               uniform\n               triangular\n               normal (Gaussian)\n               lognormal\n               negative exponential\n               gamma\n               beta\n               pareto\n               Weibull\n    \n        distributions on the circle (angles 0 to 2pi)\n        ---------------------------------------------\n               circular uniform\n               von Mises\n    \n    General notes on the underlying Mersenne Twister core generator:\n    \n    * The period is 2**19937-1.\n    * It is one of the most extensively tested generators in existence.\n    * The random() method is implemented in C, executes in a single Python step,\n      and is, therefore, threadsafe.\n\nCLASSES\n    _random.Random(builtins.object)\n        Random\n            SystemRandom\n    \n    class Random(_random.Random)\n     |  Random(x=None)\n     |  \n     |  Random number generator base class used by bound module functions.\n     |  \n     |  Used to instantiate instances of Random to get generators that don't\n     |  share state.\n     |  \n     |  Class Random can also be subclassed if you want to use a different basic\n     |  generator of your own devising: in that case, override the following\n     |  methods:  random(), seed(), getstate(), and setstate().\n     |  Optionally, implement a getrandbits() method so that randrange()\n     |  can cover arbitrarily large ranges.\n     |  \n     |  Method resolution order:\n     |      Random\n     |      _random.Random\n     |      builtins.object\n     |  \n     |  Methods defined here:\n     |  \n     |  __getstate__(self)\n     |      # Issue 17489: Since __reduce__ was defined to fix #759889 this is no\n     |      # longer called; we leave it here because it has been here since random was\n     |      # rewritten back in 2001 and why risk breaking something.\n     |  \n     |  __init__(self, x=None)\n     |      Initialize an instance.\n     |      \n     |      Optional argument x controls seeding, as for Random.seed().\n     |  \n     |  __reduce__(self)\n     |      Helper for pickle.\n     |  \n     |  __setstate__(self, state)\n     |  \n     |  betavariate(self, alpha, beta)\n     |      Beta distribution.\n     |      \n     |      Conditions on the parameters are alpha &gt; 0 and beta &gt; 0.\n     |      Returned values range between 0 and 1.\n     |  \n     |  choice(self, seq)\n     |      Choose a random element from a non-empty sequence.\n     |  \n     |  choices(self, population, weights=None, *, cum_weights=None, k=1)\n     |      Return a k sized list of population elements chosen with replacement.\n     |      \n     |      If the relative weights or cumulative weights are not specified,\n     |      the selections are made with equal probability.\n     |  \n     |  expovariate(self, lambd)\n     |      Exponential distribution.\n     |      \n     |      lambd is 1.0 divided by the desired mean.  It should be\n     |      nonzero.  (The parameter would be called \"lambda\", but that is\n     |      a reserved word in Python.)  Returned values range from 0 to\n     |      positive infinity if lambd is positive, and from negative\n     |      infinity to 0 if lambd is negative.\n     |  \n     |  gammavariate(self, alpha, beta)\n     |      Gamma distribution.  Not the gamma function!\n     |      \n     |      Conditions on the parameters are alpha &gt; 0 and beta &gt; 0.\n     |      \n     |      The probability distribution function is:\n     |      \n     |                  x ** (alpha - 1) * math.exp(-x / beta)\n     |        pdf(x) =  --------------------------------------\n     |                    math.gamma(alpha) * beta ** alpha\n     |  \n     |  gauss(self, mu, sigma)\n     |      Gaussian distribution.\n     |      \n     |      mu is the mean, and sigma is the standard deviation.  This is\n     |      slightly faster than the normalvariate() function.\n     |      \n     |      Not thread-safe without a lock around calls.\n     |  \n     |  getstate(self)\n     |      Return internal state; can be passed to setstate() later.\n     |  \n     |  lognormvariate(self, mu, sigma)\n     |      Log normal distribution.\n     |      \n     |      If you take the natural logarithm of this distribution, you'll get a\n     |      normal distribution with mean mu and standard deviation sigma.\n     |      mu can have any value, and sigma must be greater than zero.\n     |  \n     |  normalvariate(self, mu, sigma)\n     |      Normal distribution.\n     |      \n     |      mu is the mean, and sigma is the standard deviation.\n     |  \n     |  paretovariate(self, alpha)\n     |      Pareto distribution.  alpha is the shape parameter.\n     |  \n     |  randbytes(self, n)\n     |      Generate n random bytes.\n     |  \n     |  randint(self, a, b)\n     |      Return random integer in range [a, b], including both end points.\n     |  \n     |  randrange(self, start, stop=None, step=1)\n     |      Choose a random item from range(start, stop[, step]).\n     |      \n     |      This fixes the problem with randint() which includes the\n     |      endpoint; in Python this is usually not what you want.\n     |  \n     |  sample(self, population, k, *, counts=None)\n     |      Chooses k unique random elements from a population sequence or set.\n     |      \n     |      Returns a new list containing elements from the population while\n     |      leaving the original population unchanged.  The resulting list is\n     |      in selection order so that all sub-slices will also be valid random\n     |      samples.  This allows raffle winners (the sample) to be partitioned\n     |      into grand prize and second place winners (the subslices).\n     |      \n     |      Members of the population need not be hashable or unique.  If the\n     |      population contains repeats, then each occurrence is a possible\n     |      selection in the sample.\n     |      \n     |      Repeated elements can be specified one at a time or with the optional\n     |      counts parameter.  For example:\n     |      \n     |          sample(['red', 'blue'], counts=[4, 2], k=5)\n     |      \n     |      is equivalent to:\n     |      \n     |          sample(['red', 'red', 'red', 'red', 'blue', 'blue'], k=5)\n     |      \n     |      To choose a sample from a range of integers, use range() for the\n     |      population argument.  This is especially fast and space efficient\n     |      for sampling from a large population:\n     |      \n     |          sample(range(10000000), 60)\n     |  \n     |  seed(self, a=None, version=2)\n     |      Initialize internal state from a seed.\n     |      \n     |      The only supported seed types are None, int, float,\n     |      str, bytes, and bytearray.\n     |      \n     |      None or no argument seeds from current time or from an operating\n     |      system specific randomness source if available.\n     |      \n     |      If *a* is an int, all bits are used.\n     |      \n     |      For version 2 (the default), all of the bits are used if *a* is a str,\n     |      bytes, or bytearray.  For version 1 (provided for reproducing random\n     |      sequences from older versions of Python), the algorithm for str and\n     |      bytes generates a narrower range of seeds.\n     |  \n     |  setstate(self, state)\n     |      Restore internal state from object returned by getstate().\n     |  \n     |  shuffle(self, x, random=None)\n     |      Shuffle list x in place, and return None.\n     |      \n     |      Optional argument random is a 0-argument function returning a\n     |      random float in [0.0, 1.0); if it is the default None, the\n     |      standard random.random will be used.\n     |  \n     |  triangular(self, low=0.0, high=1.0, mode=None)\n     |      Triangular distribution.\n     |      \n     |      Continuous distribution bounded by given lower and upper limits,\n     |      and having a given mode value in-between.\n     |      \n     |      http://en.wikipedia.org/wiki/Triangular_distribution\n     |  \n     |  uniform(self, a, b)\n     |      Get a random number in the range [a, b) or [a, b] depending on rounding.\n     |  \n     |  vonmisesvariate(self, mu, kappa)\n     |      Circular data distribution.\n     |      \n     |      mu is the mean angle, expressed in radians between 0 and 2*pi, and\n     |      kappa is the concentration parameter, which must be greater than or\n     |      equal to zero.  If kappa is equal to zero, this distribution reduces\n     |      to a uniform random angle over the range 0 to 2*pi.\n     |  \n     |  weibullvariate(self, alpha, beta)\n     |      Weibull distribution.\n     |      \n     |      alpha is the scale parameter and beta is the shape parameter.\n     |  \n     |  ----------------------------------------------------------------------\n     |  Class methods defined here:\n     |  \n     |  __init_subclass__(**kwargs) from builtins.type\n     |      Control how subclasses generate random integers.\n     |      \n     |      The algorithm a subclass can use depends on the random() and/or\n     |      getrandbits() implementation available to it and determines\n     |      whether it can generate random integers from arbitrarily large\n     |      ranges.\n     |  \n     |  ----------------------------------------------------------------------\n     |  Data descriptors defined here:\n     |  \n     |  __dict__\n     |      dictionary for instance variables (if defined)\n     |  \n     |  __weakref__\n     |      list of weak references to the object (if defined)\n     |  \n     |  ----------------------------------------------------------------------\n     |  Data and other attributes defined here:\n     |  \n     |  VERSION = 3\n     |  \n     |  ----------------------------------------------------------------------\n     |  Methods inherited from _random.Random:\n     |  \n     |  getrandbits(self, k, /)\n     |      getrandbits(k) -&gt; x.  Generates an int with k random bits.\n     |  \n     |  random(self, /)\n     |      random() -&gt; x in the interval [0, 1).\n     |  \n     |  ----------------------------------------------------------------------\n     |  Static methods inherited from _random.Random:\n     |  \n     |  __new__(*args, **kwargs) from builtins.type\n     |      Create and return a new object.  See help(type) for accurate signature.\n    \n    class SystemRandom(Random)\n     |  SystemRandom(x=None)\n     |  \n     |  Alternate random number generator using sources provided\n     |  by the operating system (such as /dev/urandom on Unix or\n     |  CryptGenRandom on Windows).\n     |  \n     |   Not available on all systems (see os.urandom() for details).\n     |  \n     |  Method resolution order:\n     |      SystemRandom\n     |      Random\n     |      _random.Random\n     |      builtins.object\n     |  \n     |  Methods defined here:\n     |  \n     |  getrandbits(self, k)\n     |      getrandbits(k) -&gt; x.  Generates an int with k random bits.\n     |  \n     |  getstate = _notimplemented(self, *args, **kwds)\n     |  \n     |  randbytes(self, n)\n     |      Generate n random bytes.\n     |  \n     |  random(self)\n     |      Get the next random number in the range [0.0, 1.0).\n     |  \n     |  seed(self, *args, **kwds)\n     |      Stub method.  Not used for a system random number generator.\n     |  \n     |  setstate = _notimplemented(self, *args, **kwds)\n     |  \n     |  ----------------------------------------------------------------------\n     |  Methods inherited from Random:\n     |  \n     |  __getstate__(self)\n     |      # Issue 17489: Since __reduce__ was defined to fix #759889 this is no\n     |      # longer called; we leave it here because it has been here since random was\n     |      # rewritten back in 2001 and why risk breaking something.\n     |  \n     |  __init__(self, x=None)\n     |      Initialize an instance.\n     |      \n     |      Optional argument x controls seeding, as for Random.seed().\n     |  \n     |  __reduce__(self)\n     |      Helper for pickle.\n     |  \n     |  __setstate__(self, state)\n     |  \n     |  betavariate(self, alpha, beta)\n     |      Beta distribution.\n     |      \n     |      Conditions on the parameters are alpha &gt; 0 and beta &gt; 0.\n     |      Returned values range between 0 and 1.\n     |  \n     |  choice(self, seq)\n     |      Choose a random element from a non-empty sequence.\n     |  \n     |  choices(self, population, weights=None, *, cum_weights=None, k=1)\n     |      Return a k sized list of population elements chosen with replacement.\n     |      \n     |      If the relative weights or cumulative weights are not specified,\n     |      the selections are made with equal probability.\n     |  \n     |  expovariate(self, lambd)\n     |      Exponential distribution.\n     |      \n     |      lambd is 1.0 divided by the desired mean.  It should be\n     |      nonzero.  (The parameter would be called \"lambda\", but that is\n     |      a reserved word in Python.)  Returned values range from 0 to\n     |      positive infinity if lambd is positive, and from negative\n     |      infinity to 0 if lambd is negative.\n     |  \n     |  gammavariate(self, alpha, beta)\n     |      Gamma distribution.  Not the gamma function!\n     |      \n     |      Conditions on the parameters are alpha &gt; 0 and beta &gt; 0.\n     |      \n     |      The probability distribution function is:\n     |      \n     |                  x ** (alpha - 1) * math.exp(-x / beta)\n     |        pdf(x) =  --------------------------------------\n     |                    math.gamma(alpha) * beta ** alpha\n     |  \n     |  gauss(self, mu, sigma)\n     |      Gaussian distribution.\n     |      \n     |      mu is the mean, and sigma is the standard deviation.  This is\n     |      slightly faster than the normalvariate() function.\n     |      \n     |      Not thread-safe without a lock around calls.\n     |  \n     |  lognormvariate(self, mu, sigma)\n     |      Log normal distribution.\n     |      \n     |      If you take the natural logarithm of this distribution, you'll get a\n     |      normal distribution with mean mu and standard deviation sigma.\n     |      mu can have any value, and sigma must be greater than zero.\n     |  \n     |  normalvariate(self, mu, sigma)\n     |      Normal distribution.\n     |      \n     |      mu is the mean, and sigma is the standard deviation.\n     |  \n     |  paretovariate(self, alpha)\n     |      Pareto distribution.  alpha is the shape parameter.\n     |  \n     |  randint(self, a, b)\n     |      Return random integer in range [a, b], including both end points.\n     |  \n     |  randrange(self, start, stop=None, step=1)\n     |      Choose a random item from range(start, stop[, step]).\n     |      \n     |      This fixes the problem with randint() which includes the\n     |      endpoint; in Python this is usually not what you want.\n     |  \n     |  sample(self, population, k, *, counts=None)\n     |      Chooses k unique random elements from a population sequence or set.\n     |      \n     |      Returns a new list containing elements from the population while\n     |      leaving the original population unchanged.  The resulting list is\n     |      in selection order so that all sub-slices will also be valid random\n     |      samples.  This allows raffle winners (the sample) to be partitioned\n     |      into grand prize and second place winners (the subslices).\n     |      \n     |      Members of the population need not be hashable or unique.  If the\n     |      population contains repeats, then each occurrence is a possible\n     |      selection in the sample.\n     |      \n     |      Repeated elements can be specified one at a time or with the optional\n     |      counts parameter.  For example:\n     |      \n     |          sample(['red', 'blue'], counts=[4, 2], k=5)\n     |      \n     |      is equivalent to:\n     |      \n     |          sample(['red', 'red', 'red', 'red', 'blue', 'blue'], k=5)\n     |      \n     |      To choose a sample from a range of integers, use range() for the\n     |      population argument.  This is especially fast and space efficient\n     |      for sampling from a large population:\n     |      \n     |          sample(range(10000000), 60)\n     |  \n     |  shuffle(self, x, random=None)\n     |      Shuffle list x in place, and return None.\n     |      \n     |      Optional argument random is a 0-argument function returning a\n     |      random float in [0.0, 1.0); if it is the default None, the\n     |      standard random.random will be used.\n     |  \n     |  triangular(self, low=0.0, high=1.0, mode=None)\n     |      Triangular distribution.\n     |      \n     |      Continuous distribution bounded by given lower and upper limits,\n     |      and having a given mode value in-between.\n     |      \n     |      http://en.wikipedia.org/wiki/Triangular_distribution\n     |  \n     |  uniform(self, a, b)\n     |      Get a random number in the range [a, b) or [a, b] depending on rounding.\n     |  \n     |  vonmisesvariate(self, mu, kappa)\n     |      Circular data distribution.\n     |      \n     |      mu is the mean angle, expressed in radians between 0 and 2*pi, and\n     |      kappa is the concentration parameter, which must be greater than or\n     |      equal to zero.  If kappa is equal to zero, this distribution reduces\n     |      to a uniform random angle over the range 0 to 2*pi.\n     |  \n     |  weibullvariate(self, alpha, beta)\n     |      Weibull distribution.\n     |      \n     |      alpha is the scale parameter and beta is the shape parameter.\n     |  \n     |  ----------------------------------------------------------------------\n     |  Class methods inherited from Random:\n     |  \n     |  __init_subclass__(**kwargs) from builtins.type\n     |      Control how subclasses generate random integers.\n     |      \n     |      The algorithm a subclass can use depends on the random() and/or\n     |      getrandbits() implementation available to it and determines\n     |      whether it can generate random integers from arbitrarily large\n     |      ranges.\n     |  \n     |  ----------------------------------------------------------------------\n     |  Data descriptors inherited from Random:\n     |  \n     |  __dict__\n     |      dictionary for instance variables (if defined)\n     |  \n     |  __weakref__\n     |      list of weak references to the object (if defined)\n     |  \n     |  ----------------------------------------------------------------------\n     |  Data and other attributes inherited from Random:\n     |  \n     |  VERSION = 3\n     |  \n     |  ----------------------------------------------------------------------\n     |  Static methods inherited from _random.Random:\n     |  \n     |  __new__(*args, **kwargs) from builtins.type\n     |      Create and return a new object.  See help(type) for accurate signature.\n\nFUNCTIONS\n    betavariate(alpha, beta) method of Random instance\n        Beta distribution.\n        \n        Conditions on the parameters are alpha &gt; 0 and beta &gt; 0.\n        Returned values range between 0 and 1.\n    \n    choice(seq) method of Random instance\n        Choose a random element from a non-empty sequence.\n    \n    choices(population, weights=None, *, cum_weights=None, k=1) method of Random instance\n        Return a k sized list of population elements chosen with replacement.\n        \n        If the relative weights or cumulative weights are not specified,\n        the selections are made with equal probability.\n    \n    expovariate(lambd) method of Random instance\n        Exponential distribution.\n        \n        lambd is 1.0 divided by the desired mean.  It should be\n        nonzero.  (The parameter would be called \"lambda\", but that is\n        a reserved word in Python.)  Returned values range from 0 to\n        positive infinity if lambd is positive, and from negative\n        infinity to 0 if lambd is negative.\n    \n    gammavariate(alpha, beta) method of Random instance\n        Gamma distribution.  Not the gamma function!\n        \n        Conditions on the parameters are alpha &gt; 0 and beta &gt; 0.\n        \n        The probability distribution function is:\n        \n                    x ** (alpha - 1) * math.exp(-x / beta)\n          pdf(x) =  --------------------------------------\n                      math.gamma(alpha) * beta ** alpha\n    \n    gauss(mu, sigma) method of Random instance\n        Gaussian distribution.\n        \n        mu is the mean, and sigma is the standard deviation.  This is\n        slightly faster than the normalvariate() function.\n        \n        Not thread-safe without a lock around calls.\n    \n    getrandbits(k, /) method of Random instance\n        getrandbits(k) -&gt; x.  Generates an int with k random bits.\n    \n    getstate() method of Random instance\n        Return internal state; can be passed to setstate() later.\n    \n    lognormvariate(mu, sigma) method of Random instance\n        Log normal distribution.\n        \n        If you take the natural logarithm of this distribution, you'll get a\n        normal distribution with mean mu and standard deviation sigma.\n        mu can have any value, and sigma must be greater than zero.\n    \n    normalvariate(mu, sigma) method of Random instance\n        Normal distribution.\n        \n        mu is the mean, and sigma is the standard deviation.\n    \n    paretovariate(alpha) method of Random instance\n        Pareto distribution.  alpha is the shape parameter.\n    \n    randbytes(n) method of Random instance\n        Generate n random bytes.\n    \n    randint(a, b) method of Random instance\n        Return random integer in range [a, b], including both end points.\n    \n    random() method of Random instance\n        random() -&gt; x in the interval [0, 1).\n    \n    randrange(start, stop=None, step=1) method of Random instance\n        Choose a random item from range(start, stop[, step]).\n        \n        This fixes the problem with randint() which includes the\n        endpoint; in Python this is usually not what you want.\n    \n    sample(population, k, *, counts=None) method of Random instance\n        Chooses k unique random elements from a population sequence or set.\n        \n        Returns a new list containing elements from the population while\n        leaving the original population unchanged.  The resulting list is\n        in selection order so that all sub-slices will also be valid random\n        samples.  This allows raffle winners (the sample) to be partitioned\n        into grand prize and second place winners (the subslices).\n        \n        Members of the population need not be hashable or unique.  If the\n        population contains repeats, then each occurrence is a possible\n        selection in the sample.\n        \n        Repeated elements can be specified one at a time or with the optional\n        counts parameter.  For example:\n        \n            sample(['red', 'blue'], counts=[4, 2], k=5)\n        \n        is equivalent to:\n        \n            sample(['red', 'red', 'red', 'red', 'blue', 'blue'], k=5)\n        \n        To choose a sample from a range of integers, use range() for the\n        population argument.  This is especially fast and space efficient\n        for sampling from a large population:\n        \n            sample(range(10000000), 60)\n    \n    seed(a=None, version=2) method of Random instance\n        Initialize internal state from a seed.\n        \n        The only supported seed types are None, int, float,\n        str, bytes, and bytearray.\n        \n        None or no argument seeds from current time or from an operating\n        system specific randomness source if available.\n        \n        If *a* is an int, all bits are used.\n        \n        For version 2 (the default), all of the bits are used if *a* is a str,\n        bytes, or bytearray.  For version 1 (provided for reproducing random\n        sequences from older versions of Python), the algorithm for str and\n        bytes generates a narrower range of seeds.\n    \n    setstate(state) method of Random instance\n        Restore internal state from object returned by getstate().\n    \n    shuffle(x, random=None) method of Random instance\n        Shuffle list x in place, and return None.\n        \n        Optional argument random is a 0-argument function returning a\n        random float in [0.0, 1.0); if it is the default None, the\n        standard random.random will be used.\n    \n    triangular(low=0.0, high=1.0, mode=None) method of Random instance\n        Triangular distribution.\n        \n        Continuous distribution bounded by given lower and upper limits,\n        and having a given mode value in-between.\n        \n        http://en.wikipedia.org/wiki/Triangular_distribution\n    \n    uniform(a, b) method of Random instance\n        Get a random number in the range [a, b) or [a, b] depending on rounding.\n    \n    vonmisesvariate(mu, kappa) method of Random instance\n        Circular data distribution.\n        \n        mu is the mean angle, expressed in radians between 0 and 2*pi, and\n        kappa is the concentration parameter, which must be greater than or\n        equal to zero.  If kappa is equal to zero, this distribution reduces\n        to a uniform random angle over the range 0 to 2*pi.\n    \n    weibullvariate(alpha, beta) method of Random instance\n        Weibull distribution.\n        \n        alpha is the scale parameter and beta is the shape parameter.\n\nDATA\n    __all__ = ['Random', 'SystemRandom', 'betavariate', 'choice', 'choices...\n\nFILE\n    c:\\users\\hayk_\\.conda\\envs\\thesis\\lib\\random.py\n\n\nNone\n‘ø’°÷Ä’°’∂÷Ñ ’∂’°÷á ’•÷Ä’¢ ÷Ö÷Ä’´’∂’°’Ø’∂’•÷Ä ’•’∂÷Ñ ’£÷Ä’∏÷Ç’¥, ’´÷Ä’°’∂÷Å ’∏÷Ä’∫’•’Ω ’©’•’Ω’ø’•÷Ä ÷Ö’£’ø’°’£’∏÷Ä’Æ’•’∂÷Ñ Doctest ’£÷Ä’°’§’°÷Ä’°’∂’´ ’¥’´’ª’∏÷Å’∏’æ \\ ’é’´’§’µ’∏ \\\n’Ü’µ’∏÷Ç’©’•÷Ä 1. ‘∏’∂’§’∞’°’∂’∏÷Ç÷Ä ’¨’°’æ ’∂’µ’∏÷Ç’©, ’∏÷Ç ÷Ö÷Ä’´’∂’°’Ø’∂’•÷Ä docstring’∂’•÷Ä’´ ÷Ü’∏÷Ä’¥’°’ø’∂’•÷Ä’´ link 2. Documentation ’Ω’ø’•’≤’Æ’•’¨ Sphinx",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>10</span>¬† <span class='chapter-title'>08 Functions 2</span>"
    ]
  },
  {
    "objectID": "python/08_Functions_2.html#÷Ü’∏÷Ç’∂’Ø÷Å’´’°’∂’∂’•÷Ä’∏÷Ç’¥",
    "href": "python/08_Functions_2.html#÷Ü’∏÷Ç’∂’Ø÷Å’´’°’∂’∂’•÷Ä’∏÷Ç’¥",
    "title": "10¬† 08 Functions 2",
    "section": "12.1 ’ñ’∏÷Ç’∂’Ø÷Å’´’°’∂’∂’•÷Ä’∏÷Ç’¥",
    "text": "12.1 ’ñ’∏÷Ç’∂’Ø÷Å’´’°’∂’∂’•÷Ä’∏÷Ç’¥\n\ngner: dict[str, int] = {\n    'chocolate': 130, # ’´÷Ä’°’Ø’°’∂’∏÷Ç’¥ ’¢’°’µ÷Å ’∫’•’ø÷Ñ’° ’¨’´’∂’´’ù \"’π’∏÷Ç’∂’•’∂÷Ñ\"\n    'vanilla': 120\n}\n\ndef ponchiki_calculator(qanak: int, tesak: str, pudrayov: bool) -&gt; float: # ’•’©’• ’¢’°’∂ ’π’æ’•÷Ä’°’§’°÷Ä’±’∂’•÷Ä ’Ø’£÷Ä’•’´’∂÷Ñ -&gt; None\n    \"\"\"Function calculates how much eating ponchiks will cost us\n\n    Args:\n        qanak (int): number of ponchiks we are going to buy and then eat, am nyam nyam\n        tesak (str): either chocolate or vanilla\n        pudrayov (bool): of course pudrayov, I have to spill it all over my shirt\n\n    Returns:\n        gin (float): how much this paradise for stomach will cost\n    \"\"\"\n    gin = qanak * gner[tesak]\n\n    return gin\n\nponchiki_calculator(3, 'vanilla', True)\n\n360\n\n\n\ndef count_number_of_occurances(lst: list, element):\n    \"\"\"Function counts how many times a given element appears in the given list\n\n    Args:\n        ...\n        ’°’¨’°÷Ä’∏÷Ç’¥ ’•’¥ ’•’Ω ’£÷Ä’•’¥, ’§’∏÷Ç÷Ñ ’¢’°’µ÷Å ’¥’´ ’°’¨’°÷Ä’•÷Ñ :)\n    \"\"\"\n    return lst.count(element) # wait to see the suggestions after adding the hint",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>10</span>¬† <span class='chapter-title'>08 Functions 2</span>"
    ]
  },
  {
    "objectID": "python/08_Functions_2.html#’∂’µ’∏÷Ç’©’•÷Ä",
    "href": "python/08_Functions_2.html#’∂’µ’∏÷Ç’©’•÷Ä",
    "title": "10¬† 08 Functions 2",
    "section": "12.2 ’Ü’µ’∏÷Ç’©’•÷Ä",
    "text": "12.2 ’Ü’µ’∏÷Ç’©’•÷Ä\n\nDocumentation\n’Ø’°÷Ä’≥ ’∏÷Ç ’¨’°’æ ’æ’´’§’µ’∏\n’•÷Ä’Ø’°÷Ä ’∏÷Ç ’¨’°’æ ’æ’´’§’µ’∏ (’Ω’° ’≠’∏÷Ä’∞’∏÷Ç÷Ä’§ ’Ø’ø’°’¥ ’∂’°’µ’•’¨ ’ß’Ω ’•÷Ä’•÷Ñ ’º’•’Ω’∏÷Ç÷Ä’∂’•÷Ä’´ ’¥’•’ª’´÷Å)",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>10</span>¬† <span class='chapter-title'>08 Functions 2</span>"
    ]
  },
  {
    "objectID": "python/08_Functions_2.html#regular-arguments",
    "href": "python/08_Functions_2.html#regular-arguments",
    "title": "10¬† 08 Functions 2",
    "section": "14.1 regular arguments",
    "text": "14.1 regular arguments\n\nlst = [1,2,3]\n\nnor_lst = lst\n#  ==\n#  is\nprint(id(lst))\nprint(id())\nnor_lst.append(4)\n\nprint(lst)\nprint(nor_lst)\n\n132290486511872\n132290486511872\n[1, 2, 3, 4]\n[1, 2, 3, 4]\n\n\n\ndef avelacru_element(lst):\n    lst.append('panir')\n    return lst\n\n\nlst_1 = list(range(10))\nprint(lst_1)\n\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n\n\n\nlst_avelacrac = avelacru_element(lst_1)\nprint(lst_avelacrac)\n\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 'panir']\n\n\n\nprint(lst_avelacrac)\nprint(lst_1)\n# ’æ’°’µ\n\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 'panir']\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 'panir']\n\n\n\nprint(id(lst_avelacrac))\nprint(id(lst_1))\n\n132291325598272\n132291325598272\n\n\n\nprint(lst_1)\nprint(lst_1.copy())\n\nprint(id(lst_1))\nprint(id(lst_1.copy()))\n\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 'panir']\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 'panir']\n132291325598272\n132290486508608\n\n\n\nlst_1 = list(range(10))\n\nlst_avelacrac_okay_klini_senc = avelacru_element(lst_1.copy())\n\nprint(lst_1.copy())\nprint(lst_avelacrac_okay_klini_senc)\nprint(lst_1)\n\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 'panir']\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n\n\n\nprint(id(lst_1.copy()))\nprint(id(lst_avelacrac_okay_klini_senc))\n\n132371578933952\n132371593482112",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>10</span>¬† <span class='chapter-title'>08 Functions 2</span>"
    ]
  },
  {
    "objectID": "python/08_Functions_2.html#mutable-objects-as-default-arguments",
    "href": "python/08_Functions_2.html#mutable-objects-as-default-arguments",
    "title": "10¬† 08 Functions 2",
    "section": "14.2 Mutable objects as default arguments",
    "text": "14.2 Mutable objects as default arguments\n\ndef create_album(album_name, songs=[]):\n    return {'album_name': album_name,\n            'songs': songs}\n\n# print(create_album(\"‘ø’∏’¥’´’ø’°’Ω\"))\n\nprint(create_album(\"‘ø’∏’¥’´’ø’°’Ω\", [\"‘≥’°÷Ä’∏÷Ç’∂ ’°\"]))\n\n{'album_name': '‘ø’∏’¥’´’ø’°’Ω', 'songs': ['‘≥’°÷Ä’∏÷Ç’∂ ’°']}\n\n\n\ndef create_album(album_name, songs=[]):\n    return {'album_name': album_name,\n            'songs': songs}\n\ndef add_song(album, song):\n    print(song)\n    album['songs'].append(song)\n    return album\n\npf = create_album('Pink Floyd')\nrh = create_album('Radiohead')\n\nprint(pf)\nprint(rh)\nprint()\n\nprint(add_song(pf, 'Breathe'))\nprint(add_song(rh, 'Reckoner'))\n\n# 1.\n# ’∞’´’∑’∏’≤’∏÷Ç’©’µ’∏’∂ ’∫’°’∞’•’¨ create_album,\n# 1233 -&gt; album_name\n# 1234 -&gt; songs, value -&gt; []\n\n# pf = {\"Pink Floyd\", \"songs\": ’•’∂ ’´’∂’π ’∫’°’∞’æ’°’Æ ’° 1234}\n# rf = {\"Radiohead\", \"songs\": ’•’∂ ’´’∂’π ’∫’°’∞’æ’°’Æ ’° 1234}\n\n# 1234 [] -&gt; [\"Breathe\"]\n# 1234 [\"Breathe\"] -&gt; [\"Breathe\", \"Reckoner\"]\n\n{'album_name': 'Pink Floyd', 'songs': []}\n{'album_name': 'Radiohead', 'songs': []}\n\nBreathe\n{'album_name': 'Pink Floyd', 'songs': ['Breathe']}\nReckoner\n{'album_name': 'Radiohead', 'songs': ['Breathe', 'Reckoner']}\n\n\n’Ø’°÷Ä’°’∂÷Ñ ’∏÷Ç’≤’≤’•’∂÷Ñ ’£÷Ä’•’¨’∏’æ\n\na = []\nb = []\nc = a\n\nprint(a == b)\nprint(a == c)\n\nprint(id(a))\nprint(id(b))\nprint(id(c))\n\nprint(a is b)\nprint(a is c)\n\nTrue\nTrue\n132290323284352\n132290323215680\n132290323284352\nFalse\nTrue\n\n\n\ndef create_album(album_name, songs=None):\n    if songs is None: # ’∏÷Ç’º’°’°’°, ’∞’°’¶’´’æ is-’® ÷Ö’£’ø’°’£’∏÷Ä’Æ’•÷Å’´’∂÷Ñ\n        songs = []\n    return {'album_name':album_name,\n            'songs': songs}\n\ndef add_song(album, song):\n    # print(song)\n    album['songs'].append(song)\n    return album\n\npf = create_album('Pink Floyd')\nrh = create_album('Radiohead')\n# pf = {'album_name': 'Pink Floyd', 'songs': []}\n# rh = {'album_name': 'Radiohead', 'songs': []}\n\nprint(pf)\nprint(rh)\nprint()\n\nprint(add_song(pf, 'Breath'))\nprint(add_song(rh, 'Reckoner'))\n\n{'album_name': 'Pink Floyd', 'songs': []}\n{'album_name': 'Radiohead', 'songs': []}\n\n{'album_name': 'Pink Floyd', 'songs': ['Breath']}\n{'album_name': 'Radiohead', 'songs': ['Reckoner']}",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>10</span>¬† <span class='chapter-title'>08 Functions 2</span>"
    ]
  },
  {
    "objectID": "python/08_Functions_2.html#map",
    "href": "python/08_Functions_2.html#map",
    "title": "10¬† 08 Functions 2",
    "section": "17.1 Map",
    "text": "17.1 Map\n\nmap(’´’∂’π-’∏÷Ä ÷Ü’∏÷Ç’∂’Ø÷Å’´’°, ’∞’°’æ’°÷Ñ’°’Æ’∏÷Ç)\n\n\n  File \"&lt;ipython-input-58-9aa394208246&gt;\", line 1\n    map(’´’∂’π-’∏÷Ä ÷Ü’∏÷Ç’∂’Ø÷Å’´’°, ’∞’°’æ’°÷Ñ’°’Æ’∏÷Ç)\n        ^\nSyntaxError: invalid syntax. Perhaps you forgot a comma?\n\n\n\n\n\nrange(1,4)\n\nrange(1, 4)\n\n\n\nmap(lambda x: x**2, [5,0,9])\n\n&lt;map at 0x78513d9c04f0&gt;\n\n\n\nlist(map(lambda x: x**2, [5,0,9]))\n\n[25, 0, 81]\n\n\n\ndef qarakusi(x):\n    return x**2\n\nlist(map(qarakusi, [5,0,9]))\n\n\n[qarakusi(i) for i in [5, 0, 9]]\n\n[25, 0, 81]\n\n\n\nlist(map(bool, [1, '', 3, -1, 0]))\n\n[True, False, True, True, False]\n\n\n\ndef xoranard(x):\n    return x**3\n\nlist(map(xoranard, [1, 3, -1, 0]))\n\n\n[1, 27, -1, 0]\n\n\n\n\n# \"1 3 4\"\n# [1, 3, 4]\n[int(i) for i in input().split()]\nlist(map(lambda x: int(x)**2, input().split()))\n\n1 3 4\n1 3 4\n\n\n[1, 9, 16]\n\n\n‘ª’∂’π’´’û ’∏÷Ç’≤’≤’°’Ø’´ list comprehension ’π÷Ö’£’ø’°’£’∏÷Ä’Æ’•’∂÷Ñ https://stackoverflow.com/questions/1247486/list-comprehension-vs-map",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>10</span>¬† <span class='chapter-title'>08 Functions 2</span>"
    ]
  },
  {
    "objectID": "python/08_Functions_2.html#filter",
    "href": "python/08_Functions_2.html#filter",
    "title": "10¬† 08 Functions 2",
    "section": "17.2 Filter",
    "text": "17.2 Filter\n\n[i for i in [5, 0, 9] if i % 2 == 0]\n\n[0]\n\n\n\nnumbers = [1, 2, 3, 4, 5, 6]\neven_numbers = filter(lambda x: x % 2 == 0, numbers)\nprint(list(even_numbers))\n\n[2, 4, 6]\n\n\n\nprint(filter(lambda x: x % 2 == 0, numbers))\n\n&lt;filter object at 0x78513db7f790&gt;\n\n\n\n[i for i in numbers if i % 2 == 0]\n\n[2, 4, 6]\n\n\n\n# ’Ω’ø’°’∂’°’¨ ’¢’°’º’•÷Ä’® ’∏÷Ä’∏’∂÷Ñ ’¥’•’Æ’°’ø’°’º’∏’æ ’•’∂ ’Ω’Ø’Ω’æ’∏÷Ç’¥\nbarer = ['’ä’°’∂’´÷Ä', \"’¢’°÷Ä÷á\", \"’∫’∏’∂’π’´’Ø\"]\n\n\nlist(filter(lambda x: x[0].isupper(), barer))\n\n['’ä’°’∂’´÷Ä']\n\n\n\n[x for x in barer if x[0].isupper()]\n\n['’ä’°’∂’´÷Ä']",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>10</span>¬† <span class='chapter-title'>08 Functions 2</span>"
    ]
  },
  {
    "objectID": "python/08_Functions_2.html#reduce",
    "href": "python/08_Functions_2.html#reduce",
    "title": "10¬† 08 Functions 2",
    "section": "17.3 Reduce",
    "text": "17.3 Reduce\n\nfrom functools import reduce\n\nnumbers = [1, 2, 3, 4, 5]\nproduct = reduce(lambda x, y: x*y, numbers)\nprint(product)\n\n120\n\n\n\n1*2 = 2\n[1, 2, 3, 4, 5] -&gt; [2, 3, 4, 5]\n\n2*3 = 6\n[2, 3, 4, 5] -&gt; [6, 4, 5]\n\n6 * 4 = 24\n[6, 4, 5] -&gt; [24, 5]\n\n24*5 = 120",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>10</span>¬† <span class='chapter-title'>08 Functions 2</span>"
    ]
  },
  {
    "objectID": "python/09_Files_Packages_Terminal.html",
    "href": "python/09_Files_Packages_Terminal.html",
    "title": "11¬† 09 - Files, Packages, Terminal",
    "section": "",
    "text": "12 Terminal\ndir - Lists the files and directories in the current directory.\ncd - Changes the current working directory.\ncd.. - Goes up one directory level.\nmd / mkdir - Creates a new directory.\ndel - Deletes a file.\ncopy - Copies a file.\nmove - Moves a file or directory.\nren - Renames a file or directory.\ntype - Displays the contents of a file.\ncls - Clear eveeything\ntasklist - Lists the running processes.\nhelp - Displays help information for a command.\nModules 1. ’∂’∏÷Ç’µ’∂ folder’´ ’¥’•’ª ’¥’´ ÷Ü’°’µ’¨’´÷Å ’¥’µ’∏÷Ç’Ω’® ÷Ö’£’ø’°’£’∏÷Ä’Æ’•’¨ 2. ’∏÷Ç÷Ä’´’∑ ÷Ü’∏’¨’§’º’´÷Å ÷Ü’°’µ’¨ ÷Ö’£’ø’°’£’∏÷Ä’Æ’•’¨ 3. __ init .py ÷Ü’°’µ’¨’´ ’¥’°’Ω’´’∂ 4. if  name __ == ‚Äú__ main __‚Äù (’°’º’°’∂÷Å ’¢’°÷Å’°’ø) built-in modules 1. os 2. time 3. random 4. ’∞’°’æ’•’Ω not built-in modules 1. pygame-’´ ÷Ö÷Ä’´’∂’°’Ø 2. tqdm\nFile I/O 1. working with files (different modes) 2. with statement",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>11</span>¬† <span class='chapter-title'>09 - Files, Packages, Terminal</span>"
    ]
  },
  {
    "objectID": "python/09_Files_Packages_Terminal.html#tqdm",
    "href": "python/09_Files_Packages_Terminal.html#tqdm",
    "title": "11¬† 09 - Files, Packages, Terminal",
    "section": "18.1 tqdm",
    "text": "18.1 tqdm\ntqdm means ‚Äúprogress‚Äù in Arabic (taqadum, ÿ™ŸÇÿØŸëŸÖ) and is an abbreviation for ‚ÄúI love you so much‚Äù in Spanish (te quiero demasiado)\n\n!pip install tqdm # pip install packages\n\nERROR: Invalid requirement: '#'\n\n\n\nimport time\n\nfor i in range(30):\n    print(i)\n    time.sleep(0.5)\n\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n\n\n\nprint(1)\ntime.sleep(5)\nprint(3)\n\n1\n3\n\n\n\nimport time\n\nfor i in range(30):\n    if i % 5 == 0:\n        print(f\"’°÷Ä’•÷Å’´ {i} ’∞’°’ø\")\n    time.sleep(1)\n\n’°÷Ä’•÷Å’´ 0 ’∞’°’ø\n’°÷Ä’•÷Å’´ 5 ’∞’°’ø\n\n\n\n---------------------------------------------------------------------------\nKeyboardInterrupt                         Traceback (most recent call last)\nInput In [14], in &lt;cell line: 3&gt;()\n      4 if i % 5 == 0:\n      5     print(f\"’°÷Ä’•÷Å’´ {i} ’∞’°’ø\")\n----&gt; 6 time.sleep(1)\n\nKeyboardInterrupt: \n\n\n\n\n!pip install tqdm # pip -&gt; Pip Installes Packages\n\nRequirement already satisfied: tqdm in /usr/local/lib/python3.10/dist-packages (4.66.1)\n\n\n\n# pip install tqdm\nfrom tqdm import tqdm\n\n\nfor i in tqdm(range(30)):\n    time.sleep(0.5)\n\n  0%|          | 0/30 [00:00&lt;?, ?it/s]100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 30/30 [00:15&lt;00:00,  1.91it/s]\n\n\n\nwith open(\"anun.txt\", \"w\") as f:\n    f.write(\"\"\"caxkac dashtum noric tesa im yarin\nim annman im gexani maralin\nvarder canem mer siro chanaparin\ndraxti mej shoxshoxum e im perin\n\n\ndraxti alvan caxik e im perin\nanmahakan nektar uni shurterin\ndraxti alvan caxik e im perin\n\nanmahakan nektar uni shurterin\n\nancnum eynq caxkac dalar purakov\nsirts liqn e nra siro krakov\nvoxj ashxarn el tekuz man gas chrakov\nmievnuyn e annman e im perin\n\n\ndraxti alvan caxik e im perin\nanmahakan nektar uni shurterin\ndraxti alvan caxik e im perin\n\nanmahakan nektar uni shurterin\n\nsirte paycar erkni luys u astxi pes\nunqere ker ereq orva lusni pes\nlezun qaxcr xand u shaqar e ases\ndraxti alvan caxik e im perin\n\n\ndraxti alvan caxike im perin\nanmahakan nektar uni shurterin\ndraxti alvan caxike im perin\n\nanmahakan nektar uni shurterin\n\ncaxkac dashtum darcyal tesa im yarin\nim annman im gexani maralin\nvarder canem mer siro chanaparin\ndraxti mej shoxshoxum e im perin\n\n\ndraxti alvan caxik e im perin\nanmahakan nektar uni shurterin\ndraxti alvan caxik e im perin\nanmahakan nektar uni shurterin\"\"\")\n\n\nos.chdir(\"..\")\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\n&lt;ipython-input-2-94ca94191889&gt; in &lt;cell line: 1&gt;()\n----&gt; 1 os.chdir(\"..\")\n\nNameError: name 'os' is not defined",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>11</span>¬† <span class='chapter-title'>09 - Files, Packages, Terminal</span>"
    ]
  },
  {
    "objectID": "python/09_Files_Packages_Terminal.html#’Ω’∏’æ’∏÷Ä’°’Ø’°’∂-’±÷á",
    "href": "python/09_Files_Packages_Terminal.html#’Ω’∏’æ’∏÷Ä’°’Ø’°’∂-’±÷á",
    "title": "11¬† 09 - Files, Packages, Terminal",
    "section": "19.1 ’Ω’∏’æ’∏÷Ä’°’Ø’°’∂ ’±÷á",
    "text": "19.1 ’Ω’∏’æ’∏÷Ä’°’Ø’°’∂ ’±÷á\n\nPATH = 'anun.txt'\n\nf = open(PATH, mode=\"r\") # open(PATH)\nprint(f)\n\n&lt;_io.TextIOWrapper name='anun.txt' mode='r' encoding='UTF-8'&gt;\n\n\n\nprint(f.read())\n\nf.close()\n\ncaxkac dashtum noric tesa im yarin\nim annman im gexani maralin\nvarder canem mer siro chanaparin\ndraxti mej shoxshoxum e im perin\n\n\ndraxti alvan caxik e im perin\nanmahakan nektar uni shurterin\ndraxti alvan caxik e im perin\n\nanmahakan nektar uni shurterin\n\nancnum eynq caxkac dalar purakov\nsirts liqn e nra siro krakov\nvoxj ashxarn el tekuz man gas chrakov\nmievnuyn e annman e im perin\n\n\ndraxti alvan caxik e im perin\nanmahakan nektar uni shurterin\ndraxti alvan caxik e im perin\n\nanmahakan nektar uni shurterin\n\nsirte paycar erkni luys u astxi pes\nunqere ker ereq orva lusni pes\nlezun qaxcr xand u shaqar e ases\ndraxti alvan caxik e im perin\n\n\ndraxti alvan caxike im perin\nanmahakan nektar uni shurterin\ndraxti alvan caxike im perin\n\nanmahakan nektar uni shurterin\n\ncaxkac dashtum darcyal tesa im yarin\nim annman im gexani maralin\nvarder canem mer siro chanaparin\ndraxti mej shoxshoxum e im perin\n\n\ndraxti alvan caxik e im perin\nanmahakan nektar uni shurterin\ndraxti alvan caxik e im perin\nanmahakan nektar uni shurterin\n\n\n\nf = open(PATH, \"r\")\n\nfor line in f:\n    print(line)\n\nf.close()\n\ncaxkac dashtum noric tesa im yarin\n\nim annman im gexani maralin\n\nvarder canem mer siro chanaparin\n\ndraxti mej shoxshoxum e im perin\n\n\n\n\n\ndraxti alvan caxik e im perin\n\nanmahakan nektar uni shurterin\n\ndraxti alvan caxik e im perin\n\n\n\nanmahakan nektar uni shurterin\n\n\n\nancnum eynq caxkac dalar purakov\n\nsirts liqn e nra siro krakov\n\nvoxj ashxarn el tekuz man gas chrakov\n\nmievnuyn e annman e im perin\n\n\n\n\n\ndraxti alvan caxik e im perin\n\nanmahakan nektar uni shurterin\n\ndraxti alvan caxik e im perin\n\n\n\nanmahakan nektar uni shurterin\n\n\n\nsirte paycar erkni luys u astxi pes\n\nunqere ker ereq orva lusni pes\n\nlezun qaxcr xand u shaqar e ases\n\ndraxti alvan caxik e im perin\n\n\n\n\n\ndraxti alvan caxike im perin\n\nanmahakan nektar uni shurterin\n\ndraxti alvan caxike im perin\n\n\n\nanmahakan nektar uni shurterin\n\n\n\ncaxkac dashtum darcyal tesa im yarin\n\nim annman im gexani maralin\n\nvarder canem mer siro chanaparin\n\ndraxti mej shoxshoxum e im perin\n\n\n\n\n\ndraxti alvan caxik e im perin\n\nanmahakan nektar uni shurterin\n\ndraxti alvan caxik e im perin\n\nanmahakan nektar uni shurterin\n\n\n\nf = open(PATH, \"r\")\n\ntext = f.readlines()\n\nprint(text)\n\n['caxkac dashtum noric tesa im yarin\\n', 'im annman im gexani maralin\\n', 'varder canem mer siro chanaparin\\n', 'draxti mej shoxshoxum e im perin\\n', '\\n', '\\n', 'draxti alvan caxik e im perin\\n', 'anmahakan nektar uni shurterin\\n', 'draxti alvan caxik e im perin\\n', '\\n', 'anmahakan nektar uni shurterin\\n', '\\n', 'ancnum eynq caxkac dalar purakov\\n', 'sirts liqn e nra siro krakov\\n', 'voxj ashxarn el tekuz man gas chrakov\\n', 'mievnuyn e annman e im perin\\n', '\\n', '\\n', 'draxti alvan caxik e im perin\\n', 'anmahakan nektar uni shurterin\\n', 'draxti alvan caxik e im perin\\n', '\\n', 'anmahakan nektar uni shurterin\\n', '\\n', 'sirte paycar erkni luys u astxi pes\\n', 'unqere ker ereq orva lusni pes\\n', 'lezun qaxcr xand u shaqar e ases\\n', 'draxti alvan caxik e im perin\\n', '\\n', '\\n', 'draxti alvan caxike im perin\\n', 'anmahakan nektar uni shurterin\\n', 'draxti alvan caxike im perin\\n', '\\n', 'anmahakan nektar uni shurterin\\n', '\\n', 'caxkac dashtum darcyal tesa im yarin\\n', 'im annman im gexani maralin\\n', 'varder canem mer siro chanaparin\\n', 'draxti mej shoxshoxum e im perin\\n', '\\n', '\\n', 'draxti alvan caxik e im perin\\n', 'anmahakan nektar uni shurterin\\n', 'draxti alvan caxik e im perin\\n', 'anmahakan nektar uni shurterin']\n\n\n\nfile = open(PATH, \"r\")\n\nfile.readline() # byte\n\n'caxkac dashtum noric tesa'\n\n\n\n\nf = open(\"anun.txt\")\n\nprint(f.closed)\nf.close() # ’∑’°’º’´÷Å ÷É’∏÷Ä’±’°’∂÷Ñ’´÷Å ’∞’•’º’∏÷Ç, ’∫’•’ø÷Ñ’° ’¥’´’∑’ø ÷É’°’Ø’•’∂÷Ñ ÷Ü’°’µ’¨’®\nprint(f.closed)\n\nFalse\nTrue\n\n\n\nhelp(open)\n\n\n# read and write\n\n\nfile = open(PATH, mode=\"a\")\n# print(file.read())\nfile.write('sadasad')\n# file.read()\n\nfile.close()\n\n\nfile.readlines()\n\n\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n&lt;ipython-input-13-5d3c54c9c0d3&gt; in &lt;cell line: 1&gt;()\n----&gt; 1 file.readlines()\n\nValueError: I/O operation on closed file.\n\n\n\n\nCharacter Meaning\n--------- ---------------------------------------------------------------\n'r'       open for reading (default)\n'w'       open for writing, truncating the file first\n'x'       create a new file and open it for writing\n'a'       open for writing, appending to the end of the file if it exists\n'b'       binary mode\n't'       text mode (default)\n'+'       open a disk file for updating (reading and writing)\n'U'       universal newline mode (deprecated)",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>11</span>¬† <span class='chapter-title'>09 - Files, Packages, Terminal</span>"
    ]
  },
  {
    "objectID": "python/09_Files_Packages_Terminal.html#with",
    "href": "python/09_Files_Packages_Terminal.html#with",
    "title": "11¬† 09 - Files, Packages, Terminal",
    "section": "19.2 with",
    "text": "19.2 with\n\nfile = open(PATH, \"r\")\nprint(file.closed)\nfile.close()\nprint(file.closed)\n\nFalse\nTrue\n\n\n\nf = open(PATH, \"r\")\nprint(f)\n\nprint(f.closed)\n\n&lt;_io.TextIOWrapper name='anun.txt' mode='r' encoding='UTF-8'&gt;\nFalse\n\n\n\nwith open(PATH, \"r\") as f:\n    print(f.read())\n    # f.write(\"a\")\n    print(f.closed)\n# f.closed\nprint(f.closed)\n\ncaxkac dashtum noric tesa im yarin\nim annman im gexani maralin\nvarder canem mer siro chanaparin\ndraxti mej shoxshoxum e im perin\n\n\ndraxti alvan caxik e im perin\nanmahakan nektar uni shurterin\ndraxti alvan caxik e im perin\n\nanmahakan nektar uni shurterin\n\nancnum eynq caxkac dalar purakov\nsirts liqn e nra siro krakov\nvoxj ashxarn el tekuz man gas chrakov\nmievnuyn e annman e im perin\n\n\ndraxti alvan caxik e im perin\nanmahakan nektar uni shurterin\ndraxti alvan caxik e im perin\n\nanmahakan nektar uni shurterin\n\nsirte paycar erkni luys u astxi pes\nunqere ker ereq orva lusni pes\nlezun qaxcr xand u shaqar e ases\ndraxti alvan caxik e im perin\n\n\ndraxti alvan caxike im perin\nanmahakan nektar uni shurterin\ndraxti alvan caxike im perin\n\nanmahakan nektar uni shurterin\n\ncaxkac dashtum darcyal tesa im yarin\nim annman im gexani maralin\nvarder canem mer siro chanaparin\ndraxti mej shoxshoxum e im perin\n\n\ndraxti alvan caxik e im perin\nanmahakan nektar uni shurterin\ndraxti alvan caxik e im perin\nanmahakan nektar uni shurterin\nFalse\nTrue\n\n\n\n# file = open(PATH, \"r\")\nPATH = \"anun.txt\"\n\nwith open(PATH, 'a') as f1: # ’∂’∏÷Ç’µ’∂’∂ ’° ’´’∂’π f1 = open(PATH, \"a\")\n    f1.write(\"1\")\n\n    # ......\n    # ......\n\n    # file.close()\nprint(file.closed)\n\nFalse\n\n\n\n# file = open(PATH, \"r\")\n\nwith open(PATH, 'r') as file:\n    # print(file)\n    print(file.closed)\n    for line in file:\n        print(line)\n\nfile.closed\n\n\n# file = open(PATH, \"r\")\n\nwith open(PATH, 'r') as file:\n    # print(file)\n    print(file.closed)\n    for line in file:\n        print(line)\n\nfile.closed",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>11</span>¬† <span class='chapter-title'>09 - Files, Packages, Terminal</span>"
    ]
  },
  {
    "objectID": "python/09_Files_Packages_Terminal.html#json",
    "href": "python/09_Files_Packages_Terminal.html#json",
    "title": "11¬† 09 - Files, Packages, Terminal",
    "section": "19.3 JSON",
    "text": "19.3 JSON\n\nimport json\n\nexample_data = {\n    \"name\": \"Bob\",\n    \"age\": 30,\n    \"languages\": [\"English\", \"French\", \"German\"]\n}\n\nwith open('data.json', 'w') as file:\n    json.dump(example_data, file, indent=0)\n\n\nimport json\n\nwith open('data.json', 'r') as file:\n    data = json.load(file)\n\nprint(\"Name:\", data[\"name\"])\nprint(\"Age:\", data[\"age\"])\nprint(\"Languages:\", data[\"languages\"])\n\nName: Bob\nAge: 30\nLanguages: ['English', 'French', 'German']\n\n\n\nperson = {\n    \"name\": \"Alice\",\n    \"age\": 25,\n    \"languages\": [\"Python\", \"JavaScript\", \"C++\"]\n}\n\nwith open('person.json', 'w') as file:\n    json.dump(person, file, indent=2)  # `indent` makes the JSON readable",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>11</span>¬† <span class='chapter-title'>09 - Files, Packages, Terminal</span>"
    ]
  }
]