[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Python Math & ML Course",
    "section": "",
    "text": "ToDo",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Python & Machine Learning Course</span>"
    ]
  },
  {
    "objectID": "misc/google_colab.html",
    "href": "misc/google_colab.html",
    "title": "2  Google Colab-ից օգտվել",
    "section": "",
    "text": "Google Colab-ով նյութը բացելու համար\n\nԱնցեք հղումով, օրինակ այս\nԿցտրեք վերևի աջ անկյունում connect-ին\nՄուտք գործեք ձեր Google account\nԻնչ-որ բջիջ աշխատացրեք (եռանկյունի կոճակ) կամ Shift + Enter\nկցտրեք Run anyway (սա բայց մենակ եթե գիտեք որ ոչ վտանգավոր կոդ ա էլի)\n\nColab-ի ոչ կոդային բջիջներում markdown գործիքով են գրում, կարող եք կարդալ դրա մասին այստեղ",
    "crumbs": [
      "Misc",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Google Colab-ից օգտվել</span>"
    ]
  },
  {
    "objectID": "python/01_P_L01_Print_comments_variables_numbers_input.html",
    "href": "python/01_P_L01_Print_comments_variables_numbers_input.html",
    "title": "3  L01 Intro: Print, Comments, Variables, Numbers, Input",
    "section": "",
    "text": "4 📚 Նյութը\nԴիլիջան, լուսանկարը\n(գուցե մի քիչ ավելի հին վերսիա լինի)\nprint(\"Բարևևևևևևև, եեեեերկիր\")\n(с) Shushan Petrosyan, Inga Anush Arshakyanner, Armen Martirosyan, Dodo Babayan",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>L01 Intro: Print, Comments, Variables, Numbers, Input</span>"
    ]
  },
  {
    "objectID": "python/01_P_L01_Print_comments_variables_numbers_input.html#արտածում-printտպել",
    "href": "python/01_P_L01_Print_comments_variables_numbers_input.html#արտածում-printտպել",
    "title": "3  L01 Intro: Print, Comments, Variables, Numbers, Input",
    "section": "4.1 Արտածում (Print(տպել))",
    "text": "4.1 Արտածում (Print(տպել))\nPython-ում թիվ արտածելու համար պարզապես գրում ենք print (տպել), ապա բաց փակագծերի մեջ թե ինչ թիվ ուզում արտածել\n\nprint(509)\n\n# print      (    509   )\n\nնույն ձև կարող ենք նաև տեքստ արտածել (տպել)\n\nprint(\"panir\")\n# print(\"panir\") # կապ չունի մի չակերտ('') կդնենք թե երկու(\"\"), կարևորը նույն քանակությամբ\n\nԿարող ենք նաև միանգամից մի քանի բան տպել\n\nprint(\"Hello\", \"Malmo\")  # նկատենք որ արժեքները իրարից առանձնացվում են այս դեպքում բացատով, սրան դեռ կանդրադառնանք\n\n\nprint('Hello', \"Malmo\", 12, 'points go to')\n\nԿարող ենք տարբեր տողերի վրա գրել հրամանները և Python-ը վերևից ներքև կարդալով կկատարի հրամանները\n\nprint('Hello', 'Malmo', 12, 'points go to')\nprint('Armenia')\n\nԱռաջադրանք տպել “Hello World!” տեքստը և ուրախանալ\n\n\n\n\n\n\n\nprint(\"Hello World!\")\n\n\n4.1.1 sep\nեթե ուզում ենք որ արժեքները իրարից առանձնացվեն ոչթե բացատով այլ մեր ուզած բանով, ապա պետք է print հրամանի մեջ ավելացնենք՝ print('ինչ-որ բան', 'ինչ-որ ուրիշ բան', sep='¯\\_(ツ)_/¯')\nsep-ը գալիսա անգլերեն separator բառից, separate` բաժանել, separator՝ բաժանիչ կամ առանձնացնիչ (չգիտեմ ոնց թարգմանեմ :))\n\nprint('ինչ-որ բան', 'ինչ-որ ուրիշ բան')\nprint('ինչ-որ բան', 'ինչ-որ ուրիշ բան', sep=\" \")\nprint('ինչ-որ բան', 'ինչ-որ ուրիշ բան', sep='¯\\_(ツ)_/¯')\n\n# default -&gt; \" \"\n\nՊարտադիր պետք ա ՝sep՝-ը նշենք վերջում\n\nprint('ինչ-որ բան', sep=\"*\", 'ինչ-որ ուրիշ բան')\n\n\n\n4.1.2 end\nՆաև կարող ենք նկատել որ եթե մի քանի տող print հրամաններ ունենք, ամեն մեկը արտածումա նոր տողի վրա՝ դա էլ կարող ենք փոխել\nPython-ում եթե ինչ-որ բան ուզում ենք նոր տողից տպել գրում ենք (n-ը new բառիցա) գալիս, իսկ նրա համարա որ Python-ը հասկանա որ սովորական n տառը չենք ուզում տպենք\n\nprint(\"aaaa\\nbbbb\")\n\nprint(\"aaaa\")\nprint(\"bbbb\")\n\n\nprint('ես առաջին տողի վրա եմ', end=\"\\n\")\nprint('ես էլ երկրորդ')\n\n\nprint('ես առաջին տողի վրա եմ', end=\"*\")\nprint('հեսա գամ կողքդ')\n\nԻնչպես տեսանք վերևում sep պարամետրը ավելացնելով փոխում էինք թե ինչպես արժեքները իրարից առանձնացվեն մեկ print հրամանում իսկ end ով կփոխենք թե ինչպես տարբեր տողերի print-երը իրարից առանձնացվեն (կամ էլ ուղղակի մեր պրինտի վերջում կարտածենք ինչ ուզենք)\n\nprint('Hello', 'Malmo', 12, 'points go to', end='\\n') # սա այն տարբերակնա երբ end չենք տալիս (default տարբերակը)\nprint('Armenia')\n\n\nprint('Hello', 'Malmo', 12, 'points go to', end='... դրամատիկ դադար ...', sep=\"-\")\nprint('Armenia')\n\nԱյս ամենը կարող ենք նաև միաժամանակ օգտագործել\n\nprint('ես առաջին print-ն եմ')\nprint('իմ վերջում կլինի 5 հատ աստղանիշով', end='*****')\nprint(3, 4, 1, 0, 'I love', 'կարգին հաղորդում')\nprint('հեսա ներևում կտպենք նույն վերևի տողը ուղղակի ամենինչ իրարից գծիկով առանձնացված կլինի ու վերջում էլ կգրենք շնորհավոր ամանոր')\nprint('ես երրորդ պրինտն եմ', 3, 4, 1, 0, 'I love', 'կարգին հաղորդում', sep='-', end='շնորհավոր ամանոր')\n\nՆկատենք որ 1. 3, 4, 1, 0 թվերը միանգամից երկրորդ տողում են *****-ներից հետո, ոչ թե նոր տողից 2. վերջին տողում հաղորդում բառից հետո - չկա",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>L01 Intro: Print, Comments, Variables, Numbers, Input</span>"
    ]
  },
  {
    "objectID": "python/01_P_L01_Print_comments_variables_numbers_input.html#comment-ներ-մեկնաբանություններ",
    "href": "python/01_P_L01_Print_comments_variables_numbers_input.html#comment-ներ-մեկնաբանություններ",
    "title": "3  L01 Intro: Print, Comments, Variables, Numbers, Input",
    "section": "4.2 Comment-ներ (մեկնաբանություններ)",
    "text": "4.2 Comment-ներ (մեկնաբանություններ)\nեթե ուզում ենք գրենք ծրագրի մասը որը նախատեսվածա մարդկանց համար (օրինակ հենց մեր), այլ ոչ թե համակարգչի դա կարող ենք անել այ սենց\n\nprint(1)\n# ես տեսանելի եմ ձեզ, բայց համակարգիչը ինձ չի տեսնում\nprint(2) # a\n\n\nprint(1)\n\"\"\"Triple quotes\nես մի քանի տողի վրա կարող եմ լինել,\nև մեկա\nկոդի աշխատելու վրա չեմ ազդի, բայց ես comment չեմ\n\"\"\"\nprint(2)",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>L01 Intro: Print, Comments, Variables, Numbers, Input</span>"
    ]
  },
  {
    "objectID": "python/01_P_L01_Print_comments_variables_numbers_input.html#փոփոխականներ-variables",
    "href": "python/01_P_L01_Print_comments_variables_numbers_input.html#փոփոխականներ-variables",
    "title": "3  L01 Intro: Print, Comments, Variables, Numbers, Input",
    "section": "4.3 Փոփոխականներ (Variables)",
    "text": "4.3 Փոփոխականներ (Variables)\nՓոփոխականների միջոցով կարող ենք արժեքը հարմար պահել հիշողությունում և ապագայում օգտագործենք (տետր, դարակի օրինակ)\n\na = \"points go to\"\nprint(a)\n\n\n4.3.1 Փոփականների անվանում (Variable naming)\n\n# կարելիա\nmyvar = \"պանիր\" # var-ը variable-ի կարճնա ուղղակի\nmy_var = \"պանիր\" # snake case\n_my_var = \"պանիր\"\nmyVar = \"պանիր\" # camel case\nMYVAR = \"պանիր\"\nmyvar2 = \"պանիր\"\n\n# չի կարելի\n2myvar = \"պանիր\"\nmy-var = \"պանիր\"\nmy var = \"պանիր\"\n\n\nԹույատրվուվումա օգտագործել հետևյալ նիշերւ՝ A-z, 0-9, և _\nԵթե երկու բառից կազմված անունա պայմանավորվածությունակ առանձնացնել իրարից _-ով\nիրավունք չունենք սկսել անունտ թվող, բայց _ ով կարող ենք\nմեծատառ փոքրատառը կապ ունեն, NAME ու name-ը նույն բանը չեն\n\n\n\n4.3.2 Ամրագրված անուններ\nչենք կարող օգտագործել հետևյալ անունները\nFalse, def, if, raise, None, del, import, return, True, elif, in, try, and else, is, while, as, except, lambda, with, assert, finally, nonlocal, yield, break, for, not, class, from, or, continue, global, pass\nՉարժի օգտագործել՝ O, I, l շատ հեշտ ա շփոթել 0, 1-ի հետ\n\nTrue = 5\n\n\nprint = 11\n\n\nprint(\"բարև\")\n\n\ndel print # ուղղենք արած սխալը\n\n\n\n4.3.3 Մի տողով մի քանի փոփոխաններիի արժեքներ վերագրել\n\na1 = 0\nb1 = 509\n\nprint(a1)\nprint(b1)\n\n\na, b = 0, 509\n\n\na, b, c = 0, 509 # քանակը պետք ա բռնի \n\n\na = b = c = 0 # վտանգավոր ա\nprint(b)",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>L01 Intro: Print, Comments, Variables, Numbers, Input</span>"
    ]
  },
  {
    "objectID": "python/01_P_L01_Print_comments_variables_numbers_input.html#թվեր-և-թվաբանական-գործողություններ",
    "href": "python/01_P_L01_Print_comments_variables_numbers_input.html#թվեր-և-թվաբանական-գործողություններ",
    "title": "3  L01 Intro: Print, Comments, Variables, Numbers, Input",
    "section": "4.4 Թվեր և թվաբանական գործողություններ",
    "text": "4.4 Թվեր և թվաբանական գործողություններ\n\n4.4.1 Թվերի տեսակներ\n\nInteger (ամբողջ թիվ)\nFloat (իրական թվեր, լողացող(float) ստորակետով)\nComplex (կոմպլեքս)\n\n\nprint(509, type(509))\nprint(1.2, type(1.2))\nprint(1.0, type(1.))\nprint(0.9, type(.9))\nprint(3 + 5j, type(3 + 5j))\n\n\n# կարող ենք թվի տեսակը փոխել այսպես\nprint(type(12.509))\nprint(int(12.509))\nprint(type(int(12.509)))\n\n\na = 12\nprint(a, type(a))\nprint(float(a), type(float(a)))",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>L01 Intro: Print, Comments, Variables, Numbers, Input</span>"
    ]
  },
  {
    "objectID": "python/01_P_L01_Print_comments_variables_numbers_input.html#թվաբանական-գործողություններ",
    "href": "python/01_P_L01_Print_comments_variables_numbers_input.html#թվաբանական-գործողություններ",
    "title": "3  L01 Intro: Print, Comments, Variables, Numbers, Input",
    "section": "4.5 Թվաբանական գործողություններ",
    "text": "4.5 Թվաբանական գործողություններ\n\n4.5.1 Գումարում, հանում, բազմապատկում, սովորական և ամբողթիվ բաժանում, աստիճան բարձրացնել, մնացորդ\n\nprint(1+2+  53)\nprint(1 + 2 + 53)\nprint(1+2+53)\n\n\nprint(1 - 4)\nprint(-5)\n\nՓոփոխականի տեսակ\n\na = 1 + 1\nprint(a, type(a))\n\nb = 1 + 2.1\nprint(b, type(b)) # int + float = float\n\nc = 1 + 2.0\nprint(c, type(c)) # եթե ուղղակի . դնենք արդեն float կդառնա\n\nԻՆչի 0.1 + 0.2 կարա հավասար չլինի 0.3-ի: Լավ վիդեո դա բացատրող՝ https://www.youtube.com/watch?v=PZRI1IfStY0\n\nx = 1.0 + 2.0 \nprint(x)\nprint(type(x))\n\n\nprint(5 * 12)\nprint(5 * 12.0)\n\n\n# / - միշտ տալիս ա float\nprint(14 / 3)\nprint(14 / 2)\n\n\nprint(14 // 3) # int(14/3)\nprint(type(14//3))\n\n# 14 = 4 * 3 + 2\n# print(int(14/3))\n\n\nprint(-5 // 3) # ամբողջաթիվ բաժանում -5 = -2 * 3 + 1\n\n\nprint(7 % 2) # մնացորդ 7 = 3 * 2 + 1\n\n\nprint(2**3) # էքսպոնենտ\n# 2 * 2 * 2\n\nprint(2**(1/2))\n\n\n\n4.5.2 գործողությունների հերթականությունը\n\nprint(2 * (3 + 1)) # սկզբում փակագծի միջինը, հետո արտադրյալը\n\n\nprint(2*3 + 1) # սկզբում բազմապատկում հետո գումարում\n\n\n\n4.5.3 Ավելի կարճ վերագրելու ձև\n\ntariq = 18\nprint(tariq)\n\ntariq = tariq + 1\nprint(tariq)\n\n\ntariq = 18\ntariq = tariq + 1.5\n\nprint(tariq)\n\n\ntariq = 18\ntariq += 1.5 # նույննա ինչ tariq = tariq + 1.5\n\nprint(tariq)\n\n\nb = 4\n\nb *= 3 # b = b * 3\nprint(b)\n\nb //= 5\nprint(b)",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>L01 Intro: Print, Comments, Variables, Numbers, Input</span>"
    ]
  },
  {
    "objectID": "python/01_P_L01_Print_comments_variables_numbers_input.html#input",
    "href": "python/01_P_L01_Print_comments_variables_numbers_input.html#input",
    "title": "3  L01 Intro: Print, Comments, Variables, Numbers, Input",
    "section": "4.6 Input",
    "text": "4.6 Input\n\na = input() # միշտ մուտքը տեքստ ա\nprint('Բարև', a)\n\n\nprint(a)\n\n\ninput()\n\nՄի քանի մուտք\n\nanun = input(\"Enter your name: \")\nazganun = input()\n\nprint(anun)\nprint(azganun)\n\n\na = 1\nprint(a)\n\na = input()\nprint(a)\n\nՊետք ա զգույշ լինենք տվյալների տեսակի հետ\n\nnum = input()\n\nprint(num + 2)\n\n\nprint(num, type(num)) # input-ը միշտ տեքստ ա վերադարձնում\n\n\ntiv = int(input())\n\nprint(type(tiv))\n\nprint(tiv + 1)\n\n\nnumber = int(input('Խնդրում ենք մուտքագրել թիվ'))\nprint(type(number))\nprint(number // 3)",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>L01 Intro: Print, Comments, Variables, Numbers, Input</span>"
    ]
  },
  {
    "objectID": "python/01_P_L01_Print_comments_variables_numbers_input.html#հիմնական-տնային",
    "href": "python/01_P_L01_Print_comments_variables_numbers_input.html#հիմնական-տնային",
    "title": "3  L01 Intro: Print, Comments, Variables, Numbers, Input",
    "section": "5.1 Հիմնական տնային",
    "text": "5.1 Հիմնական տնային\n\nProfound բաժին 1 (Մուտք և ելք)\nProfound բաժին 3 (Փոփոխականներ և ամբողջ թվեր)\nՈչ պարտադիր - կարող եք անանուն հայտնել Ձեր կարծիքը դասի վերաբերյալ այստեղ",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>L01 Intro: Print, Comments, Variables, Numbers, Input</span>"
    ]
  },
  {
    "objectID": "python/01_P_L01_Print_comments_variables_numbers_input.html#նշումներ",
    "href": "python/01_P_L01_Print_comments_variables_numbers_input.html#նշումներ",
    "title": "3  L01 Intro: Print, Comments, Variables, Numbers, Input",
    "section": "5.2 Նշումներ",
    "text": "5.2 Նշումներ\n\nՏնայինը անելիս մոտեցեք են սկզբունքով որ x խնդիրը լուծելիս դուք մենակ գիտեք են ամենինչը ինչ profound-ը մինչև x-ին հասնելը ներկայացրելա ա։ Երբեմն օգտագործող գործիքները սահմանափակելու դեպքում ա խնդիրը իսկականից օգուտ տալիս։ Օրինակի համար եթե խնդիր լինի որտեղ պետք ա սորտավորել թվերը ու դուք գիտեք sort հրամանի մասին՝ է հա, կարաք օգտագործեք էդ հրամանը, խնդիրը լուծվի՝ բայց արդյունքում նորմալ չեք սովորի էլի։\nԵթե քիչ ժամանակ ունեք կարաք բաց թողեք Բաժին 1 - 5, 6, 14 խնդիրները\nԲաժին 3 13-ում պետք ա զուտ ցանկացած թիվ տպեք\nԲաժին 3-ի վերջին երկու խնդիրները լիքը բզբզալու են, խորհուրդ կտամ շատ ժամանակ տրամադրեք իրենց\nProfound-ը ներկայացնող վիդեո՝ [TODO]\nՇուտ եմ ասել GPT ու նման գործիքներից օգտվել չկա\nԵթե հարցեր լինի՝ անպայման խաբար արեք (կառալյոկի պահը հիշեք)",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>L01 Intro: Print, Comments, Variables, Numbers, Input</span>"
    ]
  },
  {
    "objectID": "python/02_P_L02_Coditions.html",
    "href": "python/02_P_L02_Coditions.html",
    "title": "4  Bool տվյալների տեսակ",
    "section": "",
    "text": "4.1 համեմատության գործողություններ\nԱխ if տեսնեմ_օրերից_մի_օր:\n(c) ժողովուրդ\nif\n(c) Pink Floyd\nՀակառակ դեպքում՝ False\na = 11\nb = 509\nprint(a, \"==\", b, a==b)\nprint(a, \"!=\", b, a != b)\n\n11 == 509 False\n11 != 509 True\nprint(a, \"&gt;\", b, a&gt;b)\nprint(a, \"&lt;\", b, a&lt;b)\n\n11 &gt; 509 False\n11 &lt; 509 True\nprint(a, \"&gt;=\", b, a &gt;= b )\nprint(a, \"&lt;=\", b, a&lt;=b)\n\n11 &gt;= 509 False\n11 &lt;= 509 True\nprint(a, 'is', b, a is b)\n\n11 is 509 False",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Bool տվյալների տեսակ</span>"
    ]
  },
  {
    "objectID": "python/02_P_L02_Coditions.html#համեմատության-գործողություններ",
    "href": "python/02_P_L02_Coditions.html#համեմատության-գործողություններ",
    "title": "4  Bool տվյալների տեսակ",
    "section": "",
    "text": "Օպերատոր\nնկարագիր\n\n\n\n\n==\nTrue, եթե հավասար են\n\n\n!=\nTrue, եթե հավասար չեն\n\n\n&lt;\nTrue, եթե ավելի փոքրա առաջինը երկորդից\n\n\n&gt;\nTrue, եթե ավելի մեծա առաջինը երկորդից\n\n\n&lt;=\nTrue, եթե առաջինը ավելի փոքրա կամ հավասար երկորդից\n\n\n&gt;=\nTrue, եթե առաջինը ավելի մեծա կամ հավասար երկորդից\n\n\nis\nTrue, եթե նույն օբյեկտ են (հեսա կբացատրեմ :) )\n\n\n\n\n\n\n\n\n\n\n4.1.1 is-ը մանրամասն\n\nc = 465\nd = 465\n\nprint(c, '==', d, c == d)\nprint(c, 'is', d, c is d)\n\n465 == 465 True\n465 is 465 False\n\n\n\ne = c\nprint(e, 'is', c, e is c)\n\n465 is 465 True\n\n\n\nprint(id(c))\nprint(id(d))\nprint(id(e))\n\n140465260069104\n140465260070864\n140465260069104\n\n\n\nprint(c is d)\n# ն նույննա ինչ\nprint(id(c) == id(d))\n\nFalse\nFalse",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Bool տվյալների տեսակ</span>"
    ]
  },
  {
    "objectID": "python/02_P_L02_Coditions.html#բուլյան-տրամաբանություն",
    "href": "python/02_P_L02_Coditions.html#բուլյան-տրամաբանություն",
    "title": "4  Bool տվյալների տեսակ",
    "section": "4.2 Բուլյան տրամաբանություն",
    "text": "4.2 Բուլյան տրամաբանություն\nand, or, not\n\n# and\nprint(True and True) # True and True and True\nprint(True and False)\nprint(False and False)\n\nTrue\nFalse\nFalse\n\n\n\n# or\nprint(True or True)\nprint(True or False)\nprint(False or False)\n\nTrue\nTrue\nFalse\n\n\n\n# not\nprint(not True)\nprint(not False)\n\nFalse\nTrue",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Bool տվյալների տեսակ</span>"
    ]
  },
  {
    "objectID": "python/02_P_L02_Coditions.html#փոխանցականություն-transitivity",
    "href": "python/02_P_L02_Coditions.html#փոխանցականություն-transitivity",
    "title": "4  Bool տվյալների տեսակ",
    "section": "4.3 Փոխանցականություն (transitivity)",
    "text": "4.3 Փոխանցականություն (transitivity)\n\na = 11\n\nprint(a &gt; 10)\nprint(a &lt; 20)\n\nprint(10 &lt; a and a &lt; 20)\n\nprint(10 &lt; a &lt; 20) # 10 &lt; a and a &lt; 20\n\nTrue\nTrue\nTrue\nTrue\n\n\n\nprint(10 &lt; a &lt; 20)\n\nTrue\n\n\n\na = 11\nprint(10 == a &lt; 11) # 10 == a and a &lt; 11\n# ի՞նչ կտա\n\nFalse\n\n\n\n4.3.1 Վարժություններ\n\nprint(not 5 != 3)\n\n\nprint((not 4 == 4) or (4 &lt; 6))\n\n\nprint((5 &lt; 5 and 5 &gt; 3) or 4 &gt; 4)\n\n\nThe name “Boolean” comes from the mathematician George Boole;",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Bool տվյալների տեսակ</span>"
    ]
  },
  {
    "objectID": "python/02_P_L02_Coditions.html#բուլյանները-ինչպես-1-0",
    "href": "python/02_P_L02_Coditions.html#բուլյանները-ինչպես-1-0",
    "title": "4  Bool տվյալների տեսակ",
    "section": "4.4 Բուլյանները ինչպես 1, 0",
    "text": "4.4 Բուլյանները ինչպես 1, 0\n\nprint(True == 2)\nprint(False == 0)\n\nFalse\nTrue\n\n\n\nprint(True - True)\n\n0\n\n\n\nprint(True / False)\n\n\n---------------------------------------------------------------------------\nZeroDivisionError                         Traceback (most recent call last)\n&lt;ipython-input-13-89a2cd47f04e&gt; in &lt;cell line: 1&gt;()\n----&gt; 1 print(True / False)\n\nZeroDivisionError: division by zero",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Bool տվյալների տեսակ</span>"
    ]
  },
  {
    "objectID": "python/02_P_L02_Coditions.html#այլ",
    "href": "python/02_P_L02_Coditions.html#այլ",
    "title": "4  Bool տվյալների տեսակ",
    "section": "4.5 Այլ",
    "text": "4.5 Այլ\n\n== եթե համեմատում ենք,\n= եթե վերագրում ենք անում\n\nFalse են False ից ու 0 ից բացի նաև՝\n\nprint(int(3.14))\nprint(bool(3.14))\n\n3\nTrue\n\n\n\nbool(0)\n\nFalse\n\n\n\nbool(0.0)\n\nFalse\n\n\n\nbool('')\n\nFalse\n\n\n\nbool([])\nbool({})\nbool(())\n\nFalse\n\n\n\nbool(None)\n\nFalse\n\n\nՄնացած ամենինչ True\n\nprint(bool(3) + 5)\nprint(bool(3) and True)\n\n6\nTrue\n\n\n\nbool('պանիր')\n\nTrue",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Bool տվյալների տեսակ</span>"
    ]
  },
  {
    "objectID": "python/02_P_L02_Coditions.html#օրինակներ",
    "href": "python/02_P_L02_Coditions.html#օրինակներ",
    "title": "4  Bool տվյալների տեսակ",
    "section": "5.1 Օրինակներ",
    "text": "5.1 Օրինակներ\n\n5.1.1 Անիկդոտ\nԾրագրավորղը գնումա խանութ, կինը ասումա՝\n2 հատ հաց առ, եթե ձու լինի՝ 10 հատ վերցրու,\nէս մարդը 10 հատ հաց առած գալիսա տուն, կինը հարցնումա ես ի՞նչ ես արել, ասումա դե ձու ունեին\n\ndzu_ka = False\n\nif dzu_ka:\n    print('10 հաց')\nelse:\n    print(\"2 հաց\")\n\n2 հաց\n\n\n\n\n5.1.2 պարտադիր չի else գրենք, կարա մենակ if լինի\n\ntariq = 20\nif tariq &gt; 18:\n    print('Ինձ մի հատ գինի խնդրում եմ')\n\nif tariq % 10 == 0:\n    print(\"Կլոր տարիք\")\n\nԻնձ մի հատ գինի խնդրում եմ\nԿլոր տարիք\n\n\n\n# pass\n\n\ntariq = 17\n\nif tariq &gt; 18:\n    pass\nelse:\n    print(\"ջուր կուզես\")\n\nջուր կուզես\n\n\n\n\n5.1.3 կարա մի քանի elif լինի\n\napranq = 'պանիր'\n\nif apranq == 'պանիր':\n    gin = 2\nelif apranq == 'ձմերուկ':\n    gin = 4\nelif apranq == 'ժարիտ':\n    gin = 1_000_000_000 # _ կարանք դնենք\nelse:\n    gin = 'եսիմ'\n\nprint(gin)\n\n2\n\n\n\n\n5.1.4 ինչի՞ ենք elif օգտագործում եթե կարանք if գրենք\n\napranq = 'պանիր'\n\nif apranq == 'պանիր':\n    gin = 2\n# print(gin)\nif apranq == 'ձմերուկ':\n    gin = 4\nif apranq == 'ժարիտ':\n    gin = 100_000_000_000_000 # _ կարանք դնենք\nelse:\n    gin = 'եսիմ'\n\nprint(gin)\n\nեսիմ\n\n\n\nprint(100_000_000_000_000)\nprint(100000000000000)\n\n100000000000000\n100000000000000\n\n\n\na = 0\n\nif a &gt; 10:\n    print(\"մեծա 10-ից\")\nif a &gt; 5:\n    print(\"մեծա 5-ից\")\nif a &gt; 1:\n    print(\"մեծա 1-ից\")\n\n\na = 62\na = -2\n\nif a &gt; 10:\n    print(\"մեծա 10-ից\")\nelif a &gt; 5:\n    print(\"մեծա 5-ից\")\nelif a &gt; 1: # եթե վերևինը ճիշտ եղավ, սա էլ չի աշխատի\n    print(\"մեծա 1-ից\")\nelse:\n    print(\"փոքր ա 1-ից\")\n\nփոքր ա 1-ից",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Bool տվյալների տեսակ</span>"
    ]
  },
  {
    "objectID": "python/02_P_L02_Coditions.html#match",
    "href": "python/02_P_L02_Coditions.html#match",
    "title": "4  Bool տվյալների տեսակ",
    "section": "6.1 Match",
    "text": "6.1 Match\n\napranq = 'ժարիտ'\n\nif apranq == 'պանիր':\n    gin = 2\nelif apranq == 'ձմերուկ':\n    gin = 4\nelif apranq == 'ժարիտ':\n    gin = 1_000_000_000 # _ կարանք դնենք\nelse:\n    gin = 'եսիմ'\nprint(gin)\n\n1000000000\n\n\n\napranq = \"ձմերուկ\"\nmatch apranq: # switch, case\n    case \"պանիր\": # if apranq == \"պանիր\"\n        gin = 2\n    case \"ձմերուկ\":\n        gin = 4\n    case \"ժարիտ\":\n        gin = 1_000_000_000\n    case _:\n        gin = \"եսիմ\"\n\nprint(gin)\n\n4",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Bool տվյալների տեսակ</span>"
    ]
  },
  {
    "objectID": "python/03_str.html",
    "href": "python/03_str.html",
    "title": "5  Տողեր (string)",
    "section": "",
    "text": "5.1 Տողերի ստեղծում և escape(/)\nShindler’s [11, 509]\n(c) John Williams\na = \"Բարևներ\" # նույննա ինչ մի չակերտով ՝ a = \"Բարևներ\"\nprint(a)\nprint(type(a))\n\nԲարևներ\n&lt;class 'str'&gt;\n# 1\nprint(1)\n\"\"\"asdasgudasfafsf\nsdfsdfsdfs\"\"\"\nprint(2)\n\n1\n2\na = \"\"\"Բարևներ, ինչ կա չկա, էլի են հին տներն եք մնում,\nԹութը թափ եք տալիս,\nուրիշ ինչ կա չկա,\nդե լավ դե լավ մնացեք\n\"\"\" # '''\nprint(a)\n\nԲարևներ, ինչ կա չկա, էլի են հին տներն եք մնում,\nԹութը թափ եք տալիս,\nուրիշ ինչ կա չկա,\nդե լավ դե լավ մնացեք\na = 'Cheese'\nb = 'Hayk's cheese'\n\nprint(a)\nprint(b)\n\n\n  File \"&lt;ipython-input-7-0a41b46e55e9&gt;\", line 2\n    b = 'Hayk's cheese'\n                      ^\nSyntaxError: unterminated string literal (detected at line 2)\n# Կարող ենք ուղղել հետևյալ կերպ\nb = \"Hayk's cheese\"\nprint(b)\n\nHayk's cheese\n(double click before reading)\nԵրբ նոր տող գնալիս էինք գրում, իրականում ահա թե ինչ էր տեղի ունենում՝\nPython-ը տեսնում էր  նշանը, գիտեր որ դա հատուկ նշանա ու պետքա ասի իրեն թե ինքը ինչ անի հաջորդ քայլում, եթե տեսնի n գնա հաջորդ տող, որոշ այլ բաներ ունի նաև\nprint('Hayk\\'s cheese')\n\n\n\"Hayk's cheese\"\nprint('Hayk\\ns cheese')\n\nHayk\ns cheese\nprint('Hayk\\ts cheese')\n\nprint('Hayk\\\\s cheese')\n\nprint(\"\\\"Hayk\\'s cheese\\\"\")\n\nHayk    s cheese\nHayk\\s cheese",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Տողեր (string)</span>"
    ]
  },
  {
    "objectID": "python/03_str.html#տողերի-ստեղծում-և-escape",
    "href": "python/03_str.html#տողերի-ստեղծում-և-escape",
    "title": "5  Տողեր (string)",
    "section": "",
    "text": "- escape character\n' - ’\n\" - ”\n tab\n- new line\n\\ -",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Տողեր (string)</span>"
    ]
  },
  {
    "objectID": "python/03_str.html#string-երով-գործողություններ",
    "href": "python/03_str.html#string-երով-գործողություններ",
    "title": "5  Տողեր (string)",
    "section": "5.2 String-երով գործողություններ",
    "text": "5.2 String-երով գործողություններ\n\n5.2.1 Գումարում\n\nskizb = \"Ես տողի սկիզբն եմ\"\nverj = 'ես էլ վերջը'\n\n\nprint(skizb + verj)\n\nԵս տողի սկիզբն եմես էլ վերջը\n\n\n\nprint(skizb + \" - \" + verj) # print(skizb, verj, sep=\" - \")\n\nԵս տողի սկիզբն եմ - ես էլ վերջը\n\n\n\nprint(skizb + 1231231231 + verj + 'պանիր')\n\n\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n&lt;ipython-input-19-1653e83fba28&gt; in &lt;cell line: 1&gt;()\n----&gt; 1 print(skizb + 1231231231 + verj + 'պանիր')\n\nTypeError: can only concatenate str (not \"int\") to str\n\n\n\n\n# կարանք մի քանի հատ գումարենք միանգամից\nprint(skizb + str(1231231231) + verj + 'պանիր')\n\nԵս տողի սկիզբն եմ1231231231ես էլ վերջըպանիր\n\n\n\nprint('2' + \"2\")\n\n22\n\n\n\nprint('2' + True)\n\n\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n&lt;ipython-input-22-a65a6f529263&gt; in &lt;cell line: 1&gt;()\n----&gt; 1 print('2' + True)\n\nTypeError: can only concatenate str (not \"bool\") to str\n\n\n\n\nprint(True + 2)\n\n3\n\n\n\n\n5.2.2 Բազմապատկում\n\na = 'բարև'\n\n\nprint(\"*\")\nprint(\"*\" * 2)\nprint(\"*\" * 3) # \"*\" + \"*\" + \"*\"\nprint(\"*\" * 4)\nprint(\"*\"*4.5) # problem\n\n*\n**\n***\n****\n\n\n\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n&lt;ipython-input-25-41f25c187a88&gt; in &lt;cell line: 5&gt;()\n      3 print(\"*\" * 3) # \"*\" + \"*\" + \"*\"\n      4 print(\"*\" * 4)\n----&gt; 5 print(\"*\"*4.5) # problem\n\nTypeError: can't multiply sequence by non-int of type 'float'\n\n\n\n\nprint(a * 4)\nprint(a + \" \"*4)\nprint((a + \" \") * 4)\n\nբարևբարևբարևբարև\nբարև    \nբարև բարև բարև բարև \n\n\n\nprint(a * 3 + \" \" + '$' *4)\n\nբարևբարևբարև $$$$",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Տողեր (string)</span>"
    ]
  },
  {
    "objectID": "python/03_str.html#հստակ-նիշեր-վերցնել-indexing-slicing",
    "href": "python/03_str.html#հստակ-նիշեր-վերցնել-indexing-slicing",
    "title": "5  Տողեր (string)",
    "section": "5.3 Հստակ նիշեր վերցնել (indexing, slicing)",
    "text": "5.3 Հստակ նիշեր վերցնել (indexing, slicing)\n\n5.3.1 indexing\n\na = 'Բարև'\nprint(a)\nprint(len(a)) # len('Բարև') length\n\nԲարև\n4\n\n\n\nprint(\"Բարև\"[0])\nprint(a[0])\n\nԲ\nԲ\n\n\n\nprint(a[4])\n\n\n---------------------------------------------------------------------------\nIndexError                                Traceback (most recent call last)\n&lt;ipython-input-31-ba4863cd608d&gt; in &lt;cell line: 1&gt;()\n----&gt; 1 print(a[4])\n\nIndexError: string index out of range\n\n\n\n\nprint(a[4-1])\n\nև\n\n\n\nprint(a[len(a) - 1]) # ի՞նչ կտպի ըստ ձեզ\n\nև\n\n\n\nprint(a[len(a)-1])\n\nև\n\n\n\nprint(a[-1])\n\nև\n\n\n\n\n\npython indexing.png\n\n\n\nprint(a[2])\nprint(a[-2]) # len(a) - 2 -&gt; 4 - 2 = 2\n\nր\nր\n\n\n\n\n5.3.2 slicing\n\nprint(a[0:2]) # սկիզբը ներառյալ, վերջը չէ\n\nԲա\n\n\n\nprint(a[0:4]) # a[4]-ը չի աշխատում, բայց ստեղ գրում ենք մինչև 4, դա հենց նրանիցա որ վերջը չենք վերցնում\n\nԲարև\n\n\n\nprint(a[0:412345678])\n\nԲարև\n\n\n\nprint(a[0:2])\nprint(a[:2]) # եթե բաց թողենք առաջին թիվը կհասկանա որ ուղղակի զրոյիցա սկսվում\n\nԲա\nԲա\n\n\n\nprint(a[1:4])\nprint(a[1:]) # նույն ձև էլ երկրորդը բաց թողելով հասկանումա որ մինչև վերջ ենք ուզում\n\nարև\nարև\n\n\n\nprint(a[:])\n\nԲարև\n\n\nկարող ենք նաև թռինչք ունենալ\n\na = 'abcdefghk'\n\n\na['սկսի ստեղից':'գնա մինչև ստեղ(ոչ ներառյալ)':'այ էսքան մեծ քայլով']\n\n\nprint(a[2:8:2])\n\nceg\n\n\n\nprint(a[0::2])\n\nacegk\n\n\n\nprint(a[8:2:-1])\n\nkhgfed\n\n\n\nprint(a[::-2]) # a[4:6:1]\n\nkgeca\n\n\n\nprint(a[::-1])\n\nkhgfedcba\n\n\n\nprint(a[3:7]) # 7 - 3\n\ndefg\n\n\n\nprint(len(a))\n\n9\n\n\n\nprint(a[8::-1])\n\nkhgfedcba\n\n\n\na[3:6] # -&gt; 6-3 = 3\n\n'def'\n\n\n\nprint(a[::2])\n\n13579\n\n\n\nprint(a[1::2])\n\n2468\n\n\n\nprint(a[7:0:-2])\n\n8642\n\n\n\n# 123456789\nprint(a[6:]) # a[x:y] -&gt; y-x\n\n789\n\n\n\nprint(a)\na = \"abcdef\"\n\nabcdef\n\n\n\nprint(a[-36:6000]) # ...123456789......\n\n\n  File \"&lt;ipython-input-56-98a858089493&gt;\", line 1\n    print([-36:6000]) # ...123456789......\n              ^\nSyntaxError: invalid syntax\n\n\n\n\n\na = \"abcdefgh\"\nprint(a[-4:-2]) # a[8-4:8-2] -&gt; a[4:6]\nprint(a[4:6])\n\nef\nef\n\n\n\nprint(a + '___' + a[::-1])\n\nabcdefgh___hgfedcba\n\n\n\na = '123456789'\n# print(a[2:8:-1])\nprint(a[3:1:-1])\nprint(a[1:3])\n\n43\n234\n\n\n\na[3:19:4]\n\n# 3, 7 (3+4), 11 (7 + 4), 15 (11 + 4)\n\n# 13, 100, 4\n\na = \"01234567891011\"\nprint(a[2:8:3])\n\n25",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Տողեր (string)</span>"
    ]
  },
  {
    "objectID": "python/03_str.html#range",
    "href": "python/03_str.html#range",
    "title": "5  Տողեր (string)",
    "section": "5.4 Range",
    "text": "5.4 Range\n\n# a = '0123456789'\n# 0 100\n# 4 1\n\n# [1:9:3] -&gt; 1, 4, 7\n# print(a[1:4])\n\nprint(range(1,4)) # a[1:4]\nprint(list(range(1, 4)))\nprint(type(range(1,4)))\n\nrange(1, 4)\n[1, 2, 3]\n&lt;class 'range'&gt;\n\n\n\na = '0123456789'\na[1:15:3] #-&gt; 1, 4, 7\n\n'147'\n\n\n\nprint(list(range(1, 15, 3))) # a[1:15:3]\n\n[1, 4, 7, 10, 13]\n\n\n\n# list(range(3,10,2))\n# a[3:10:2]\n\na = \"abcd\"\nprint(a[1:4])\nprint(list(range(1,4)))\n\nbcd\n[1, 2, 3]\n\n\n\nprint(list(range(17,15,-3)))\n\n[17]\n\n\n\n# a[:15]\nlist(range(15)) # range(0,15)\n\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]\n\n\n\na[3:]\n# համարժեքը չկա\n\n\n# a[2:15]\nlist(range(2, 15)) # range(2,15,1)\n\n[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]\n\n\n\n# a[2:15:3]\nlist(range(2, 1, -8)) # try also 2, 11,1\n\n# -7 -6 -5 ... -1 0 1 2\n# -7 -6 -5 ... -1 0 1 2 3\n\n\n[2]\n\n\n\nlist(range(-4, 1, 2)) # սկիզբ, ավարտ, քայլ\n\n[-4, -2, 0]\n\n\n\nlist(range(1, 5, -2))\n\n[]",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Տողեր (string)</span>"
    ]
  },
  {
    "objectID": "python/03_str.html#formatting",
    "href": "python/03_str.html#formatting",
    "title": "5  Տողեր (string)",
    "section": "5.5 Formatting",
    "text": "5.5 Formatting\n\n5.5.1 Formated string\nհավես բաներ որոնք կարելի ա f string-երով անել. կարճ վիդեո\n\nanun = 'John'\nazganun = \"Smith\"\ntariq = 25\n\n\n# Ներկայացնել John-ին\nprint('Իմ անունն', anun, 'է, իսկ ազգանունը', azganun, \"ես\", tariq, \"տարեկան եմ\")\n\nԻմ անունն John է, իսկ ազգանունը Smith ես 25 տարեկան եմ\n\n\n\n# Ներկայացնել John-ին\nprint('Իմ անունն', anun, 'է, իսկ ազգանունը', azganun, \"ես\", tariq, \"տարեկան եմ\")\n\nԻմ անունն:Johnէ, իսկ ազգանունըSmithես25տարեկան եմ\n\n\n\nprint('Իմ անունն anun, է իսկ ազգանունը azganun ես tariq տարեկան եմ')\n\nԻմ անունն anun, է իսկ ազգանունը azganun ես tariq տարեկան եմ\n\n\n\nprint('Իմ անուննը {} է իսկ ազգանունը {} ես {} տարեկան եմ'.format(anun, azganun, tariq))\n\nԻմ անուննը John է իսկ ազգանունը Smith ես 25 տարեկան եմ\n\n\n\ntext = 'Իմ անուննը {anun} է իսկ ազգանունը {azganun} ես {tariq} տարեկան եմ'\nprint(text)\n\nԻմ անուննը {anun} է իսկ ազգանունը {azganun} ես {tariq} տարեկան եմ\n\n\n\nprint(f\"Իմ անուննը՝ {anun} է իսկ ազգանունը {azganun} ես {tariq} տարեկան եմ\")\n\nԻմ անուննը՝ John է իսկ ազգանունը Smith ես 25 տարեկան եմ\n\n\n\nprint(f\"Իմ անուննը {anun} է իսկ ազգանունը {azganun+'յան'} ես {tariq+4} տարեկան եմ\")\n\nԻմ անուննը John է իսկ ազգանունը Smithյան ես 29 տարեկան եմ\n\n\n\nprint(anun, azganun, sep=\"-\") # չենք կարա վերագրենք փոփ․\n\nJohn-Smith\n\n\n\nname = f\"{anun}-{azganun}\"\nprint(name)\n\nJohn-Smith\n\n\n\nprint(f\"Իմ անուննը {anun} է իսկ ազգանունը {azganun} հաջորդ տարի ես կլինեմ {tariq + 1} տարեկան\")\n\nԻմ անուննը John է իսկ ազգանունը Smith հաջորդ տարի ես կլինեմ 26 տարեկան\n\n\n\nx = 4\nprint(x)\nprint(f\"x = {x}\")\nprint(f\"{x = }\")\n\nnum = 5.123456432\n\nprint(f\"{num:.2f}\")\n\na = f\"{num:.2f}\"\nprint(a, type(a))\n\n4\nx = 4\nx = 4\n5.12\n5.12 &lt;class 'str'&gt;\n\n\n\nsurname = \"ազգանունը {}\"\nprint(surname)\n\nsurname_input = input()\n\nprint(surname.format(surname_input))\n\nազգանունը {}\nt\nազգանունը t\n\n\n\n\n5.5.2 Raw string\n\nprint('ես առաջին տողն եմ \\n ես էլ երկրորդ')\n\nես առաջին տողն եմ \n ես էլ երկրորդ\n\n\n\na = r'ես առաջին տողն եմ \\n ես էլ երկրորդ'\n\n\nprint(a)\n\nես առաջին տողն եմ \\n ես էլ երկրորդ\n\n\n\nprint(\"Desktop\\typesctipt\\nur.txt\")\n\nDesktop ypesctipt\nur.txt\n\n\n\nprint(\"Desktop\\\\typesctipt\\\\nur.txt\")\n\nDesktop\\typesctipt\\nur.txt\n\n\n\nprint(r\"Desktop\\typesctipt\\nur.txt\")\n\nDesktop\\typesctipt\\nur.txt",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Տողեր (string)</span>"
    ]
  },
  {
    "objectID": "python/03_str.html#immutability",
    "href": "python/03_str.html#immutability",
    "title": "5  Տողեր (string)",
    "section": "5.6 Immutability",
    "text": "5.6 Immutability\n\ns = 'պրնիր'\n\n\ns[1] = \"ր\"\n\n\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n&lt;ipython-input-104-fb5a42df8b35&gt; in &lt;cell line: 1&gt;()\n----&gt; 1 s[1] = \"ր\"\n\nTypeError: 'str' object does not support item assignment\n\n\n\n\n# s[1] = \"ր\"\ns = \"պանիր\"\nprint(s)\n\nպանիր\n\n\n\ns = s[0] + \"ա\" + s[2:]\nprint(s)\n\n# a = 4\n# 4 = 5\n# a = 5\n\nպանիր",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Տողեր (string)</span>"
    ]
  },
  {
    "objectID": "python/03_str.html#in",
    "href": "python/03_str.html#in",
    "title": "5  Տողեր (string)",
    "section": "5.7 in",
    "text": "5.7 in\n\ns = 'աղցան սոխ'\n\n\nprint('ա' in s)\nprint('ան' in s)\n\nTrue\nTrue\n\n\n\nprint('ղա' in s)\nprint('աղ' in s)\n\nFalse\nTrue\n\n\n\nprint('բիբառ' in s)\n\nFalse",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Տողեր (string)</span>"
    ]
  },
  {
    "objectID": "python/03_str.html#հայտարարումը",
    "href": "python/03_str.html#հայտարարումը",
    "title": "5  Տողեր (string)",
    "section": "6.1 Հայտարարումը",
    "text": "6.1 Հայտարարումը\n\na = [1, 3.14, \"կարտոֆիլ\", [25,33], 5]\nprint(a)\nprint(type(a))\nprint(list(range(1,3)))\n\n[1, 3.14, 'կարտոֆիլ', [25, 33], 5]\n&lt;class 'list'&gt;\n[1, 2]\n\n\n\nprint(a[1])\n\n3.14\n\n\n\nprint(a[-1])\n\n5\n\n\n\nprint(a[3])\n# print([25, 33][1])\n\n[25, 33]\n\n\n\nprint(a[3][1])\n\nprint([25, 33][1])\n\n33\n33\n\n\n\na[:3]\n\n[1, 3.14, 'կարտոֆիլ']\n\n\n\na = [1,\n     5,\n     3,\n     11]\nprint(a)\n\n[1, 5, 3, 11]\n\n\n\n# s[1] = \"ա\"\na[0] = 509\nprint(a) # mutable\n\n[509, 5, 3, 11]\n\n\n\nprint(12 in a)\nprint(11 in a)\n\nFalse\nTrue\n\n\n\na = list(\"barev\")\nprint(a)\n\nprint(str([1,2,3]))\n\n['b', 'a', 'r', 'e', 'v']\n[1, 2, 3]",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Տողեր (string)</span>"
    ]
  },
  {
    "objectID": "python/03_str.html#գումարում-բազմապատկում-թվով",
    "href": "python/03_str.html#գումարում-բազմապատկում-թվով",
    "title": "5  Տողեր (string)",
    "section": "6.2 Գումարում, բազմապատկում թվով",
    "text": "6.2 Գումարում, բազմապատկում թվով\n\nb = [2, 4, 6]\nprint(b)\n\nprint(a)\n\n[2, 4, 6]\n['b', 'a', 'r', 'e', 'v']\n\n\n\na + b\n\n['b', 'a', 'r', 'e', 'v', 2, 4, 6]\n\n\n\nb * 5\n\n[2, 4, 6, 2, 4, 6, 2, 4, 6, 2, 4, 6, 2, 4, 6]\n\n\n\nprint(b)\n\n[2, 4, 6]\n\n\n\n# b = b + 5 # b += 5\nb = b + [5]\nb += [5]\nprint(b)\n\n[2, 4, 6, 5, 5, 5]\n\n\n\na.append(6.4)\n\nprint(a)\n\n['b', 'a', 'r', 'e', 'v', 6.4]\n\n\n\ndel a[2] # delete\na\n\n['b', 'a', 'e', 'v', 6.4]",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Տողեր (string)</span>"
    ]
  },
  {
    "objectID": "python/03_str.html#ցուցակների-վրա-հաճախ-կիրառվող-ֆունկցիաներ-հրամաններ",
    "href": "python/03_str.html#ցուցակների-վրա-հաճախ-կիրառվող-ֆունկցիաներ-հրամաններ",
    "title": "5  Տողեր (string)",
    "section": "6.3 ցուցակների վրա հաճախ կիրառվող ֆունկցիաներ (հրամաններ)",
    "text": "6.3 ցուցակների վրա հաճախ կիրառվող ֆունկցիաներ (հրամաններ)\n\na = [1, 3.4, 654, 143]\nprint(sum(a))\n\n# b = [\"a\", \"b\", \"c\"]\n# print(sum(b))\n\n801.4\n\n\n\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n&lt;ipython-input-148-fe1d1e4e633a&gt; in &lt;cell line: 5&gt;()\n      3 \n      4 b = [\"a\", \"b\", \"c\"]\n----&gt; 5 print(sum(b))\n\nTypeError: unsupported operand type(s) for +: 'int' and 'str'\n\n\n\n\nprint(max(a))\n\n654\n\n\n\nprint(min(a))\n\n1\n\n\n\nprint(len(a)) # length\n\n4",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Տողեր (string)</span>"
    ]
  },
  {
    "objectID": "python/04_loops.html",
    "href": "python/04_loops.html",
    "title": "6  For",
    "section": "",
    "text": "6.1 For ցիկլը տարբեր տվյաների կառուցվածների վրա\nwhile my_guitar_gently_weeps:\n(c) Beatles",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>For</span>"
    ]
  },
  {
    "objectID": "python/04_loops.html#for-ցիկլը-տարբեր-տվյաների-կառուցվածների-վրա",
    "href": "python/04_loops.html#for-ցիկլը-տարբեր-տվյաների-կառուցվածների-վրա",
    "title": "6  For",
    "section": "",
    "text": "6.1.1 for լիստ\n\nanunner = [\"Լեռնիկ\", \"Սանասար\", \"Թելման\", \"Ժորիկ\", \"Ժորժիկ\", \"Այծեմնիկ\",\n           \"Սպիրիդոն\", \"Սուլեյման\", \"Տարզան\", \"Թորգոմիկ\", \"Կճեպ\", \"Խփո\",\n           \"Դառվիս\", \"Վիտյոկ\", \"Մոզգ\", \"Բութուլ\", \"Տալաշ\", \"Բերիմոռ\",\n           \"Ֆայլո\", \"Գոռո\", \"Մավսես\", \"Դրակոն\", \"Լութո\", \"Բարշամ\",\n           \"Էռնեստո Փարպեցի\", \"Բարխուդարում\", \"Բոբոլ\", \"Հռազմիկ\"]\n\n\nprint(f\"{anunner[0]}ն կարգինի հերոս է\")\nprint(f\"{anunner[1]}ն կարգինի հերոս է\")\nprint(f\"{anunner[2]}ն կարգինի հերոս է\")\nprint(f\"{anunner[3]}ն կարգինի հերոս է\")\nprint(f\"{anunner[4]}ն կարգինի հերոս է\")\nprint(f\"{anunner[5]}ն կարգինի հերոս է\")\nprint(f\"{anunner[6]}ն կարգինի հերոս է\")\nprint(f\"{anunner[7]}ն կարգինի հերոս է\")\nprint(f\"{anunner[8]}ն կարգինի հերոս է\")\nprint(f\"{anunner[9]}ն կարգինի հերոս է\")\nprint(f\"{anunner[10]}ն կարգինի հերոս է\") # և այլն\n\n# փոխել ն-ն ը-ւ\n\nԼեռնիկն կարգինի հերոս է\nՍանասարն կարգինի հերոս է\nԹելմանն կարգինի հերոս է\nԺորիկն կարգինի հերոս է\nԺորժիկն կարգինի հերոս է\nԱյծեմնիկն կարգինի հերոս է\nՍպիրիդոնն կարգինի հերոս է\nՍուլեյմանն կարգինի հերոս է\nՏարզանն կարգինի հերոս է\nԹորգոմիկն կարգինի հերոս է\nԿճեպն կարգինի հերոս է\n\n\n\n# anunner[0], annuner[1], anunner[2]\na = anunner[0]\nprint(f\"{a}ն կարգինի հերոս է\")\n\na = anunner[1]\nprint(f\"{a}ն կարգինի հերոս է\")\n\n\nԼեռնիկն կարգինի հերոս է\nՍանասարն կարգինի հերոս է\n\n\n\nfor a in anunner:\n    print(f\"{a}ն կարգինի հերոս է\")\n\nԼեռնիկն կարգինի հերոս է\nՍանասարն կարգինի հերոս է\nԹելմանն կարգինի հերոս է\nԺորիկն կարգինի հերոս է\nԺորժիկն կարգինի հերոս է\nԱյծեմնիկն կարգինի հերոս է\nՍպիրիդոնն կարգինի հերոս է\nՍուլեյմանն կարգինի հերոս է\nՏարզանն կարգինի հերոս է\nԹորգոմիկն կարգինի հերոս է\nԿճեպն կարգինի հերոս է\nԽփոն կարգինի հերոս է\nԴառվիսն կարգինի հերոս է\nՎիտյոկն կարգինի հերոս է\nՄոզգն կարգինի հերոս է\nԲութուլն կարգինի հերոս է\nՏալաշն կարգինի հերոս է\nԲերիմոռն կարգինի հերոս է\nՖայլոն կարգինի հերոս է\nԳոռոն կարգինի հերոս է\nՄավսեսն կարգինի հերոս է\nԴրակոնն կարգինի հերոս է\nԼութոն կարգինի հերոս է\nԲարշամն կարգինի հերոս է\nԷռնեստո Փարպեցին կարգինի հերոս է\nԲարխուդարումն կարգինի հերոս է\nԲոբոլն կարգինի հերոս է\nՀռազմիկն կարգինի հերոս է\n\n\nfor փոփոխական in ինչ-որ բան որը ունի էլեմենտներ:\n    արա էս ինչ բանը\n\nsirac_tver = [0, 5, 9, 12]\nfor tiv in sirac_tver:\n    print(tiv)\n    # if tiv &gt; 5:\n    #   print(tiv)\n\n0\n5\n9\n12\n\n\n\n\n6.1.2 for range\nնույնիսկ եթե կարողանաինք միշտ մենք ուղղակի listով ցուցակ սարքել, rangeը ավելի նախընտրելիա, որովհետև նույնիսկ միլիոն թիվ պարունակի, հիշողությունում զբաղեցնումա նույն քանակի տեղ (3 թիվա պահում, start, end, step)\n\nprint(range(3,21))\n# print(list(range(3,21)))\n\nprint(range(3, 1000000000000000000000000000))\n# print(list(range(3, 100000000000000000000000000)))\n\nrange(3, 21)\nrange(3, 1000000000000000000000000000)\n\n\n\nlst = list(range(1,10))\nprint(lst)\n\n# for i in lst:\nfor i in list(range(1,10)):\n    if i % 2 == 0:\n        print(i)\n\nfor i in range(1,10):\n    if i % 2 == 0:\n        print(i)\n\n[1, 2, 3, 4, 5, 6, 7, 8, 9]\n8\n8\n\n\n\nfor i in range(1,5): # i - iterator / iterable\n    print(i)\n\n1\n2\n3\n4\n\n\n\n6.1.2.1 Առաջադրանք 1\nհաշվել թե քանի զույգ թիվ կա 1-ից 10 միջակայքում\n\ncount = 0\n\nfor i in range(1,10):\n    if i % 2 == 0:\n        print(i, \"ն զույգ է\")\n        count += 1\n        print(count)\n\nprint(\"ընդհանուր քանակ\", count)\n\n2 ն զույգ է\n1\n4 ն զույգ է\n2\n6 ն զույգ է\n3\n8 ն զույգ է\n4\nընդհանուր քանակ 4\n\n\n\nfor i in range(1,9):\n    count = 0\n    if i % 2 == 0:\n        print(i, \"ն զույգ է\")\n        count += 1\n        print(count)\n\nprint(\"ընդհանուր քանակ\", count)\n\n2 ն զույգ է\n1\n4 ն զույգ է\n1\n6 ն զույգ է\n1\n8 ն զույգ է\n1\nընդհանուր քանակ 1\n\n\n\n\n6.1.2.2 Առաջադրանք 2\nխնդրել մարդուն որ ասի թե քանի թիվա ուզում ներմուծի, ներմուծի ու պահել ցուցակի մեջ\n\nn = int(input())\n\nlst = []\n\nfor _ in range(n):\n    x = input()\n    lst.append(x)\n\nprint(lst)\n\n\n# խնդրել մարդուն որ ասի թե քանի թիվա ուզում ներմուծի, օգնել որ ներմուծի ու տպել դրանք\nn = int(input())\nfor _ in range(n): # արա n անգամ\n    bar = input()\n    print('դուք ներմուծեցիք', bar)\n\nԲայց ախր հեչ կարևոր չէր ստեղ i-ն,\nՆման դեպքերում երբ մեզ իրականում փոփոխականը պետք չի, իրա անունը դնում ենք _\n_ -&gt; ինչորայա\n\n\n6.1.2.3 Առաջադրանք 3\nտպել զույգ ինդեքսով սիրված թվերը\n\ntver = [3, 4, 1, 0, 112, 509, 8]\n\nprint(tver[::2])\n\n[3, 1, 112, 8]\n\n\n\ntver = [3, 4, 1, 0, 112, 509, 8]\nindexneri_lst = [0, 1, 2, 3, 4, 5, 6]\n\n# for i in indexneri_lst:\n#     if i % 2 == 0:\n#         print(tver[i])\n\n# for i in indexneri_lst[::2]:\n#     print(tver[i])\n\n\nindexneri_lst = list(range(len(tver)))\nprint(indexneri_lst)\n\nfor i in range(len(tver)):\n    if i % 2 == 0:\n        print(tver[i])\n\n[0, 1, 2, 3, 4, 5, 6]\n3\n1\n112\n8\n\n\nfor-ը ուրիշ կոդերի հետ\n\ntver = [3, 4, 1, 0, 112, 509, 8]\n\na = 4\nprint(a, \"մինչև for\")\nfor a in range(len(tver)):\n    print(a, 'for-ի մեջ')\n    if a % 2 == 0:\n        pass\n\nprint(a, 'for-ից դուրս')\n\nfor a in range(len(tver)):\n    pass\n\n4 մինչև for\n0 for-ի մեջ\n1 for-ի մեջ\n2 for-ի մեջ\n3 for-ի մեջ\n4 for-ի մեջ\n5 for-ի մեջ\n6 for-ի մեջ\n6 for-ից դուրս\n\n\n\n\n\n6.1.3 For string\n\n# հաշվել տեքսի մեջ a-երի քանակը\n\ns = \"ցիկլները շատ լավ բան են\"\n\ncount_a = 0\nfor i in s: # for i in \"ցիկլները շատ լավ բան են\"\n    # print(i)\n    if i == 'ա':\n        count_a += 1\n\nprint(count_a)\n\n3",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>For</span>"
    ]
  },
  {
    "objectID": "python/04_loops.html#break",
    "href": "python/04_loops.html#break",
    "title": "6  For",
    "section": "6.2 break",
    "text": "6.2 break\nԻսկ ինչ եթե ինչ-որ պահից սկսած էլ մնացած էլեմենտների համար չենք ուզում աշխատացնենք ծրագիրը, մեզ ինչ պետք էր արեցինք\n\nirer = ['գրիչ', \"պանիր\", \"հարթուկ\", \"նասկու թայ\",\"մակարոն\", \"գիրք\",  \"ատամի խոզանակ\", \"փիղ\"]\n\nfor i in irer:\n    print(f'դարակի մեջ դրված էր {i}', end=\"  .....   \")\n    if i == 'նասկու թայ':\n        print('ուռաաա, գտա')\n        break\n    print('շանունակում ենք ման գալ')\n\nդարակի մեջ դրված էր գրիչ  .....   շանունակում ենք ման գալ\nդարակի մեջ դրված էր պանիր  .....   շանունակում ենք ման գալ\nդարակի մեջ դրված էր հարթուկ  .....   շանունակում ենք ման գալ\nդարակի մեջ դրված էր նասկու թայ  .....   ուռաաա, գտա\n\n\n\nfor i in range(10):\n    print(i)\n    break\n\n0",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>For</span>"
    ]
  },
  {
    "objectID": "python/04_loops.html#continue",
    "href": "python/04_loops.html#continue",
    "title": "6  For",
    "section": "6.3 Continue",
    "text": "6.3 Continue\nԱրմատ հաշվել\n\nfor i in [1, 4, 509, -3, 49, 13]:\n    print(f\"փորձեմ հաշվել {i}-ի արմատը\")\n\n    if i &lt; 0:\n        print(f'Հլը մի րոպե, մենք սենց չէինք պայմանավորվել, բաց եմ թողնում {i}ը')\n        print()\n        continue\n\n    print(f\"արմատնա՝ {i ** 0.5}\")\n    print()\n\nփորձեմ հաշվել 1-ի արմատը\nարմատնա՝ 1.0\n\nփորձեմ հաշվել 4-ի արմատը\nարմատնա՝ 2.0\n\nփորձեմ հաշվել 509-ի արմատը\nարմատնա՝ 22.561028345356956\n\nփորձեմ հաշվել -3-ի արմատը\nՀլը մի րոպե, մենք սենց չէինք պայմանավորվել, բաց եմ թողնում -3ը\n\nփորձեմ հաշվել 49-ի արմատը\nարմատնա՝ 7.0\n\nփորձեմ հաշվել 13-ի արմատը\nարմատնա՝ 3.605551275463989\n\n\n\n\n6.3.1 Կարանք միաժամանակ համ break համ continue ունենանք\n13ից վախեցողի խնդիր, արմատ հաշվել\n\nfor num in [-1, 9, 4, -2, 13, 16, 36]:\n    print(f\"փորձենք հաշվել {num}ի արմատը\")\n\n    if num &lt; 0:\n        print('ախր չեմ կարա է բացասականի արմատը հաշվեմ\\n')\n        continue\n\n    if num == 13:\n        print(\"վայ-վայ, վախեցա, էլ չեմ հաշվի ես քո համար արմատներ, ես քեզ վստահում էի, իսկ դու․․․ օ՜հ, ինչպես կարող էիր, մեր մեջ ամենինչ վերջացած է, չեմ ուզում քեզ այլևս տեսնել, մոռացիր իմ գոյության մասին, դու այլևս իմ կյանքում տեղ չունես, ես անիծում եմ այն օրը երբ մենք հանդիպեցինք, երբ այգում տխուր նստած էի, նոր էի վերջացրել Ռեմարկի գիրքս կարդալը, դու էլ անտրամ հենված էիր ծառի կոճին, հայացքներով հանդիպեցինք՝ քաջություն արեցիր մոտենալ, և պարզվեց որ երկուսս էլ նույն հերոսի մահի պատճառով էինք տխուր, Ռեմարկի մոտ շատ լավա ստացվում սիրտը կոտրել իր գրքի հերոսի, փաստորեն դու էլ իմ սիրտը կոտրելու մասնագետ ես, ախր մենք այնքան բանի միջով ենք իրար հետ անցել, այնքան հրաշալի օրեր ենք ունեցել, հիշում ես երբ ամբողջ գիշեր աստերին էինք նայում ու դու ինձ սովորացնում էիր համաստեղությունները, կամ երբ միասին Արագած էինք բարձրացել և ինձ քո ուսերի վրա նստացրեցիր որ ես այդ պահին ամենաբարձր մարդը լինեմ Հայաստանում, հիշում ես երբ ծնվեց մեր դուստրը՝ Սեցիլիան, աչքերս լցվում են երբ հիշում եմ ինչպես ասեց նա իր առաջին քայլը, դու էլ իր համար ճոճարան կառուցեցիր, դե ճոճարան ասելս մեքենայի անիվը կախեցիր մեր տնկած թթենու ճյուղերից մեկից, հիշի են օրը երբ մեր առաջնեկ Իգնասիոյին պետք է առաջին անգամ դպրոց ուղղարկեինք, են որ լարված էինք արդյող կհարմարվի թե չէ, ինքն էլ եկավ ճակատին աստղ նկարած ասեց որ բոլորից ամենալավը նա է պատասխանել ուսուցչի տված հանելուկներին, դե իհարկե լավ կպատասխաներ՝ ամեն գիշեր հեքիաթ պատմելուց առաջ միասին տարբեր տրամաբանական խնդիրների էինք քննարկում հիշու՞մ ես, ոնց կարաիր դու այս ամենը ավիրեիր, ինչպես կարող էիր ինձ ասել հաշվեմ 13ի արմատը, ախր դու գիտես որ ես էդ թիվը չեմ սիրում, վստահ եղիր դատարանը իմ օգտին կկայացնի որոշումը, երեխաները կմնան ինձ հետ, իհարկե դատարանը իմ կողքին կլինի, ով էլ լսի թե ինչ ես դու արել միանգամից կպաշտպանի ինձ, ասել հաշվի 13ի արմատը, ինչպես կարող ես քո երեխաների մորը այդպիսի բան ասել, այն բոլոր խոստումներից հետո, գամակ էինք գնել, ասում էիր ես ավելի շատ գամակի մեջ եմ սիրում քնել, արի մենք ոչ թե մի բարձի ծերանանք այլ նույն գամակի մեջ, իսկ հիմա՝ տես թե ինչի ենք հասել, սա գրելուն զուգահեռ խարույկի մեջ եմ քցում մեր բոլոր միասնական նկարները և են նվերը որն ինձ արեցիր մեր առաջին տարելիցին, այն 365էջանոց ժողովածուն բանաստեղծությունների որոնք գրում էիր ամեն գիշեր մեր այդ օրվա և մեր սիրո մասին, լավ, մի տեսակ եթե սենց շարունակեմ մնացած նյութը ցիկլերի չեմ հասցնի մինչև դասը, ես այսօր թողնում եմ քեզ իմ սերն ու հեռանում, իմ սրտին այսօր մի նոր վերք է ավելանում Ու իմ սերը պոկված ճյուղի, պոկված ճյուղի, ճյուղի նման, օրորվում է աշնան քամուց, աշնան քամուց, աշնան քամուց, հաջողություն սրիկա\\n\")\n        break\n\n    print(f\"արմատնա՝ {num ** 0.5}\\n\")\n\n\nփորձենք հաշվել -1ի արմատը\nախր չեմ կարա է բացասականի արմատը հաշվեմ\n\nփորձենք հաշվել 9ի արմատը\nարմատնա՝ 3.0\n\nփորձենք հաշվել 4ի արմատը\nարմատնա՝ 2.0\n\nփորձենք հաշվել -2ի արմատը\nախր չեմ կարա է բացասականի արմատը հաշվեմ\n\nփորձենք հաշվել 13ի արմատը\nվայ-վայ, վախեցա, էլ չեմ հաշվի ես քո համար արմատներ, ես քեզ վստահում էի, իսկ դու․․․ օ՜հ, ինչպես կարող էիր, մեր մեջ ամենինչ վերջացած է, չեմ ուզում քեզ այլևս տեսնել, մոռացիր իմ գոյության մասին, դու այլևս իմ կյանքում տեղ չունես, ես անիծում եմ այն օրը երբ մենք հանդիպեցինք, երբ այգում տխուր նստած էի, նոր էի վերջացրել Ռեմարկի գիրքս կարդալը, դու էլ անտրամ հենված էիր ծառի կոճին, հայացքներով հանդիպեցինք՝ քաջություն արեցիր մոտենալ, և պարզվեց որ երկուսս էլ նույն հերոսի մահի պատճառով էինք տխուր, Ռեմարկի մոտ շատ լավա ստացվում սիրտը կոտրել իր գրքի հերոսի, փաստորեն դու էլ իմ սիրտը կոտրելու մասնագետ ես, ախր մենք այնքան բանի միջով ենք իրար հետ անցել, այնքան հրաշալի օրեր ենք ունեցել, հիշում ես երբ ամբողջ գիշեր աստերին էինք նայում ու դու ինձ սովորացնում էիր համաստեղությունները, կամ երբ միասին Արագած էինք բարձրացել և ինձ քո ուսերի վրա նստացրեցիր որ ես այդ պահին ամենաբարձր մարդը լինեմ Հայաստանում, հիշում ես երբ ծնվեց մեր դուստրը՝ Սեցիլիան, աչքերս լցվում են երբ հիշում եմ ինչպես ասեց նա իր առաջին քայլը, դու էլ իր համար ճոճարան կառուցեցիր, դե ճոճարան ասելս մեքենայի անիվը կախեցիր մեր տնկած թթենու ճյուղերից մեկից, հիշի են օրը երբ մեր առաջնեկ Իգնասիոյին պետք է առաջին անգամ դպրոց ուղղարկեինք, են որ լարված էինք արդյող կհարմարվի թե չէ, ինքն էլ եկավ ճակատին աստղ նկարած ասեց որ բոլորից ամենալավը նա է պատասխանել ուսուցչի տված հանելուկներին, դե իհարկե լավ կպատասխաներ՝ ամեն գիշեր հեքիաթ պատմելուց առաջ միասին տարբեր տրամաբանական խնդիրների էինք քննարկում հիշու՞մ ես, ոնց կարաիր դու այս ամենը ավիրեիր, ինչպես կարող էիր ինձ ասել հաշվեմ 13ի արմատը, ախր դու գիտես որ ես էդ թիվը չեմ սիրում, վստահ եղիր դատարանը իմ օգտին կկայացնի որոշումը, երեխաները կմնան ինձ հետ, իհարկե դատարանը իմ կողքին կլինի, ով էլ լսի թե ինչ ես դու արել միանգամից կպաշտպանի ինձ, ասել հաշվի 13ի արմատը, ինչպես կարող ես քո երեխաների մորը այդպիսի բան ասել, այն բոլոր խոստումներից հետո, գամակ էինք գնել, ասում էիր ես ավելի շատ գամակի մեջ եմ սիրում քնել, արի մենք ոչ թե մի բարձի ծերանանք այլ նույն գամակի մեջ, իսկ հիմա՝ տես թե ինչի ենք հասել, սա գրելուն զուգահեռ խարույկի մեջ եմ քցում մեր բոլոր միասնական նկարները և են նվերը որն ինձ արեցիր մեր առաջին տարելիցին, այն 365էջանոց ժողովածուն բանաստեղծությունների որոնք գրում էիր ամեն գիշեր մեր այդ օրվա և մեր սիրո մասին, լավ, մի տեսակ եթե սենց շարունակեմ մնացած նյութը ցիկլերի չեմ հասցնի մինչև դասը, ես այսօր թողնում եմ քեզ իմ սերն ու հեռանում, իմ սրտին այսօր մի նոր վերք է ավելանում Ու իմ սերը պոկված ճյուղի, պոկված ճյուղի, ճյուղի նման, օրորվում է աշնան քամուց, աշնան քամուց, աշնան քամուց, հաջողություն սրիկա",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>For</span>"
    ]
  },
  {
    "objectID": "python/04_loops.html#for-else",
    "href": "python/04_loops.html#for-else",
    "title": "6  For",
    "section": "6.4 for else",
    "text": "6.4 for else\nԻնչի ա անունը հենց else -&gt; https://www.youtube.com/watch?v=6Im38sF-sjo\nԻնչքան էլ խառնող ու տարօրինակ չլինի բայց forն էլ elseունի,\nկարող ենք պատկերացնել սենց, for ենք ֆռում որ ինչ-որ պայման կատարվի՝ գտնենք նասկու թայը օրինակ ու break անենք, դուրս գանք for-ից\nեթե դուրս չենք գալիս՝ պայմանը տեղի չի ունենում որով պետքա դուրս գանք նաև աշխատումա elseի կտորը վերջում\n\nirer = ['գրիչ', \"պանիր\", \"հարթուկ\", \"մակարոն\", \"գիրք\",  \"ատամի խոզանակ\", \"փիղ\"]\n\n\nfor i in irer:\n    print(f'դարակի մեջ դրված էր {i}', end=\"  .....   \")\n    if i == 'նասկու թայ':\n        print('ուռաաա, գտա')\n        break\n    print('շանունակում ենք ման գալ')\nelse: # կարող ենք պատկերացնել որպես nobreak (վիդեո ուղարկեմ անունի հետ կապված)\n    print(\"չգտա\")\n\nդարակի մեջ դրված էր գրիչ  .....   շանունակում ենք ման գալ\nդարակի մեջ դրված էր պանիր  .....   շանունակում ենք ման գալ\nդարակի մեջ դրված էր հարթուկ  .....   շանունակում ենք ման գալ\nդարակի մեջ դրված էր մակարոն  .....   շանունակում ենք ման գալ\nդարակի մեջ դրված էր գիրք  .....   շանունակում ենք ման գալ\nդարակի մեջ դրված էր ատամի խոզանակ  .....   շանունակում ենք ման գալ\nդարակի մեջ դրված էր փիղ  .....   շանունակում ենք ման գալ\nչգտա\n\n\n\n6.4.0.1 Առաջադրանք 1\nցուցակ ա տված թվերի՝ եթե բոլորը կենտ են տպել բոլորը կենտ են, եթե չէ տպել որ կա զույց թիվ\n\n# ցուցակ ա տված թվերի՝ եթե բոլորը կենտ են տպել բոլորը կենտ են, եթե չէ տպել որ կա զույց թիվ\n\ntver = [1, 1, 3, 4, 2, 5, 4]\n\nfor i in tver:\n    if i % 2 == 0:\n        print(\"զույգ թիվ կա\")\n        break\nelse:\n    print(\"Բոլորը կենտ են\")\n\n# if tver[0] % 2 == 0 or tver[1] % 2 == :\n#     print(\"զույգ թիվ կա\")\n# else:\n#     print(\"Բոլորը կենտ են\")\n\nզույգ թիվ կա\n\n\n\n\n6.4.0.2 Առաջադրանք 2\nՊարզել թիվը պարզ ա թե չէ\n\nn = int(input())\n\nbaj = 0\n\nfor i in range(2, n):\n    if n % i == 0:\n        print(\"պարզ չի\")\n        break\nelse:\n    print(\"պարզ\")\n\n113\nպարզ",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>For</span>"
    ]
  },
  {
    "objectID": "python/04_loops.html#continue-1",
    "href": "python/04_loops.html#continue-1",
    "title": "6  For",
    "section": "7.1 Continue",
    "text": "7.1 Continue\n\n# ToDO - something meaningful\n\ni = 0\n\nwhile i &lt; 6:\n    i += 1\n    if i == 3:\n        continue\n    print(i)\n\n1\n2\n4\n5\n6",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>For</span>"
    ]
  },
  {
    "objectID": "python/04_loops.html#while-else",
    "href": "python/04_loops.html#while-else",
    "title": "6  For",
    "section": "7.2 while else",
    "text": "7.2 while else\n\n7.2.0.1 Առաջադրանք 1\nՊարզել մուտքում տրված բոլոր թվերը կենտ են թե զույգ թիվ էլ կա\n\nder_ashxatum_enq = True\n\nwhile der_ashxatum_enq:\n    mutq = input()\n    if mutq == \"x\":\n        der_ashxatum_enq = False\n    else:\n        mutq = int(mutq)\n\n        if mutq % 2 == 0:\n            print(\"զույգ թիվ կա\")\n            break\nelse:\n    print(\"Բոլորը կենտ են\")\n\n3\n5\nx\nԲոլորը կենտ են",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>For</span>"
    ]
  },
  {
    "objectID": "math/01_lin_alg_vectors.html",
    "href": "math/01_lin_alg_vectors.html",
    "title": "Practice 1: Vectors",
    "section": "",
    "text": "8 Materials",
    "crumbs": [
      "Math | Group by week",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Practice 1: Vectors</span>"
    ]
  },
  {
    "objectID": "math/01_lin_alg_vectors.html#intro-01-vectors",
    "href": "math/01_lin_alg_vectors.html#intro-01-vectors",
    "title": "Practice 1: Vectors",
    "section": "8.1 00 Intro + 01 Vectors",
    "text": "8.1 00 Intro + 01 Vectors\n\n\n\n\n\n\nՍլայդներին զուգահեռ խորհուրդ ենք տալիս կարդալ Poole-ի գրքից 2-12 էջերը։ Բոլոր գրքերը դրված են այստեղ։\nՆաև խորհուրդ կտանք անպայման նայել նաև գծային հանրահաշվի մասին ֆանտաստիկ էս տեսաշարքը՝ առայժմ մենակ 1-ին դասը.\n(կամ նույնը հայերեն)\n\n\n\nIntro\n\n    Ոնց-որ թե չի ստացվում Ձեր մոտ pdf-ը արտածել.\n    Ուղղակի կտցրեք ստեղ ու ֆայլը քաշեք\n\nVectors\n\n    Ոնց-որ թե չի ստացվում Ձեր մոտ pdf-ը արտածել.\n    Ուղղակի կտցրեք ստեղ ու ֆայլը քաշեք",
    "crumbs": [
      "Math | Group by week",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Practice 1: Vectors</span>"
    ]
  },
  {
    "objectID": "math/01_lin_alg_vectors.html#geometry-of-vectors-matrices",
    "href": "math/01_lin_alg_vectors.html#geometry-of-vectors-matrices",
    "title": "Practice 1: Vectors",
    "section": "8.2 02 Geometry of Vectors, Matrices",
    "text": "8.2 02 Geometry of Vectors, Matrices\n\n\n\n\n\n\nՍլայդներին զուգահեռ խորհուրդ կտանք կարդալ Johnston-ի գրքից հետևյալ էջերը՝\n\nՆորմ - էջ 10-14\nԱնկյուն - էջ 16-19\nՄատրիցներ - էջ 20-25\nԳծային ձևափոխություններ - էջ 35-38\nՎեկտորական տարածություններ - էջ 121-124\n\nու էս ամեն ինչը վիզուալ պատկերացնելու համար՝ 3blue1brown-ի տեսանյութերից 3-րդը\n\n9 line break\nՑանկացած հարցի դեպքում գրեք։ Հնարավոր ա՝ գրքում որոշ տերմինների հանդիպեք, որոնք դեռ չենք անցել - էդ մասերը կարող եք հանգիստ առաջ անցնել (կամ անհայտ տերմինի սահմանումը կարդալ), հաջորդ դասերին կսովորենք դրանք։ Փորձեք նաև սլայդում դրած հղումներով (նաև սրանցով՝ 2x2, 2x2 նաև լուսանկար ձևափոխող, 3x3) բզբզալ տարբեր մատրիցների ազդեցությունը հարթության/տարածության վրա։ 🙂\n\n\n\n\n\n    Ոնց-որ թե չի ստացվում Ձեր մոտ pdf-ը արտածել.\n    Ուղղակի կտցրեք ստեղ ու ֆայլը քաշեք",
    "crumbs": [
      "Math | Group by week",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Practice 1: Vectors</span>"
    ]
  },
  {
    "objectID": "math/01_lin_alg_vectors.html#exercise-finding-a-perpendicular-vector",
    "href": "math/01_lin_alg_vectors.html#exercise-finding-a-perpendicular-vector",
    "title": "Practice 1: Vectors",
    "section": "11.1 Exercise: Finding a Perpendicular Vector",
    "text": "11.1 Exercise: Finding a Perpendicular Vector\nContext:\nIn linear algebra, two vectors are perpendicular (or orthogonal) if their dot product is zero. In this exercise, you will find a vector in \\(\\mathbb{R}^2\\) that is perpendicular to a given vector.\nGiven:\nLet \\(\\mathbf{v} = [2, 3]\\).\nTasks:\n\nFind a Perpendicular Vector:\n\nFind a non-zero vector \\(\\mathbf{w} = [x, y]\\) such that \\(\\mathbf{v}\\) and \\(\\mathbf{w}\\) are perpendicular.\n\nVerification:\n\nShow that your chosen vector \\(\\mathbf{w}\\) indeed satisfies the condition \\(\\mathbf{v} \\cdot \\mathbf{w} = 0\\).\n\nUnit Perpendicular Vector:\n\nFind a unit vector in the direction of \\(\\mathbf{w}\\) by computing \\(\\frac{\\mathbf{w}}{\\|\\mathbf{w}\\|}\\), where \\(\\|\\mathbf{w}\\|\\) is the Euclidean norm of \\(\\mathbf{w}\\).\n\nBonus Discussion:\n\nExplain why there are infinitely many vectors perpendicular to \\(\\mathbf{v}\\) and describe the general form of all such vectors.",
    "crumbs": [
      "Math | Group by week",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Practice 1: Vectors</span>"
    ]
  },
  {
    "objectID": "math/01_lin_alg_vectors.html#exercise-finding-the-closest-word-with-2d-embeddings",
    "href": "math/01_lin_alg_vectors.html#exercise-finding-the-closest-word-with-2d-embeddings",
    "title": "Practice 1: Vectors",
    "section": "11.2 Exercise: Finding the Closest Word with 2D Embeddings",
    "text": "11.2 Exercise: Finding the Closest Word with 2D Embeddings\nContext:\nIn NLP, words can be represented as vectors. Here, each word is represented by a 2-dimensional vector. By comparing these vectors using Euclidean distance and cosine similarity, you can determine which word is “closer” in meaning.\nGiven Word Embeddings:\n\ncheese: [1, 2]\nmushroom: [3, 1]\ntasty: [2, 2]\n\nTasks:\n\nEuclidean Distance:\n\na. Compute the Euclidean distance between tasty and cheese.\n\nb. Compute the Euclidean distance between tasty and mushroom.\n\nc. Which word is closer to tasty based on the Euclidean distance?\n\nCosine Similarity:\n\\[\n\\cos(\\theta)=\\frac{\\mathbf{u}\\cdot\\mathbf{v}}{\\|\\mathbf{u}\\|\\|\\mathbf{v}\\|}\n\\]\n\na. Compute the cosine similarity between tasty and cheese using the formula above.\nb. Compute the cosine similarity between tasty and mushroom.\n\nc. Based on cosine similarity, which word is closer to tasty?\n\nDiscussion:\n\nCompare the outcomes from the Euclidean distance and cosine similarity calculations.\n\nDiscuss why one metric might be preferred over the other in different NLP applications.\n\n\n\n\n\n\n\n\nNote\n\n\n\nCool video by 3blue1brown discussing word vectors (embeddings)",
    "crumbs": [
      "Math | Group by week",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Practice 1: Vectors</span>"
    ]
  },
  {
    "objectID": "math/01_lin_alg_vectors.html#exercise-linear-transformation-matrix-power",
    "href": "math/01_lin_alg_vectors.html#exercise-linear-transformation-matrix-power",
    "title": "Practice 1: Vectors",
    "section": "11.3 Exercise: Linear transformation matrix power",
    "text": "11.3 Exercise: Linear transformation matrix power\nTasks: 1. Matrix Power:\n- Compute the matrix power of the following matrix \\(A\\) to the power of \\(n\\): \\[\nA = \\begin{pmatrix}\n    2 & 0 \\\\\n    0 & -1\n\\end{pmatrix}\n\\] - What does the result represent in terms of linear transformations?",
    "crumbs": [
      "Math | Group by week",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Practice 1: Vectors</span>"
    ]
  },
  {
    "objectID": "math/01_lin_alg_vectors.html#exercise-subspace",
    "href": "math/01_lin_alg_vectors.html#exercise-subspace",
    "title": "Practice 1: Vectors",
    "section": "11.4 Exercise: Subspace",
    "text": "11.4 Exercise: Subspace\nTasks:\n\n\n\nsubspace_exercise",
    "crumbs": [
      "Math | Group by week",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Practice 1: Vectors</span>"
    ]
  },
  {
    "objectID": "math/01_lin_alg_vectors.html#exercise-vector-space",
    "href": "math/01_lin_alg_vectors.html#exercise-vector-space",
    "title": "Practice 1: Vectors",
    "section": "11.5 Exercise: Vector Space",
    "text": "11.5 Exercise: Vector Space\n\n\n\nPoole_vec_space\n\n\n\n\n\nvec_space_exercise",
    "crumbs": [
      "Math | Group by week",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Practice 1: Vectors</span>"
    ]
  }
]