[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Python Math & ML Course",
    "section": "",
    "text": "ToDo",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Python & Machine Learning Course</span>"
    ]
  },
  {
    "objectID": "python/01_P_L01_Print_comments_variables_numbers_input.html",
    "href": "python/01_P_L01_Print_comments_variables_numbers_input.html",
    "title": "2  L01 Intro: Print, Comments, Variables, Numbers, Input",
    "section": "",
    "text": "3 📚 Նյութը\nԴիլիջան, լուսանկարը\n(գուցե մի քիչ ավելի հին վերսիա լինի)\nprint(\"Բարևևևևևևև, եեեեերկիր\")\n(с) Shushan Petrosyan, Inga Anush Arshakyanner, Armen Martirosyan, Dodo Babayan",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>L01 Intro: Print, Comments, Variables, Numbers, Input</span>"
    ]
  },
  {
    "objectID": "python/01_P_L01_Print_comments_variables_numbers_input.html#արտածում-printտպել",
    "href": "python/01_P_L01_Print_comments_variables_numbers_input.html#արտածում-printտպել",
    "title": "2  L01 Intro: Print, Comments, Variables, Numbers, Input",
    "section": "3.1 Արտածում (Print(տպել))",
    "text": "3.1 Արտածում (Print(տպել))\nPython-ում թիվ արտածելու համար պարզապես գրում ենք print (տպել), ապա բաց փակագծերի մեջ թե ինչ թիվ ուզում արտածել\n\nprint(509)\n\n# print      (    509   )\n\n509\n\n\nնույն ձև կարող ենք նաև տեքստ արտածել (տպել)\n\nprint(\"panir\")\n# print(\"panir\") # կապ չունի մի չակերտ('') կդնենք թե երկու(\"\"), կարևորը նույն քանակությամբ\n\npanir\n\n\nԿարող ենք նաև միանգամից մի քանի բան տպել\n\nprint(\"Hello\", \"Malmo\")  # նկատենք որ արժեքները իրարից առանձնացվում են այս դեպքում բացատով, սրան դեռ կանդրադառնանք\n\nHello Malmo\n\n\n\nprint('Hello', \"Malmo\", 12, 'points go to')\n\nHello Malmo 12 points go to\n\n\nԿարող ենք տարբեր տողերի վրա գրել հրամանները և Python-ը վերևից ներքև կարդալով կկատարի հրամանները\n\nprint('Hello', 'Malmo', 12, 'points go to')\nprint('Armenia')\n\nHello Malmo 12 points go to\nArmenia\n\n\nԱռաջադրանք տպել “Hello World!” տեքստը և ուրախանալ\n\n\n\n\n\n\nHello World!\n\n\n\nprint(\"Hello World!\")\n\nHello World!\n\n\n\n3.1.1 sep\nեթե ուզում ենք որ արժեքները իրարից առանձնացվեն ոչթե բացատով այլ մեր ուզած բանով, ապա պետք է print հրամանի մեջ ավելացնենք՝ print('ինչ-որ բան', 'ինչ-որ ուրիշ բան', sep='¯\\_(ツ)_/¯')\nsep-ը գալիսա անգլերեն separator բառից, separate` բաժանել, separator՝ բաժանիչ կամ առանձնացնիչ (չգիտեմ ոնց թարգմանեմ :))\n\nprint('ինչ-որ բան', 'ինչ-որ ուրիշ բան')\nprint('ինչ-որ բան', 'ինչ-որ ուրիշ բան', sep=\" \")\nprint('ինչ-որ բան', 'ինչ-որ ուրիշ բան', sep='¯\\_(ツ)_/¯')\n\n# default -&gt; \" \"\n\nինչ-որ բան ինչ-որ ուրիշ բան\nինչ-որ բան ինչ-որ ուրիշ բան\nինչ-որ բան¯\\_(ツ)_/¯ինչ-որ ուրիշ բան\n\n\nՊարտադիր պետք ա ՝sep՝-ը նշենք վերջում\n\nprint('ինչ-որ բան', sep=\"*\", 'ինչ-որ ուրիշ բան')\n\n\n  Input In [10]\n    print('ինչ-որ բան', sep=\"*\", 'ինչ-որ ուրիշ բան')\n                                                   ^\nSyntaxError: positional argument follows keyword argument\n\n\n\n\n\n\n3.1.2 end\nՆաև կարող ենք նկատել որ եթե մի քանի տող print հրամաններ ունենք, ամեն մեկը արտածումա նոր տողի վրա՝ դա էլ կարող ենք փոխել\nPython-ում եթե ինչ-որ բան ուզում ենք նոր տողից տպել գրում ենք (n-ը new բառիցա) գալիս, իսկ նրա համարա որ Python-ը հասկանա որ սովորական n տառը չենք ուզում տպենք\n\nprint(\"aaaa\\nbbbb\")\n\nprint(\"aaaa\")\nprint(\"bbbb\")\n\naaaa\nbbbb\naaaa\nbbbb\n\n\n\nprint('ես առաջին տողի վրա եմ', end=\"\\n\")\nprint('ես էլ երկրորդ')\n\nես առաջին տողի վրա եմ\nես էլ երկրորդ\n\n\n\nprint('ես առաջին տողի վրա եմ', end=\"*\")\nprint('հեսա գամ կողքդ')\n\nես առաջին տողի վրա եմ*հեսա գամ կողքդ\n\n\nԻնչպես տեսանք վերևում sep պարամետրը ավելացնելով փոխում էինք թե ինչպես արժեքները իրարից առանձնացվեն մեկ print հրամանում իսկ end ով կփոխենք թե ինչպես տարբեր տողերի print-երը իրարից առանձնացվեն (կամ էլ ուղղակի մեր պրինտի վերջում կարտածենք ինչ ուզենք)\n\nprint('Hello', 'Malmo', 12, 'points go to', end='\\n') # սա այն տարբերակնա երբ end չենք տալիս (default տարբերակը)\nprint('Armenia')\n\nHello Malmo 12 points go to-Armenia\n\n\n\nprint('Hello', 'Malmo', 12, 'points go to', end='... դրամատիկ դադար ...', sep=\"-\")\nprint('Armenia')\n\nHello-Malmo-12-points go to... դրամատիկ դադար ...Armenia\n\n\nԱյս ամենը կարող ենք նաև միաժամանակ օգտագործել\n\nprint('ես առաջին print-ն եմ')\nprint('իմ վերջում կլինի 5 հատ աստղանիշով', end='*****')\nprint(3, 4, 1, 0, 'I love', 'կարգին հաղորդում')\nprint('հեսա ներևում կտպենք նույն վերևի տողը ուղղակի ամենինչ իրարից գծիկով առանձնացված կլինի ու վերջում էլ կգրենք շնորհավոր ամանոր')\nprint('ես երրորդ պրինտն եմ', 3, 4, 1, 0, 'I love', 'կարգին հաղորդում', sep='-', end='շնորհավոր ամանոր')\n\nես առաջին print-ն եմ\nիմ վերջում կլինի 5 հատ աստղանիշով*****3 4 1 0 I love կարգին հաղորդում\nհեսա ներևում կտպենք նույն վերևի տողը ուղղակի ամենինչ իրարից գծիկով առանձնացված կլինի ու վերջում էլ կգրենք շնորհավոր ամանոր\nես երրորդ պրինտն եմ-3-4-1-0-I love-կարգին հաղորդումշնորհավոր ամանոր\n\n\nՆկատենք որ 1. 3, 4, 1, 0 թվերը միանգամից երկրորդ տողում են *****-ներից հետո, ոչ թե նոր տողից 2. վերջին տողում հաղորդում բառից հետո - չկա",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>L01 Intro: Print, Comments, Variables, Numbers, Input</span>"
    ]
  },
  {
    "objectID": "python/01_P_L01_Print_comments_variables_numbers_input.html#comment-ներ-մեկնաբանություններ",
    "href": "python/01_P_L01_Print_comments_variables_numbers_input.html#comment-ներ-մեկնաբանություններ",
    "title": "2  L01 Intro: Print, Comments, Variables, Numbers, Input",
    "section": "3.2 Comment-ներ (մեկնաբանություններ)",
    "text": "3.2 Comment-ներ (մեկնաբանություններ)\nեթե ուզում ենք գրենք ծրագրի մասը որը նախատեսվածա մարդկանց համար (օրինակ հենց մեր), այլ ոչ թե համակարգչի դա կարող ենք անել այ սենց\n\nprint(1)\n# ես տեսանելի եմ ձեզ, բայց համակարգիչը ինձ չի տեսնում\nprint(2) # a\n\n1\n2\n\n\n\nprint(1)\n\"\"\"Triple quotes\nես մի քանի տողի վրա կարող եմ լինել,\nև մեկա\nկոդի աշխատելու վրա չեմ ազդի, բայց ես comment չեմ\n\"\"\"\nprint(2)\n\n1\n2",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>L01 Intro: Print, Comments, Variables, Numbers, Input</span>"
    ]
  },
  {
    "objectID": "python/01_P_L01_Print_comments_variables_numbers_input.html#փոփոխականներ-variables",
    "href": "python/01_P_L01_Print_comments_variables_numbers_input.html#փոփոխականներ-variables",
    "title": "2  L01 Intro: Print, Comments, Variables, Numbers, Input",
    "section": "3.3 Փոփոխականներ (Variables)",
    "text": "3.3 Փոփոխականներ (Variables)\nՓոփոխականների միջոցով կարող ենք արժեքը հարմար պահել հիշողությունում և ապագայում օգտագործենք (տետր, դարակի օրինակ)\n\na = \"points go to\"\nprint(a)\n\npoints go to\n138334359461680 138334359461680\n\n\n\n3.3.1 Փոփականների անվանում (Variable naming)\n\n# կարելիա\nmyvar = \"պանիր\" # var-ը variable-ի կարճնա ուղղակի\nmy_var = \"պանիր\" # snake case\n_my_var = \"պանիր\"\nmyVar = \"պանիր\" # camel case\nMYVAR = \"պանիր\"\nmyvar2 = \"պանիր\"\n\n# չի կարելի\n2myvar = \"պանիր\"\nmy-var = \"պանիր\"\nmy var = \"պանիր\"\n\n\n  File \"&lt;ipython-input-31-04740db77c5e&gt;\", line 10\n    2myvar = \"պանիր\"\n    ^\nSyntaxError: invalid decimal literal\n\n\n\n\n\nԹույատրվուվումա օգտագործել հետևյալ նիշերւ՝ A-z, 0-9, և _\nԵթե երկու բառից կազմված անունա պայմանավորվածությունակ առանձնացնել իրարից _-ով\nիրավունք չունենք սկսել անունտ թվող, բայց _ ով կարող ենք\nմեծատառ փոքրատառը կապ ունեն, NAME ու name-ը նույն բանը չեն\n\n\n\n3.3.2 Ամրագրված անուններ\nչենք կարող օգտագործել հետևյալ անունները\nFalse, def, if, raise, None, del, import, return, True, elif, in, try, and else, is, while, as, except, lambda, with, assert, finally, nonlocal, yield, break, for, not, class, from, or, continue, global, pass\nՉարժի օգտագործել՝ O, I, l շատ հեշտ ա շփոթել 0, 1-ի հետ\n\nTrue = 5\n\n\n  File \"&lt;ipython-input-30-cee96fa4ba6e&gt;\", line 1\n    True = 5\n    ^\nSyntaxError: cannot assign to True\n\n\n\n\n\nprint = 11\n\n\nprint(\"բարև\")\n\n\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n&lt;ipython-input-20-e01230acb4d4&gt; in &lt;cell line: 1&gt;()\n----&gt; 1 print(\"բարև\")\n\nTypeError: 'int' object is not callable\n\n\n\n\ndel print # ուղղենք արած սխալը\n\n\n\n3.3.3 Մի տողով մի քանի փոփոխաններիի արժեքներ վերագրել\n\na1 = 0\nb1 = 509\n\nprint(a1)\nprint(b1)\n\n11\n509\n\n\n\na, b = 0, 509\n\n\na, b, c = 0, 509 # քանակը պետք ա բռնի \n\n\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n&lt;ipython-input-24-f5cd553d87fa&gt; in &lt;cell line: 1&gt;()\n----&gt; 1 a, b, c = 11, 509\n\nValueError: not enough values to unpack (expected 3, got 2)\n\n\n\n\na = b = c = 0 # վտանգավոր ա\nprint(b)\n\n0",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>L01 Intro: Print, Comments, Variables, Numbers, Input</span>"
    ]
  },
  {
    "objectID": "python/01_P_L01_Print_comments_variables_numbers_input.html#թվեր-և-թվաբանական-գործողություններ",
    "href": "python/01_P_L01_Print_comments_variables_numbers_input.html#թվեր-և-թվաբանական-գործողություններ",
    "title": "2  L01 Intro: Print, Comments, Variables, Numbers, Input",
    "section": "3.4 Թվեր և թվաբանական գործողություններ",
    "text": "3.4 Թվեր և թվաբանական գործողություններ\n\n3.4.1 Թվերի տեսակներ\n\nInteger (ամբողջ թիվ)\nFloat (իրական թվեր, լողացող(float) ստորակետով)\nComplex (կոմպլեքս)\n\n\nprint(509, type(509))\nprint(1.2, type(1.2))\nprint(1.0, type(1.))\nprint(0.9, type(.9))\nprint(3 + 5j, type(3 + 5j))\n\n509 &lt;class 'int'&gt;\n1.2 &lt;class 'float'&gt;\n1.0 &lt;class 'float'&gt;\n0.9 &lt;class 'float'&gt;\n(3+5j) &lt;class 'complex'&gt;\n\n\n\n# կարող ենք թվի տեսակը փոխել այսպես\nprint(type(12.509))\nprint(int(12.509))\nprint(type(int(12.509)))\n\n&lt;class 'float'&gt;\n12\n&lt;class 'int'&gt;\n\n\n\na = 12\nprint(a, type(a))\nprint(float(a), type(float(a)))\n\n12 &lt;class 'int'&gt;\n12.0 &lt;class 'float'&gt;",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>L01 Intro: Print, Comments, Variables, Numbers, Input</span>"
    ]
  },
  {
    "objectID": "python/01_P_L01_Print_comments_variables_numbers_input.html#թվաբանական-գործողություններ",
    "href": "python/01_P_L01_Print_comments_variables_numbers_input.html#թվաբանական-գործողություններ",
    "title": "2  L01 Intro: Print, Comments, Variables, Numbers, Input",
    "section": "3.5 Թվաբանական գործողություններ",
    "text": "3.5 Թվաբանական գործողություններ\n\n3.5.1 Գումարում, հանում, բազմապատկում, սովորական և ամբողթիվ բաժանում, աստիճան բարձրացնել, մնացորդ\n\nprint(1+2+  53)\nprint(1 + 2 + 53)\nprint(1+2+53)\n\n56\n56\n56\n\n\n\nprint(1 - 4)\nprint(-5)\n\n-3\n-5\n\n\nՓոփոխականի տեսակ\n\na = 1 + 1\nprint(a, type(a))\n\nb = 1 + 2.1\nprint(b, type(b)) # int + float = float\n\nc = 1 + 2.0\nprint(c, type(c)) # եթե ուղղակի . դնենք արդեն float կդառնա\n\n2 &lt;class 'int'&gt;\n3.1 &lt;class 'float'&gt;\n3.0 &lt;class 'float'&gt;\n\n\nԻՆչի 0.1 + 0.2 կարա հավասար չլինի 0.3-ի: Լավ վիդեո դա բացատրող՝ https://www.youtube.com/watch?v=PZRI1IfStY0\n\nx = 1.0 + 2.0 \nprint(x)\nprint(type(x))\n\n3.0\n&lt;class 'float'&gt;\n\n\n\nprint(5 * 12)\nprint(5 * 12.0)\n\n60\n60.0\n\n\n\n# / - միշտ տալիս ա float\nprint(14 / 3)\nprint(14 / 2)\n\n4.666666666666667\n7.0\n\n\n\nprint(14 // 3) # int(14/3)\nprint(type(14//3))\n\n# 14 = 4 * 3 + 2\n# print(int(14/3))\n\n4\n&lt;class 'int'&gt;\n\n\n\nprint(-5 // 3) # ամբողջաթիվ բաժանում -5 = -2 * 3 + 1\n\n-2\n\n\n\nprint(7 % 2) # մնացորդ 7 = 3 * 2 + 1\n\n1\n\n\n\nprint(2**3) # էքսպոնենտ\n# 2 * 2 * 2\n\nprint(2**(1/2))\n\n8\n1.4142135623730951\n\n\n\n\n3.5.2 գործողությունների հերթականությունը\n\nprint(2 * (3 + 1)) # սկզբում փակագծի միջինը, հետո արտադրյալը\n\n8\n\n\n\nprint(2*3 + 1) # սկզբում բազմապատկում հետո գումարում\n\n7\n\n\n\n\n3.5.3 Ավելի կարճ վերագրելու ձև\n\ntariq = 18\nprint(tariq)\n\ntariq = tariq + 1\nprint(tariq)\n\n18\n19\n\n\n\ntariq = 18\ntariq = tariq + 1.5\n\nprint(tariq)\n\n\ntariq = 18\ntariq += 1.5 # նույննա ինչ tariq = tariq + 1.5\n\nprint(tariq)\n\n19.5\n19.5\n\n\n\nb = 4\n\nb *= 3 # b = b * 3\nprint(b)\n\nb //= 5\nprint(b)\n\n12\n2",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>L01 Intro: Print, Comments, Variables, Numbers, Input</span>"
    ]
  },
  {
    "objectID": "python/01_P_L01_Print_comments_variables_numbers_input.html#input",
    "href": "python/01_P_L01_Print_comments_variables_numbers_input.html#input",
    "title": "2  L01 Intro: Print, Comments, Variables, Numbers, Input",
    "section": "3.6 Input",
    "text": "3.6 Input\n\na = input()\nprint('Բարև', a)\n\nԲարև A\n\n\n\nprint(a)\n\nA\n\n\n\ninput()\n\n'a'\n\n\nՄի քանի մուտք\n\nanun = input(\"Enter your name: \")\nazganun = input()\n\nprint(anun)\nprint(azganun)\n\npanir\nPanrikyan\n\n\n\na = 1\nprint(a)\n\na = input()\nprint(a)\n\n1\npanir\n\n\nՊետք ա զգույշ լինենք տվյալների տեսակի հետ\n\nnum = input()\n\nprint(num + 2)\n\n\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\nInput In [48], in &lt;cell line: 3&gt;()\n      1 num = input()\n----&gt; 3 print(num + 2)\n\nTypeError: can only concatenate str (not \"int\") to str\n\n\n\n\nprint(num, type(num)) # input-ը միշտ տեքստ ա վերադարձնում\n\n1 &lt;class 'str'&gt;\n\n\n\ntiv = int(input())\n\nprint(type(tiv))\n\nprint(tiv + 1)\n\n&lt;class 'int'&gt;\n2\n\n\n\nnumber = int(input('Խնդրում ենք մուտքագրել թիվ'))\nprint(type(number))\nprint(number // 3)\n\n&lt;class 'int'&gt;\n4",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>L01 Intro: Print, Comments, Variables, Numbers, Input</span>"
    ]
  },
  {
    "objectID": "python/01_P_L01_Print_comments_variables_numbers_input.html#հիմնական-տնային",
    "href": "python/01_P_L01_Print_comments_variables_numbers_input.html#հիմնական-տնային",
    "title": "2  L01 Intro: Print, Comments, Variables, Numbers, Input",
    "section": "4.1 Հիմնական տնային",
    "text": "4.1 Հիմնական տնային\n\nProfound բաժին 1 (Մուտք և ելք)\nProfound բաժին 3 (Փոփոխականներ և ամբողջ թվեր)",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>L01 Intro: Print, Comments, Variables, Numbers, Input</span>"
    ]
  },
  {
    "objectID": "python/01_P_L01_Print_comments_variables_numbers_input.html#նշումներ",
    "href": "python/01_P_L01_Print_comments_variables_numbers_input.html#նշումներ",
    "title": "2  L01 Intro: Print, Comments, Variables, Numbers, Input",
    "section": "4.2 Նշումներ",
    "text": "4.2 Նշումներ\n\nՏնայինը անելիս մոտեցեք են սկզբունքով որ x խնդիրը լուծելիս դուք մենակ գիտեք են ամենինչը ինչ profound-ը մինչև x-ին հասնելը ներկայացրելա ա։ Երբեմն օգտագործող գործիքները սահմանափակելու դեպքում ա խնդիրը իսկականից օգուտ տալիս։ Օրինակի համար եթե խնդիր լինի որտեղ պետք ա սորտավորել թվերը ու դուք գիտեք sort հրամանի մասին՝ է հա, կարաք օգտագործեք էդ հրամանը, խնդիրը լուծվի՝ բայց արդյունքում նորմալ չեք սովորի էլի։\nԵթե քիչ ժամանակ ունեք կարաք բաց թողեք Բաժին 1 - 5, 6, 14 խնդիրները\nԲաժին 3 13-ում պետք ա զուտ ցանկացած թիվ տպեք\nԲաժին 3-ի վերջին երկու խնդիրները լիքը բզբզալու են, խորհուրդ կտամ շատ ժամանակ տրամադրեք իրենց\nProfound-ը ներկայացնող վիդեո՝ [TODO]\nՇուտ եմ ասել GPT ու նման գործիքներից օգտվել չկա\nԵթե հարցեր լինի՝ անպայման խաբար արեք (կառալյոկի պահը հիշեք)",
    "crumbs": [
      "Python",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>L01 Intro: Print, Comments, Variables, Numbers, Input</span>"
    ]
  },
  {
    "objectID": "math/01_lin_alg_vectors.html",
    "href": "math/01_lin_alg_vectors.html",
    "title": "Practice 1: Vectors",
    "section": "",
    "text": "4 Materials",
    "crumbs": [
      "Math | Group by week",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Practice 1: Vectors</span>"
    ]
  },
  {
    "objectID": "math/01_lin_alg_vectors.html#intro-01-vectors",
    "href": "math/01_lin_alg_vectors.html#intro-01-vectors",
    "title": "Practice 1: Vectors",
    "section": "4.1 00 Intro + 01 Vectors",
    "text": "4.1 00 Intro + 01 Vectors\n\n\n\n\n\n\nՍլայդներին զուգահեռ խորհուրդ ենք տալիս կարդալ Poole-ի գրքից 2-12 էջերը։ Բոլոր գրքերը դրված են այստեղ։\nՆաև խորհուրդ կտանք անպայման նայել նաև գծային հանրահաշվի մասին ֆանտաստիկ էս տեսաշարքը՝ առայժմ մենակ 1-ին դասը.\n(կամ նույնը հայերեն)\n\n\n\nIntro\n\n    Ոնց-որ թե չի ստացվում Ձեր մոտ pdf-ը արտածել.\n    Ուղղակի կտցրեք ստեղ ու ֆայլը քաշեք\n\nVectors\n\n    Ոնց-որ թե չի ստացվում Ձեր մոտ pdf-ը արտածել.\n    Ուղղակի կտցրեք ստեղ ու ֆայլը քաշեք",
    "crumbs": [
      "Math | Group by week",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Practice 1: Vectors</span>"
    ]
  },
  {
    "objectID": "math/01_lin_alg_vectors.html#geometry-of-vectors-matrices",
    "href": "math/01_lin_alg_vectors.html#geometry-of-vectors-matrices",
    "title": "Practice 1: Vectors",
    "section": "4.2 02 Geometry of Vectors, Matrices",
    "text": "4.2 02 Geometry of Vectors, Matrices\n\n\n\n\n\n\nՍլայդներին զուգահեռ խորհուրդ կտանք կարդալ Johnston-ի գրքից հետևյալ էջերը՝\n\nՆորմ - էջ 10-14\nԱնկյուն - էջ 16-19\nՄատրիցներ - էջ 20-25\nԳծային ձևափոխություններ - էջ 35-38\nՎեկտորական տարածություններ - էջ 121-124\n\nու էս ամեն ինչը վիզուալ պատկերացնելու համար՝ 3blue1brown-ի տեսանյութերից 3-րդը\n\n5 line break\nՑանկացած հարցի դեպքում գրեք։ Հնարավոր ա՝ գրքում որոշ տերմինների հանդիպեք, որոնք դեռ չենք անցել - էդ մասերը կարող եք հանգիստ առաջ անցնել (կամ անհայտ տերմինի սահմանումը կարդալ), հաջորդ դասերին կսովորենք դրանք։ Փորձեք նաև սլայդում դրած հղումներով (նաև սրանցով՝ 2x2, 2x2 նաև լուսանկար ձևափոխող, 3x3) բզբզալ տարբեր մատրիցների ազդեցությունը հարթության/տարածության վրա։ 🙂\n\n\n\n\n\n    Ոնց-որ թե չի ստացվում Ձեր մոտ pdf-ը արտածել.\n    Ուղղակի կտցրեք ստեղ ու ֆայլը քաշեք",
    "crumbs": [
      "Math | Group by week",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Practice 1: Vectors</span>"
    ]
  },
  {
    "objectID": "math/01_lin_alg_vectors.html#exercise-finding-a-perpendicular-vector",
    "href": "math/01_lin_alg_vectors.html#exercise-finding-a-perpendicular-vector",
    "title": "Practice 1: Vectors",
    "section": "7.1 Exercise: Finding a Perpendicular Vector",
    "text": "7.1 Exercise: Finding a Perpendicular Vector\nContext:\nIn linear algebra, two vectors are perpendicular (or orthogonal) if their dot product is zero. In this exercise, you will find a vector in \\(\\mathbb{R}^2\\) that is perpendicular to a given vector.\nGiven:\nLet \\(\\mathbf{v} = [2, 3]\\).\nTasks:\n\nFind a Perpendicular Vector:\n\nFind a non-zero vector \\(\\mathbf{w} = [x, y]\\) such that \\(\\mathbf{v}\\) and \\(\\mathbf{w}\\) are perpendicular.\n\nVerification:\n\nShow that your chosen vector \\(\\mathbf{w}\\) indeed satisfies the condition \\(\\mathbf{v} \\cdot \\mathbf{w} = 0\\).\n\nUnit Perpendicular Vector:\n\nFind a unit vector in the direction of \\(\\mathbf{w}\\) by computing \\(\\frac{\\mathbf{w}}{\\|\\mathbf{w}\\|}\\), where \\(\\|\\mathbf{w}\\|\\) is the Euclidean norm of \\(\\mathbf{w}\\).\n\nBonus Discussion:\n\nExplain why there are infinitely many vectors perpendicular to \\(\\mathbf{v}\\) and describe the general form of all such vectors.",
    "crumbs": [
      "Math | Group by week",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Practice 1: Vectors</span>"
    ]
  },
  {
    "objectID": "math/01_lin_alg_vectors.html#exercise-finding-the-closest-word-with-2d-embeddings",
    "href": "math/01_lin_alg_vectors.html#exercise-finding-the-closest-word-with-2d-embeddings",
    "title": "Practice 1: Vectors",
    "section": "7.2 Exercise: Finding the Closest Word with 2D Embeddings",
    "text": "7.2 Exercise: Finding the Closest Word with 2D Embeddings\nContext:\nIn NLP, words can be represented as vectors. Here, each word is represented by a 2-dimensional vector. By comparing these vectors using Euclidean distance and cosine similarity, you can determine which word is “closer” in meaning.\nGiven Word Embeddings:\n\ncheese: [1, 2]\nmushroom: [3, 1]\ntasty: [2, 2]\n\nTasks:\n\nEuclidean Distance:\n\na. Compute the Euclidean distance between tasty and cheese.\n\nb. Compute the Euclidean distance between tasty and mushroom.\n\nc. Which word is closer to tasty based on the Euclidean distance?\n\nCosine Similarity:\n\\[\n\\cos(\\theta)=\\frac{\\mathbf{u}\\cdot\\mathbf{v}}{\\|\\mathbf{u}\\|\\|\\mathbf{v}\\|}\n\\]\n\na. Compute the cosine similarity between tasty and cheese using the formula above.\nb. Compute the cosine similarity between tasty and mushroom.\n\nc. Based on cosine similarity, which word is closer to tasty?\n\nDiscussion:\n\nCompare the outcomes from the Euclidean distance and cosine similarity calculations.\n\nDiscuss why one metric might be preferred over the other in different NLP applications.\n\n\n\n\n\n\n\n\nNote\n\n\n\nCool video by 3blue1brown discussing word vectors (embeddings)",
    "crumbs": [
      "Math | Group by week",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Practice 1: Vectors</span>"
    ]
  },
  {
    "objectID": "math/01_lin_alg_vectors.html#exercise-linear-transformation-matrix-power",
    "href": "math/01_lin_alg_vectors.html#exercise-linear-transformation-matrix-power",
    "title": "Practice 1: Vectors",
    "section": "7.3 Exercise: Linear transformation matrix power",
    "text": "7.3 Exercise: Linear transformation matrix power\nTasks: 1. Matrix Power:\n- Compute the matrix power of the following matrix \\(A\\) to the power of \\(n\\): \\[\nA = \\begin{pmatrix}\n    2 & 0 \\\\\n    0 & -1\n\\end{pmatrix}\n\\] - What does the result represent in terms of linear transformations?",
    "crumbs": [
      "Math | Group by week",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Practice 1: Vectors</span>"
    ]
  },
  {
    "objectID": "math/01_lin_alg_vectors.html#exercise-subspace",
    "href": "math/01_lin_alg_vectors.html#exercise-subspace",
    "title": "Practice 1: Vectors",
    "section": "7.4 Exercise: Subspace",
    "text": "7.4 Exercise: Subspace\nTasks:\n\n\n\nsubspace_exercise",
    "crumbs": [
      "Math | Group by week",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Practice 1: Vectors</span>"
    ]
  },
  {
    "objectID": "math/01_lin_alg_vectors.html#exercise-vector-space",
    "href": "math/01_lin_alg_vectors.html#exercise-vector-space",
    "title": "Practice 1: Vectors",
    "section": "7.5 Exercise: Vector Space",
    "text": "7.5 Exercise: Vector Space\n\n\n\nPoole_vec_space\n\n\n\n\n\nvec_space_exercise",
    "crumbs": [
      "Math | Group by week",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Practice 1: Vectors</span>"
    ]
  }
]