#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
ü•ô ‘µ÷Ä÷á’°’∂’µ’°’∂ ’á’°’∏÷Ç÷Ä’¥’° API - ‘±’¥’•’∂’°’∫’°÷Ä’¶ ÷Ö÷Ä’´’∂’°’Ø’∂’•÷Ä
==========================================

‘±’µ’Ω ÷Ü’°’µ’¨’® ÷Å’∏÷Ç’µ÷Å ’ß ’ø’°’¨’´’Ω FastAPI Shawarma API-’´ ÷Ö’£’ø’°’£’∏÷Ä’Æ’∏÷Ç’¥’® ’∫’°÷Ä’¶ ’Ø’∏’§’∏’æ:

üöÄ ’Ü’°’≠’°’∫’•’Ω ’£’∏÷Ä’Æ’°÷Ä’Ø’•÷Ñ FastAPI ’Ω’•÷Ä’æ’•÷Ä’®:
   python fastapi_shawarma.py

üìã Endpoints-’∂’•÷Ä:
- GET /               - ‘≥’¨’≠’°’æ’∏÷Ä ’ß’ª
- GET /menu          - ’ë’°’∂’Ø’´ ’Ω’ø’°÷Å’∏÷Ç’¥  
- POST /orders       - ’Ü’∏÷Ä ’∫’°’ø’æ’•÷Ä ’Ω’ø’•’≤’Æ’∏÷Ç’¥
- GET /orders/{id}   - ’Ñ’•’Ø ’∫’°’ø’æ’•÷Ä’´ ’ø’æ’µ’°’¨’∂’•÷Ä
- GET /orders        - ‘≤’∏’¨’∏÷Ä ’∫’°’ø’æ’•÷Ä’∂’•÷Ä’®
- PUT /orders/{id}   - ’ä’°’ø’æ’•÷Ä’® ÷É’∏’≠’•’¨
- DELETE /orders/{id} - ’ä’°’ø’æ’•÷Ä’® ’π’•’≤’°÷Ä’Ø’•’¨
"""

import asyncio
import aiohttp
import json

# === ’ï’ê‘ª’Ü‘±‘ø 1: GET / - ‘≥’¨’≠’°’æ’∏÷Ä ’ß’ª ===
async def example_1_root():
    print("üî∏ ’ï’ê‘ª’Ü‘±‘ø 1: ‘≥’¨’≠’°’æ’∏÷Ä ’ß’ª")
    print("=" * 40)
    
    async with aiohttp.ClientSession() as session:
        async with session.get('http://localhost:8000/') as response:
            result = await response.json()
            print(f"Status: {response.status}")
            print(f"Response: {json.dumps(result, indent=2, ensure_ascii=False)}")

# === ’ï’ê‘ª’Ü‘±‘ø 2: GET /menu - ’Ñ’•’∂’∏÷Ç ===
async def example_2_menu():
    print("\nüî∏ ’ï’ê‘ª’Ü‘±‘ø 2: ’Ñ’•’∂’∏÷Ç")
    print("=" * 40)
    
    async with aiohttp.ClientSession() as session:
        async with session.get('http://localhost:8000/menu') as response:
            result = await response.json()
            print(f"Status: {response.status}")
            print(f"Response: {json.dumps(result, indent=2, ensure_ascii=False)}")

# === ’ï’ê‘ª’Ü‘±‘ø 3: POST /orders - ’Ü’∏÷Ä ’∫’°’ø’æ’•÷Ä ===
async def example_3_create_order():
    print("\nüî∏ ’ï’ê‘ª’Ü‘±‘ø 3: ’Ü’∏÷Ä ’∫’°’ø’æ’•÷Ä ’Ω’ø’•’≤’Æ’•’¨")
    print("=" * 40)
    
    order_data = {
        "customer_name": "‘±÷Ä’°’¥",
        "items": ["’∞’°’æ’∏’æ", "’ø’°’æ’°÷Ä’∏’æ"],
        "special_requests": "‘Ω’∂’§÷Ä’∏÷Ç’¥ ’•’¥ ’∑’°’ø ’Ω’∏’≠"
    }
    
    async with aiohttp.ClientSession() as session:
        async with session.post('http://localhost:8000/orders', json=order_data) as response:
            result = await response.json()
            print(f"Status: {response.status}")
            print(f"Response: {json.dumps(result, indent=2, ensure_ascii=False)}")
            
            # ’ä’°’ø’æ’•÷Ä’´ ID-’∂ ’æ’•÷Ä’°’§’°÷Ä’±’∂’•’∂÷Ñ ’∞’•’ø’°’£’° ÷Ö’£’ø’°’£’∏÷Ä’Æ’¥’°’∂ ’∞’°’¥’°÷Ä
            if 'order' in result and 'id' in result['order']:
                return result['order']['id']
    return None

# === ’ï’ê‘ª’Ü‘±‘ø 4: GET /orders/{id} - ‘ø’∏’∂’Ø÷Ä’•’ø ’∫’°’ø’æ’•÷Ä ===
async def example_4_get_order(order_id):
    print(f"\nüî∏ ’ï’ê‘ª’Ü‘±‘ø 4: ’ä’°’ø’æ’•÷Ä #{order_id} ’Ω’ø’∏÷Ç’£’•’¨")
    print("=" * 40)
    
    async with aiohttp.ClientSession() as session:
        async with session.get(f'http://localhost:8000/orders/{order_id}') as response:
            result = await response.json()
            print(f"Status: {response.status}")
            print(f"Response: {json.dumps(result, indent=2, ensure_ascii=False)}")

# === ’ï’ê‘ª’Ü‘±‘ø 5: GET /orders - ‘≤’∏’¨’∏÷Ä ’∫’°’ø’æ’•÷Ä’∂’•÷Ä’® ===
async def example_5_all_orders():
    print("\nüî∏ ’ï’ê‘ª’Ü‘±‘ø 5: ‘≤’∏’¨’∏÷Ä ’∫’°’ø’æ’•÷Ä’∂’•÷Ä’®")
    print("=" * 40)
    
    async with aiohttp.ClientSession() as session:
        async with session.get('http://localhost:8000/orders') as response:
            result = await response.json()
            print(f"Status: {response.status}")
            print(f"Response: {json.dumps(result, indent=2, ensure_ascii=False)}")

# === ’ï’ê‘ª’Ü‘±‘ø 6: PUT /orders/{id} - ’ä’°’ø’æ’•÷Ä’® ÷É’∏’≠’•’¨ ===
async def example_6_update_order(order_id):
    print(f"\nüî∏ ’ï’ê‘ª’Ü‘±‘ø 6: ’ä’°’ø’æ’•÷Ä #{order_id} ÷É’∏’≠’•’¨")
    print("=" * 40)
    
    new_items = ["’∞’°’ø’∏÷Ç’Ø"]  # ’ì’∏’≠’•’∂÷Ñ ’∞’°’ø’∏÷Ç’Ø ’∑’°’∏÷Ç÷Ä’¥’°’µ’´
    
    async with aiohttp.ClientSession() as session:
        async with session.put(f'http://localhost:8000/orders/{order_id}', json=new_items) as response:
            result = await response.json()
            print(f"Status: {response.status}")
            print(f"Response: {json.dumps(result, indent=2, ensure_ascii=False)}")

# === ’ï’ê‘ª’Ü‘±‘ø 7: DELETE /orders/{id} - ’ä’°’ø’æ’•÷Ä’® ’π’•’≤’°÷Ä’Ø’•’¨ ===
async def example_7_delete_order(order_id):
    print(f"\nüî∏ ’ï’ê‘ª’Ü‘±‘ø 7: ’ä’°’ø’æ’•÷Ä #{order_id} ’π’•’≤’°÷Ä’Ø’•’¨")
    print("=" * 40)
    
    async with aiohttp.ClientSession() as session:
        async with session.delete(f'http://localhost:8000/orders/{order_id}') as response:
            result = await response.json()
            print(f"Status: {response.status}")
            print(f"Response: {json.dumps(result, indent=2, ensure_ascii=False)}")

# === ‘≥‘º‘Ω‘±’é’à’ê ’ë’à’í’ë‘±‘¥’ê’à’í‘π’Ö’à’í’Ü ===
async def main():
    print("ü•ô ‘µ’ê‘µ’é‘±’Ü’Ö‘±’Ü ’á‘±’à’í’ê’Ñ‘± API - ’ä‘±’ê‘∂ ’ï’ê‘ª’Ü‘±‘ø’Ü‘µ’ê")
    print("=" * 60)
    
    try:
        # 1. ‘≥’¨’≠’°’æ’∏÷Ä ’ß’ª
        await example_1_root()
        await asyncio.sleep(1)
        
        # 2. ’Ñ’•’∂’∏÷Ç
        await example_2_menu()
        await asyncio.sleep(1)
        
        # 3. ’Ü’∏÷Ä ’∫’°’ø’æ’•÷Ä
        order_id = await example_3_create_order()
        await asyncio.sleep(1)
        
        # 4. ‘ø’∏’∂’Ø÷Ä’•’ø ’∫’°’ø’æ’•÷Ä (’•’©’• ’Ω’ø’•’≤’Æ’æ’•÷Å)
        if order_id:
            await example_4_get_order(order_id)
            await asyncio.sleep(1)
            
            # 5. ‘≤’∏’¨’∏÷Ä ’∫’°’ø’æ’•÷Ä’∂’•÷Ä’®
            await example_5_all_orders()
            await asyncio.sleep(1)
            
            # 6. ’ä’°’ø’æ’•÷Ä’® ÷É’∏’≠’•’¨
            await example_6_update_order(order_id)
            await asyncio.sleep(1)
            
            # 7. ’ä’°’ø’æ’•÷Ä’® ’π’•’≤’°÷Ä’Ø’•’¨
            await example_7_delete_order(order_id)
        
        print("\n‚úÖ ‘≤’∏’¨’∏÷Ä ÷Ö÷Ä’´’∂’°’Ø’∂’•÷Ä’® ’°’æ’°÷Ä’ø’æ’•÷Å’´’∂!")
        
    except aiohttp.ClientConnectorError:
        print("\n‚ùå ’ç’•÷Ä’æ’•÷Ä’® ’π’´ ’£’∏÷Ä’Æ’∏÷Ç’¥!")
        print("üí° ‘Ω’∂’§÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’∂’°’≠ ’£’∏÷Ä’Æ’°÷Ä’Ø’•’¨: python fastapi_shawarma.py")
    except Exception as e:
        print(f"\n‚ùå ’ç’≠’°’¨: {e}")

# === CURL ’ï’ê‘ª’Ü‘±‘ø’Ü‘µ’ê ===
def show_curl_examples():
    print("üìã CURL ’ï’ê‘ª’Ü‘±‘ø’Ü‘µ’ê")
    print("=" * 50)
    
    examples = [
        ("1. ‘≥’¨’≠’°’æ’∏÷Ä ’ß’ª", "curl http://localhost:8000/"),
        ("2. ’Ñ’•’∂’∏÷Ç", "curl http://localhost:8000/menu"),
        ("3. ’Ü’∏÷Ä ’∫’°’ø’æ’•÷Ä", 'curl -X POST "http://localhost:8000/orders" -H "Content-Type: application/json" -d \'{"customer_name": "‘±÷Ä’°’¥", "items": ["’∞’°’æ’∏’æ"]}\''),
        ("4. ‘≤’∏’¨’∏÷Ä ’∫’°’ø’æ’•÷Ä’∂’•÷Ä’®", "curl http://localhost:8000/orders"),
        ("5. ‘ø’∏’∂’Ø÷Ä’•’ø ’∫’°’ø’æ’•÷Ä", "curl http://localhost:8000/orders/1"),
        ("6. ’ä’°’ø’æ’•÷Ä’® ÷É’∏’≠’•’¨", 'curl -X PUT "http://localhost:8000/orders/1" -H "Content-Type: application/json" -d \'["’ø’°’æ’°÷Ä’∏’æ"]\''),
        ("7. ’ä’°’ø’æ’•÷Ä’® ’π’•’≤’°÷Ä’Ø’•’¨", "curl -X DELETE http://localhost:8000/orders/1")
    ]
    
    for title, command in examples:
        print(f"\nüî∏ {title}")
        print(f"   {command}")

if __name__ == "__main__":
    import sys
    
    if len(sys.argv) > 1 and sys.argv[1] == "curl":
        show_curl_examples()
    else:
        try:
            asyncio.run(main())
        except KeyboardInterrupt:
            print("\n\n‚èπÔ∏è  ’ë’∏÷Ç÷Å’°’§÷Ä’∏÷Ç’©’µ’∏÷Ç’∂’® ’§’°’§’°÷Ä’•÷Å’æ’•÷Å")
        except Exception as e:
            print(f"\n‚ùå ’ç’≠’°’¨: {e}")



